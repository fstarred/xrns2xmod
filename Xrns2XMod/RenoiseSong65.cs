//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
public partial class RenoiseSong {
    
    private GlobalSongData globalSongDataField;
    
    private RenoiseSongScriptingToolData scriptingToolDataField;
    
    private RecordManager recordManagerField;
    
    private MidiMapper midiMapperField;
    
    private OscMapper oscMapperField;
    
    private RenoiseSongInstruments instrumentsField;
    
    private int selectedInstrumentIndexField;
    
    private MidiInputRoutingTable midiInputRoutingField;
    
    private RenoiseSongTracks tracksField;
    
    private int selectedTrackIndexField;
    
    private int spectrumTrackDisplayAField;
    
    private int spectrumTrackDisplayBField;
    
    private PatternPool patternPoolField;
    
    private PatternSequence patternSequenceField;
    
    private RenoiseSongLastSoloedOutMode lastSoloedOutModeField;
    
    private int doc_versionField;
    
    private string typeField;
    
    public RenoiseSong() {
        this.selectedInstrumentIndexField = 0;
        this.selectedTrackIndexField = 0;
        this.spectrumTrackDisplayAField = -2;
        this.spectrumTrackDisplayBField = -1;
        this.lastSoloedOutModeField = RenoiseSongLastSoloedOutMode.Active;
        this.doc_versionField = 65;
    }
    
    /// <remarks/>
    public GlobalSongData GlobalSongData {
        get {
            return this.globalSongDataField;
        }
        set {
            this.globalSongDataField = value;
        }
    }
    
    /// <remarks/>
    public RenoiseSongScriptingToolData ScriptingToolData {
        get {
            return this.scriptingToolDataField;
        }
        set {
            this.scriptingToolDataField = value;
        }
    }
    
    /// <remarks/>
    public RecordManager RecordManager {
        get {
            return this.recordManagerField;
        }
        set {
            this.recordManagerField = value;
        }
    }
    
    /// <remarks/>
    public MidiMapper MidiMapper {
        get {
            return this.midiMapperField;
        }
        set {
            this.midiMapperField = value;
        }
    }
    
    /// <remarks/>
    public OscMapper OscMapper {
        get {
            return this.oscMapperField;
        }
        set {
            this.oscMapperField = value;
        }
    }
    
    /// <remarks/>
    public RenoiseSongInstruments Instruments {
        get {
            return this.instrumentsField;
        }
        set {
            this.instrumentsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int SelectedInstrumentIndex {
        get {
            return this.selectedInstrumentIndexField;
        }
        set {
            this.selectedInstrumentIndexField = value;
        }
    }
    
    /// <remarks/>
    public MidiInputRoutingTable MidiInputRouting {
        get {
            return this.midiInputRoutingField;
        }
        set {
            this.midiInputRoutingField = value;
        }
    }
    
    /// <remarks/>
    public RenoiseSongTracks Tracks {
        get {
            return this.tracksField;
        }
        set {
            this.tracksField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int SelectedTrackIndex {
        get {
            return this.selectedTrackIndexField;
        }
        set {
            this.selectedTrackIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-2)]
    public int SpectrumTrackDisplayA {
        get {
            return this.spectrumTrackDisplayAField;
        }
        set {
            this.spectrumTrackDisplayAField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SpectrumTrackDisplayB {
        get {
            return this.spectrumTrackDisplayBField;
        }
        set {
            this.spectrumTrackDisplayBField = value;
        }
    }
    
    /// <remarks/>
    public PatternPool PatternPool {
        get {
            return this.patternPoolField;
        }
        set {
            this.patternPoolField = value;
        }
    }
    
    /// <remarks/>
    public PatternSequence PatternSequence {
        get {
            return this.patternSequenceField;
        }
        set {
            this.patternSequenceField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(RenoiseSongLastSoloedOutMode.Active)]
    public RenoiseSongLastSoloedOutMode LastSoloedOutMode {
        get {
            return this.lastSoloedOutModeField;
        }
        set {
            this.lastSoloedOutModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int doc_version {
        get {
            return this.doc_versionField;
        }
        set {
            this.doc_versionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GlobalSongData {
    
    private float beatsPerMinField;
    
    private int linesPerBeatField;
    
    private int ticksPerLineField;
    
    private int signatureNumeratorField;
    
    private int signatureDenominatorField;
    
    private int metronomeBeatsPerBarField;
    
    private int metronomeLinesPerBeatField;
    
    private bool shuffleIsActiveField;
    
    private int[] shuffleAmountsField;
    
    private int octaveField;
    
    private int loopCoeffField;
    
    private string songNameField;
    
    private string artistField;
    
    private string[] songCommentsField;
    
    private bool showSongCommentsAfterLoadingField;
    
    private bool showUsedAutomationsOnlyField;
    
    private bool followAutomationsField;
    
    private bool sampleOffsetCompatibilityModeField;
    
    private bool pitchEffectsCompatibilityModeField;
    
    private float globalTrackHeadroomField;
    
    private int playbackEngineVersionField;
    
    private int renderSelectionNameCounterField;
    
    private int recordSampleNameCounterField;
    
    private int newSampleNameCounterField;
    
    private string typeField;
    
    public GlobalSongData() {
        this.beatsPerMinField = ((float)(80F));
        this.linesPerBeatField = 4;
        this.ticksPerLineField = 12;
        this.signatureNumeratorField = 4;
        this.signatureDenominatorField = 4;
        this.metronomeBeatsPerBarField = 4;
        this.metronomeLinesPerBeatField = 0;
        this.shuffleIsActiveField = false;
        this.octaveField = 3;
        this.loopCoeffField = 4;
        this.songNameField = "Untitled";
        this.artistField = "Somebody";
        this.showSongCommentsAfterLoadingField = false;
        this.showUsedAutomationsOnlyField = false;
        this.followAutomationsField = true;
        this.sampleOffsetCompatibilityModeField = false;
        this.pitchEffectsCompatibilityModeField = false;
        this.globalTrackHeadroomField = ((float)(0.5011872F));
        this.playbackEngineVersionField = 6;
        this.renderSelectionNameCounterField = 0;
        this.recordSampleNameCounterField = 0;
        this.newSampleNameCounterField = 0;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "80")]
    public float BeatsPerMin {
        get {
            return this.beatsPerMinField;
        }
        set {
            this.beatsPerMinField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int LinesPerBeat {
        get {
            return this.linesPerBeatField;
        }
        set {
            this.linesPerBeatField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(12)]
    public int TicksPerLine {
        get {
            return this.ticksPerLineField;
        }
        set {
            this.ticksPerLineField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int SignatureNumerator {
        get {
            return this.signatureNumeratorField;
        }
        set {
            this.signatureNumeratorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int SignatureDenominator {
        get {
            return this.signatureDenominatorField;
        }
        set {
            this.signatureDenominatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int MetronomeBeatsPerBar {
        get {
            return this.metronomeBeatsPerBarField;
        }
        set {
            this.metronomeBeatsPerBarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int MetronomeLinesPerBeat {
        get {
            return this.metronomeLinesPerBeatField;
        }
        set {
            this.metronomeLinesPerBeatField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ShuffleIsActive {
        get {
            return this.shuffleIsActiveField;
        }
        set {
            this.shuffleIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ShuffleAmount", IsNullable=false)]
    public int[] ShuffleAmounts {
        get {
            return this.shuffleAmountsField;
        }
        set {
            this.shuffleAmountsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(3)]
    public int Octave {
        get {
            return this.octaveField;
        }
        set {
            this.octaveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int LoopCoeff {
        get {
            return this.loopCoeffField;
        }
        set {
            this.loopCoeffField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string SongName {
        get {
            return this.songNameField;
        }
        set {
            this.songNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Somebody")]
    public string Artist {
        get {
            return this.artistField;
        }
        set {
            this.artistField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SongComment", IsNullable=false)]
    public string[] SongComments {
        get {
            return this.songCommentsField;
        }
        set {
            this.songCommentsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ShowSongCommentsAfterLoading {
        get {
            return this.showSongCommentsAfterLoadingField;
        }
        set {
            this.showSongCommentsAfterLoadingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ShowUsedAutomationsOnly {
        get {
            return this.showUsedAutomationsOnlyField;
        }
        set {
            this.showUsedAutomationsOnlyField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool FollowAutomations {
        get {
            return this.followAutomationsField;
        }
        set {
            this.followAutomationsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SampleOffsetCompatibilityMode {
        get {
            return this.sampleOffsetCompatibilityModeField;
        }
        set {
            this.sampleOffsetCompatibilityModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PitchEffectsCompatibilityMode {
        get {
            return this.pitchEffectsCompatibilityModeField;
        }
        set {
            this.pitchEffectsCompatibilityModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5011872")]
    public float GlobalTrackHeadroom {
        get {
            return this.globalTrackHeadroomField;
        }
        set {
            this.globalTrackHeadroomField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(6)]
    public int PlaybackEngineVersion {
        get {
            return this.playbackEngineVersionField;
        }
        set {
            this.playbackEngineVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int RenderSelectionNameCounter {
        get {
            return this.renderSelectionNameCounterField;
        }
        set {
            this.renderSelectionNameCounterField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int RecordSampleNameCounter {
        get {
            return this.recordSampleNameCounterField;
        }
        set {
            this.recordSampleNameCounterField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NewSampleNameCounter {
        get {
            return this.newSampleNameCounterField;
        }
        set {
            this.newSampleNameCounterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternSequenceSelection {
    
    private int cursorPosField;
    
    private int rangePosField;
    
    private string typeField;
    
    public PatternSequenceSelection() {
        this.cursorPosField = -1;
        this.rangePosField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int CursorPos {
        get {
            return this.cursorPosField;
        }
        set {
            this.cursorPosField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int RangePos {
        get {
            return this.rangePosField;
        }
        set {
            this.rangePosField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternSequenceEntry {
    
    private int patternField;
    
    private bool isSectionStartField;
    
    private string sectionNameField;
    
    private int[] mutedTracksField;
    
    private string typeField;
    
    public PatternSequenceEntry() {
        this.patternField = 0;
        this.isSectionStartField = false;
        this.sectionNameField = "Untitled Section";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Pattern {
        get {
            return this.patternField;
        }
        set {
            this.patternField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSectionStart {
        get {
            return this.isSectionStartField;
        }
        set {
            this.isSectionStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled Section")]
    public string SectionName {
        get {
            return this.sectionNameField;
        }
        set {
            this.sectionNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MutedTrack", IsNullable=false)]
    public int[] MutedTracks {
        get {
            return this.mutedTracksField;
        }
        set {
            this.mutedTracksField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternSequence {
    
    private int currentPositionField;
    
    private PatternSequenceSequenceEntries sequenceEntriesField;
    
    private PatternSequenceSelection sequenceSelectionField;
    
    private PatternSequenceSelection loopSelectionField;
    
    private int patternNameWidthField;
    
    private int patternMatrixWidthField;
    
    private int patternSlotHeightField;
    
    private int patternSlotWidthField;
    
    private int highliteStepField;
    
    private int highliteOffsetField;
    
    private bool keepSequenceSortedField;
    
    private string typeField;
    
    public PatternSequence() {
        this.currentPositionField = 0;
        this.patternNameWidthField = 0;
        this.patternMatrixWidthField = 248;
        this.patternSlotHeightField = 30;
        this.patternSlotWidthField = 24;
        this.highliteStepField = 2;
        this.highliteOffsetField = 0;
        this.keepSequenceSortedField = true;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int CurrentPosition {
        get {
            return this.currentPositionField;
        }
        set {
            this.currentPositionField = value;
        }
    }
    
    /// <remarks/>
    public PatternSequenceSequenceEntries SequenceEntries {
        get {
            return this.sequenceEntriesField;
        }
        set {
            this.sequenceEntriesField = value;
        }
    }
    
    /// <remarks/>
    public PatternSequenceSelection SequenceSelection {
        get {
            return this.sequenceSelectionField;
        }
        set {
            this.sequenceSelectionField = value;
        }
    }
    
    /// <remarks/>
    public PatternSequenceSelection LoopSelection {
        get {
            return this.loopSelectionField;
        }
        set {
            this.loopSelectionField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int PatternNameWidth {
        get {
            return this.patternNameWidthField;
        }
        set {
            this.patternNameWidthField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(248)]
    public int PatternMatrixWidth {
        get {
            return this.patternMatrixWidthField;
        }
        set {
            this.patternMatrixWidthField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(30)]
    public int PatternSlotHeight {
        get {
            return this.patternSlotHeightField;
        }
        set {
            this.patternSlotHeightField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(24)]
    public int PatternSlotWidth {
        get {
            return this.patternSlotWidthField;
        }
        set {
            this.patternSlotWidthField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(2)]
    public int HighliteStep {
        get {
            return this.highliteStepField;
        }
        set {
            this.highliteStepField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int HighliteOffset {
        get {
            return this.highliteOffsetField;
        }
        set {
            this.highliteOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool KeepSequenceSorted {
        get {
            return this.keepSequenceSortedField;
        }
        set {
            this.keepSequenceSortedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternSequenceSequenceEntries {
    
    private PatternSequenceEntry[] sequenceEntryField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SequenceEntry")]
    public PatternSequenceEntry[] SequenceEntry {
        get {
            return this.sequenceEntryField;
        }
        set {
            this.sequenceEntryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternSendTrack {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PatternLineNode[] linesField;
    
    private int aliasPatternIndexField;
    
    private bool colorEnabledField;
    
    private string colorField;
    
    private PatternTrackAutomation automationsField;
    
    private string typeField;
    
    public PatternSendTrack() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.aliasPatternIndexField = -1;
        this.colorEnabledField = false;
        this.colorField = "0,0,0";
        this.typeField = "PatternSendTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Line", IsNullable=false)]
    public PatternLineNode[] Lines {
        get {
            return this.linesField;
        }
        set {
            this.linesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AliasPatternIndex {
        get {
            return this.aliasPatternIndexField;
        }
        set {
            this.aliasPatternIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ColorEnabled {
        get {
            return this.colorEnabledField;
        }
        set {
            this.colorEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("0,0,0")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public PatternTrackAutomation Automations {
        get {
            return this.automationsField;
        }
        set {
            this.automationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternLineNode {
    
    private PatternLineNodeNoteColumns noteColumnsField;
    
    private PatternLineNodeEffectColumns effectColumnsField;
    
    private int indexField;
    
    private string typeField;
    
    /// <remarks/>
    public PatternLineNodeNoteColumns NoteColumns {
        get {
            return this.noteColumnsField;
        }
        set {
            this.noteColumnsField = value;
        }
    }
    
    /// <remarks/>
    public PatternLineNodeEffectColumns EffectColumns {
        get {
            return this.effectColumnsField;
        }
        set {
            this.effectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public int index {
        get {
            return this.indexField;
        }
        set {
            this.indexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternLineNodeNoteColumns {
    
    private PatternLineNoteColumnNode[] noteColumnField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("NoteColumn")]
    public PatternLineNoteColumnNode[] NoteColumn {
        get {
            return this.noteColumnField;
        }
        set {
            this.noteColumnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternLineNoteColumnNode {
    
    private string noteField;
    
    private string instrumentField;
    
    private string volumeField;
    
    private string panningField;
    
    private string delayField;
    
    private string effectNumberField;
    
    private string effectValueField;
    
    private string typeField;
    
    /// <remarks/>
    public string Note {
        get {
            return this.noteField;
        }
        set {
            this.noteField = value;
        }
    }
    
    /// <remarks/>
    public string Instrument {
        get {
            return this.instrumentField;
        }
        set {
            this.instrumentField = value;
        }
    }
    
    /// <remarks/>
    public string Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public string Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public string Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    public string EffectNumber {
        get {
            return this.effectNumberField;
        }
        set {
            this.effectNumberField = value;
        }
    }
    
    /// <remarks/>
    public string EffectValue {
        get {
            return this.effectValueField;
        }
        set {
            this.effectValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternLineNodeEffectColumns {
    
    private PatternLineEffectColumnNode[] effectColumnField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EffectColumn")]
    public PatternLineEffectColumnNode[] EffectColumn {
        get {
            return this.effectColumnField;
        }
        set {
            this.effectColumnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternLineEffectColumnNode {
    
    private string valueField;
    
    private string numberField;
    
    private string typeField;
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public string Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternTrackAutomation {
    
    private PatternTrackAutomationEnvelopes envelopesField;
    
    private string typeField;
    
    /// <remarks/>
    public PatternTrackAutomationEnvelopes Envelopes {
        get {
            return this.envelopesField;
        }
        set {
            this.envelopesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternTrackAutomationEnvelopes {
    
    private PatternTrackEnvelope[] envelopeField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Envelope")]
    public PatternTrackEnvelope[] Envelope {
        get {
            return this.envelopeField;
        }
        set {
            this.envelopeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternTrackEnvelope {
    
    private int deviceIndexField;
    
    private int parameterIndexField;
    
    private Envelope envelopeField;
    
    private string typeField;
    
    public PatternTrackEnvelope() {
        this.deviceIndexField = -1;
        this.parameterIndexField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DeviceIndex {
        get {
            return this.deviceIndexField;
        }
        set {
            this.deviceIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ParameterIndex {
        get {
            return this.parameterIndexField;
        }
        set {
            this.parameterIndexField = value;
        }
    }
    
    /// <remarks/>
    public Envelope Envelope {
        get {
            return this.envelopeField;
        }
        set {
            this.envelopeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Envelope {
    
    private EnvelopePlayMode playModeField;
    
    private int lengthField;
    
    private float valueQuantumField;
    
    private EnvelopePolarity polarityField;
    
    private string[] pointsField;
    
    private string typeField;
    
    public Envelope() {
        this.playModeField = EnvelopePlayMode.Curves;
        this.lengthField = 72;
        this.valueQuantumField = ((float)(0F));
        this.polarityField = EnvelopePolarity.Unipolar;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(EnvelopePlayMode.Curves)]
    public EnvelopePlayMode PlayMode {
        get {
            return this.playModeField;
        }
        set {
            this.playModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(72)]
    public int Length {
        get {
            return this.lengthField;
        }
        set {
            this.lengthField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float ValueQuantum {
        get {
            return this.valueQuantumField;
        }
        set {
            this.valueQuantumField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(EnvelopePolarity.Unipolar)]
    public EnvelopePolarity Polarity {
        get {
            return this.polarityField;
        }
        set {
            this.polarityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Point", IsNullable=false)]
    public string[] Points {
        get {
            return this.pointsField;
        }
        set {
            this.pointsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum EnvelopePlayMode {
    
    /// <remarks/>
    Points,
    
    /// <remarks/>
    Lines,
    
    /// <remarks/>
    Curves,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum EnvelopePolarity {
    
    /// <remarks/>
    Unipolar,
    
    /// <remarks/>
    Bipolar,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternMasterTrack {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PatternLineNode[] linesField;
    
    private int aliasPatternIndexField;
    
    private bool colorEnabledField;
    
    private string colorField;
    
    private PatternTrackAutomation automationsField;
    
    private string typeField;
    
    public PatternMasterTrack() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.aliasPatternIndexField = -1;
        this.colorEnabledField = false;
        this.colorField = "0,0,0";
        this.typeField = "PatternMasterTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Line", IsNullable=false)]
    public PatternLineNode[] Lines {
        get {
            return this.linesField;
        }
        set {
            this.linesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AliasPatternIndex {
        get {
            return this.aliasPatternIndexField;
        }
        set {
            this.aliasPatternIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ColorEnabled {
        get {
            return this.colorEnabledField;
        }
        set {
            this.colorEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("0,0,0")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public PatternTrackAutomation Automations {
        get {
            return this.automationsField;
        }
        set {
            this.automationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternGroupTrack {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PatternLineNode[] linesField;
    
    private int aliasPatternIndexField;
    
    private bool colorEnabledField;
    
    private string colorField;
    
    private PatternTrackAutomation automationsField;
    
    private string typeField;
    
    public PatternGroupTrack() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.aliasPatternIndexField = -1;
        this.colorEnabledField = false;
        this.colorField = "0,0,0";
        this.typeField = "PatternGroupTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Line", IsNullable=false)]
    public PatternLineNode[] Lines {
        get {
            return this.linesField;
        }
        set {
            this.linesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AliasPatternIndex {
        get {
            return this.aliasPatternIndexField;
        }
        set {
            this.aliasPatternIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ColorEnabled {
        get {
            return this.colorEnabledField;
        }
        set {
            this.colorEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("0,0,0")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public PatternTrackAutomation Automations {
        get {
            return this.automationsField;
        }
        set {
            this.automationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternTrack {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PatternLineNode[] linesField;
    
    private int aliasPatternIndexField;
    
    private bool colorEnabledField;
    
    private string colorField;
    
    private PatternTrackAutomation automationsField;
    
    private string typeField;
    
    public PatternTrack() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.aliasPatternIndexField = -1;
        this.colorEnabledField = false;
        this.colorField = "0,0,0";
        this.typeField = "PatternTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Line", IsNullable=false)]
    public PatternLineNode[] Lines {
        get {
            return this.linesField;
        }
        set {
            this.linesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AliasPatternIndex {
        get {
            return this.aliasPatternIndexField;
        }
        set {
            this.aliasPatternIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ColorEnabled {
        get {
            return this.colorEnabledField;
        }
        set {
            this.colorEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("0,0,0")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public PatternTrackAutomation Automations {
        get {
            return this.automationsField;
        }
        set {
            this.automationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Pattern {
    
    private string nameField;
    
    private int numberOfLinesField;
    
    private PatternTracks tracksField;
    
    private string typeField;
    
    public Pattern() {
        this.numberOfLinesField = 64;
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(64)]
    public int NumberOfLines {
        get {
            return this.numberOfLinesField;
        }
        set {
            this.numberOfLinesField = value;
        }
    }
    
    /// <remarks/>
    public PatternTracks Tracks {
        get {
            return this.tracksField;
        }
        set {
            this.tracksField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternTracks {
    
    private PatternTrack[] patternTrackField;
    
    private PatternGroupTrack[] patternGroupTrackField;
    
    private PatternMasterTrack[] patternMasterTrackField;
    
    private PatternSendTrack[] patternSendTrackField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PatternTrack")]
    public PatternTrack[] PatternTrack {
        get {
            return this.patternTrackField;
        }
        set {
            this.patternTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PatternGroupTrack")]
    public PatternGroupTrack[] PatternGroupTrack {
        get {
            return this.patternGroupTrackField;
        }
        set {
            this.patternGroupTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PatternMasterTrack")]
    public PatternMasterTrack[] PatternMasterTrack {
        get {
            return this.patternMasterTrackField;
        }
        set {
            this.patternMasterTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PatternSendTrack")]
    public PatternSendTrack[] PatternSendTrack {
        get {
            return this.patternSendTrackField;
        }
        set {
            this.patternSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PatternPool {
    
    private int highliteStepField;
    
    private int defaultPatternLengthField;
    
    private PatternPoolPatterns patternsField;
    
    private string typeField;
    
    public PatternPool() {
        this.highliteStepField = 0;
        this.defaultPatternLengthField = 64;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int HighliteStep {
        get {
            return this.highliteStepField;
        }
        set {
            this.highliteStepField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(64)]
    public int DefaultPatternLength {
        get {
            return this.defaultPatternLengthField;
        }
        set {
            this.defaultPatternLengthField = value;
        }
    }
    
    /// <remarks/>
    public PatternPoolPatterns Patterns {
        get {
            return this.patternsField;
        }
        set {
            this.patternsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class PatternPoolPatterns {
    
    private Pattern[] patternField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Pattern")]
    public Pattern[] Pattern {
        get {
            return this.patternField;
        }
        set {
            this.patternField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SequencerSendTrack {
    
    private string nameField;
    
    private string colorField;
    
    private float colorBlendField;
    
    private SequencerSendTrackState stateField;
    
    private bool soloedField;
    
    private SequencerSendTrackNoteColumnState[] noteColumnStatesField;
    
    private string[] noteColumnNamesField;
    
    private int numberOfVisibleNoteColumnsField;
    
    private int numberOfVisibleEffectColumnsField;
    
    private bool volumeColumnIsVisibleField;
    
    private bool panningColumnIsVisibleField;
    
    private bool delayColumnIsVisibleField;
    
    private bool sampleEffectColumnIsVisibleField;
    
    private int trackRoutingField;
    
    private int groupNestingLevelField;
    
    private float trackDelayField;
    
    private bool collapsedField;
    
    private bool visibleField;
    
    private TrackFilterDeviceChain filterDevicesField;
    
    private string typeField;
    
    public SequencerSendTrack() {
        this.nameField = "S01";
        this.colorField = "166,41,41";
        this.colorBlendField = ((float)(0F));
        this.stateField = SequencerSendTrackState.Active;
        this.soloedField = false;
        this.numberOfVisibleNoteColumnsField = 0;
        this.numberOfVisibleEffectColumnsField = 1;
        this.volumeColumnIsVisibleField = false;
        this.panningColumnIsVisibleField = false;
        this.delayColumnIsVisibleField = false;
        this.sampleEffectColumnIsVisibleField = false;
        this.trackRoutingField = 0;
        this.groupNestingLevelField = 0;
        this.trackDelayField = ((float)(0F));
        this.collapsedField = false;
        this.visibleField = true;
        this.typeField = "SequencerSendTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("S01")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("166,41,41")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float ColorBlend {
        get {
            return this.colorBlendField;
        }
        set {
            this.colorBlendField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SequencerSendTrackState.Active)]
    public SequencerSendTrackState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Soloed {
        get {
            return this.soloedField;
        }
        set {
            this.soloedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", IsNullable=false)]
    public SequencerSendTrackNoteColumnState[] NoteColumnStates {
        get {
            return this.noteColumnStatesField;
        }
        set {
            this.noteColumnStatesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnName", IsNullable=false)]
    public string[] NoteColumnNames {
        get {
            return this.noteColumnNamesField;
        }
        set {
            this.noteColumnNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NumberOfVisibleNoteColumns {
        get {
            return this.numberOfVisibleNoteColumnsField;
        }
        set {
            this.numberOfVisibleNoteColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int NumberOfVisibleEffectColumns {
        get {
            return this.numberOfVisibleEffectColumnsField;
        }
        set {
            this.numberOfVisibleEffectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool VolumeColumnIsVisible {
        get {
            return this.volumeColumnIsVisibleField;
        }
        set {
            this.volumeColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PanningColumnIsVisible {
        get {
            return this.panningColumnIsVisibleField;
        }
        set {
            this.panningColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool DelayColumnIsVisible {
        get {
            return this.delayColumnIsVisibleField;
        }
        set {
            this.delayColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SampleEffectColumnIsVisible {
        get {
            return this.sampleEffectColumnIsVisibleField;
        }
        set {
            this.sampleEffectColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int TrackRouting {
        get {
            return this.trackRoutingField;
        }
        set {
            this.trackRoutingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int GroupNestingLevel {
        get {
            return this.groupNestingLevelField;
        }
        set {
            this.groupNestingLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float TrackDelay {
        get {
            return this.trackDelayField;
        }
        set {
            this.trackDelayField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Collapsed {
        get {
            return this.collapsedField;
        }
        set {
            this.collapsedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
    
    /// <remarks/>
    public TrackFilterDeviceChain FilterDevices {
        get {
            return this.filterDevicesField;
        }
        set {
            this.filterDevicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerSendTrackState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerSendTrackNoteColumnState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TrackFilterDeviceChain {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private TrackFilterDeviceChainDevices devicesField;
    
    private string typeField;
    
    public TrackFilterDeviceChain() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public TrackFilterDeviceChainDevices Devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class TrackFilterDeviceChainDevices {
    
    private AnalogFilterDevice[] analogFilterDeviceField;
    
    private AudioPluginDevice[] audioPluginDeviceField;
    
    private BusCompressorDevice[] busCompressorDeviceField;
    
    private CabinetSimulatorDevice[] cabinetSimulatorDeviceField;
    
    private Chorus2Device[] chorus2DeviceField;
    
    private ChorusDevice[] chorusDeviceField;
    
    private Comb2Device[] comb2DeviceField;
    
    private CombDevice[] combDeviceField;
    
    private CompressorDevice[] compressorDeviceField;
    
    private ConvolverDevice[] convolverDeviceField;
    
    private CrossoverDevice[] crossoverDeviceField;
    
    private DcOffsetDevice[] dcOffsetDeviceField;
    
    private DelayDevice[] delayDeviceField;
    
    private DigitalFilterDevice[] digitalFilterDeviceField;
    
    private Distortion2Device[] distortion2DeviceField;
    
    private DistortionDevice[] distortionDeviceField;
    
    private DooferDevice[] dooferDeviceField;
    
    private Eq10Device[] eq10DeviceField;
    
    private Eq5Device[] eq5DeviceField;
    
    private ExciterDevice[] exciterDeviceField;
    
    private Filter1Device[] filter1DeviceField;
    
    private Filter2Device[] filter2DeviceField;
    
    private Filter3Device[] filter3DeviceField;
    
    private FilterDistortionDevice[] filterDistortionDeviceField;
    
    private Flanger2Device[] flanger2DeviceField;
    
    private FlangerDevice[] flangerDeviceField;
    
    private FormulaMetaDevice[] formulaMetaDeviceField;
    
    private GainerDevice[] gainerDeviceField;
    
    private Gate2Device[] gate2DeviceField;
    
    private GateDevice[] gateDeviceField;
    
    private GroupTrackMixerDevice[] groupTrackMixerDeviceField;
    
    private HydraDevice[] hydraDeviceField;
    
    private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
    
    private InstrumentMacroDevice[] instrumentMacroDeviceField;
    
    private KeyTrackingDevice[] keyTrackingDeviceField;
    
    private LfoDevice[] lfoDeviceField;
    
    private LineInDevice[] lineInDeviceField;
    
    private Lofi2Device[] lofi2DeviceField;
    
    private LofiDevice[] lofiDeviceField;
    
    private MasterTrackMixerDevice[] masterTrackMixerDeviceField;
    
    private MaximizerDevice[] maximizerDeviceField;
    
    private MetaMixerDevice[] metaMixerDeviceField;
    
    private MidiCCDevice[] midiCCDeviceField;
    
    private MidiControlDevice[] midiControlDeviceField;
    
    private MixerEqDevice[] mixerEqDeviceField;
    
    private MultitapDevice[] multitapDeviceField;
    
    private PdcTestDelayDevice[] pdcTestDelayDeviceField;
    
    private Phaser2Device[] phaser2DeviceField;
    
    private PhaserDevice[] phaserDeviceField;
    
    private RepeaterDevice[] repeaterDeviceField;
    
    private Reverb2Device[] reverb2DeviceField;
    
    private Reverb3Device[] reverb3DeviceField;
    
    private ReverbDevice[] reverbDeviceField;
    
    private RewireInDevice[] rewireInDeviceField;
    
    private RingMod2Device[] ringMod2DeviceField;
    
    private RingModDevice[] ringModDeviceField;
    
    private SendDevice[] sendDeviceField;
    
    private SendTrackMixerDevice[] sendTrackMixerDeviceField;
    
    private ShaperDevice[] shaperDeviceField;
    
    private SideChainDevice[] sideChainDeviceField;
    
    private SignalFollowerDevice[] signalFollowerDeviceField;
    
    private StereoExpanderDevice[] stereoExpanderDeviceField;
    
    private StutterDevice[] stutterDeviceField;
    
    private TrackMixerDevice[] trackMixerDeviceField;
    
    private VelocityDevice[] velocityDeviceField;
    
    private XYPadDevice[] xYPadDeviceField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AnalogFilterDevice")]
    public AnalogFilterDevice[] AnalogFilterDevice {
        get {
            return this.analogFilterDeviceField;
        }
        set {
            this.analogFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice")]
    public AudioPluginDevice[] AudioPluginDevice {
        get {
            return this.audioPluginDeviceField;
        }
        set {
            this.audioPluginDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice")]
    public BusCompressorDevice[] BusCompressorDevice {
        get {
            return this.busCompressorDeviceField;
        }
        set {
            this.busCompressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CabinetSimulatorDevice")]
    public CabinetSimulatorDevice[] CabinetSimulatorDevice {
        get {
            return this.cabinetSimulatorDeviceField;
        }
        set {
            this.cabinetSimulatorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Chorus2Device")]
    public Chorus2Device[] Chorus2Device {
        get {
            return this.chorus2DeviceField;
        }
        set {
            this.chorus2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ChorusDevice")]
    public ChorusDevice[] ChorusDevice {
        get {
            return this.chorusDeviceField;
        }
        set {
            this.chorusDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Comb2Device")]
    public Comb2Device[] Comb2Device {
        get {
            return this.comb2DeviceField;
        }
        set {
            this.comb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CombDevice")]
    public CombDevice[] CombDevice {
        get {
            return this.combDeviceField;
        }
        set {
            this.combDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CompressorDevice")]
    public CompressorDevice[] CompressorDevice {
        get {
            return this.compressorDeviceField;
        }
        set {
            this.compressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConvolverDevice")]
    public ConvolverDevice[] ConvolverDevice {
        get {
            return this.convolverDeviceField;
        }
        set {
            this.convolverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CrossoverDevice")]
    public CrossoverDevice[] CrossoverDevice {
        get {
            return this.crossoverDeviceField;
        }
        set {
            this.crossoverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice")]
    public DcOffsetDevice[] DcOffsetDevice {
        get {
            return this.dcOffsetDeviceField;
        }
        set {
            this.dcOffsetDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DelayDevice")]
    public DelayDevice[] DelayDevice {
        get {
            return this.delayDeviceField;
        }
        set {
            this.delayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DigitalFilterDevice")]
    public DigitalFilterDevice[] DigitalFilterDevice {
        get {
            return this.digitalFilterDeviceField;
        }
        set {
            this.digitalFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Distortion2Device")]
    public Distortion2Device[] Distortion2Device {
        get {
            return this.distortion2DeviceField;
        }
        set {
            this.distortion2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DistortionDevice")]
    public DistortionDevice[] DistortionDevice {
        get {
            return this.distortionDeviceField;
        }
        set {
            this.distortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DooferDevice")]
    public DooferDevice[] DooferDevice {
        get {
            return this.dooferDeviceField;
        }
        set {
            this.dooferDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq10Device")]
    public Eq10Device[] Eq10Device {
        get {
            return this.eq10DeviceField;
        }
        set {
            this.eq10DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq5Device")]
    public Eq5Device[] Eq5Device {
        get {
            return this.eq5DeviceField;
        }
        set {
            this.eq5DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ExciterDevice")]
    public ExciterDevice[] ExciterDevice {
        get {
            return this.exciterDeviceField;
        }
        set {
            this.exciterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter1Device")]
    public Filter1Device[] Filter1Device {
        get {
            return this.filter1DeviceField;
        }
        set {
            this.filter1DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter2Device")]
    public Filter2Device[] Filter2Device {
        get {
            return this.filter2DeviceField;
        }
        set {
            this.filter2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter3Device")]
    public Filter3Device[] Filter3Device {
        get {
            return this.filter3DeviceField;
        }
        set {
            this.filter3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice")]
    public FilterDistortionDevice[] FilterDistortionDevice {
        get {
            return this.filterDistortionDeviceField;
        }
        set {
            this.filterDistortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Flanger2Device")]
    public Flanger2Device[] Flanger2Device {
        get {
            return this.flanger2DeviceField;
        }
        set {
            this.flanger2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FlangerDevice")]
    public FlangerDevice[] FlangerDevice {
        get {
            return this.flangerDeviceField;
        }
        set {
            this.flangerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FormulaMetaDevice")]
    public FormulaMetaDevice[] FormulaMetaDevice {
        get {
            return this.formulaMetaDeviceField;
        }
        set {
            this.formulaMetaDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GainerDevice")]
    public GainerDevice[] GainerDevice {
        get {
            return this.gainerDeviceField;
        }
        set {
            this.gainerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Gate2Device")]
    public Gate2Device[] Gate2Device {
        get {
            return this.gate2DeviceField;
        }
        set {
            this.gate2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GateDevice")]
    public GateDevice[] GateDevice {
        get {
            return this.gateDeviceField;
        }
        set {
            this.gateDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GroupTrackMixerDevice")]
    public GroupTrackMixerDevice[] GroupTrackMixerDevice {
        get {
            return this.groupTrackMixerDeviceField;
        }
        set {
            this.groupTrackMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("HydraDevice")]
    public HydraDevice[] HydraDevice {
        get {
            return this.hydraDeviceField;
        }
        set {
            this.hydraDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice")]
    public InstrumentAutomationDevice[] InstrumentAutomationDevice {
        get {
            return this.instrumentAutomationDeviceField;
        }
        set {
            this.instrumentAutomationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentMacroDevice")]
    public InstrumentMacroDevice[] InstrumentMacroDevice {
        get {
            return this.instrumentMacroDeviceField;
        }
        set {
            this.instrumentMacroDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyTrackingDevice")]
    public KeyTrackingDevice[] KeyTrackingDevice {
        get {
            return this.keyTrackingDeviceField;
        }
        set {
            this.keyTrackingDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LfoDevice")]
    public LfoDevice[] LfoDevice {
        get {
            return this.lfoDeviceField;
        }
        set {
            this.lfoDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LineInDevice")]
    public LineInDevice[] LineInDevice {
        get {
            return this.lineInDeviceField;
        }
        set {
            this.lineInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lofi2Device")]
    public Lofi2Device[] Lofi2Device {
        get {
            return this.lofi2DeviceField;
        }
        set {
            this.lofi2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LofiDevice")]
    public LofiDevice[] LofiDevice {
        get {
            return this.lofiDeviceField;
        }
        set {
            this.lofiDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MasterTrackMixerDevice")]
    public MasterTrackMixerDevice[] MasterTrackMixerDevice {
        get {
            return this.masterTrackMixerDeviceField;
        }
        set {
            this.masterTrackMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice")]
    public MaximizerDevice[] MaximizerDevice {
        get {
            return this.maximizerDeviceField;
        }
        set {
            this.maximizerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MetaMixerDevice")]
    public MetaMixerDevice[] MetaMixerDevice {
        get {
            return this.metaMixerDeviceField;
        }
        set {
            this.metaMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice")]
    public MidiCCDevice[] MidiCCDevice {
        get {
            return this.midiCCDeviceField;
        }
        set {
            this.midiCCDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiControlDevice")]
    public MidiControlDevice[] MidiControlDevice {
        get {
            return this.midiControlDeviceField;
        }
        set {
            this.midiControlDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice")]
    public MixerEqDevice[] MixerEqDevice {
        get {
            return this.mixerEqDeviceField;
        }
        set {
            this.mixerEqDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MultitapDevice")]
    public MultitapDevice[] MultitapDevice {
        get {
            return this.multitapDeviceField;
        }
        set {
            this.multitapDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice")]
    public PdcTestDelayDevice[] PdcTestDelayDevice {
        get {
            return this.pdcTestDelayDeviceField;
        }
        set {
            this.pdcTestDelayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Phaser2Device")]
    public Phaser2Device[] Phaser2Device {
        get {
            return this.phaser2DeviceField;
        }
        set {
            this.phaser2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PhaserDevice")]
    public PhaserDevice[] PhaserDevice {
        get {
            return this.phaserDeviceField;
        }
        set {
            this.phaserDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RepeaterDevice")]
    public RepeaterDevice[] RepeaterDevice {
        get {
            return this.repeaterDeviceField;
        }
        set {
            this.repeaterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb2Device")]
    public Reverb2Device[] Reverb2Device {
        get {
            return this.reverb2DeviceField;
        }
        set {
            this.reverb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb3Device")]
    public Reverb3Device[] Reverb3Device {
        get {
            return this.reverb3DeviceField;
        }
        set {
            this.reverb3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReverbDevice")]
    public ReverbDevice[] ReverbDevice {
        get {
            return this.reverbDeviceField;
        }
        set {
            this.reverbDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RewireInDevice")]
    public RewireInDevice[] RewireInDevice {
        get {
            return this.rewireInDeviceField;
        }
        set {
            this.rewireInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingMod2Device")]
    public RingMod2Device[] RingMod2Device {
        get {
            return this.ringMod2DeviceField;
        }
        set {
            this.ringMod2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingModDevice")]
    public RingModDevice[] RingModDevice {
        get {
            return this.ringModDeviceField;
        }
        set {
            this.ringModDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SendDevice")]
    public SendDevice[] SendDevice {
        get {
            return this.sendDeviceField;
        }
        set {
            this.sendDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SendTrackMixerDevice")]
    public SendTrackMixerDevice[] SendTrackMixerDevice {
        get {
            return this.sendTrackMixerDeviceField;
        }
        set {
            this.sendTrackMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ShaperDevice")]
    public ShaperDevice[] ShaperDevice {
        get {
            return this.shaperDeviceField;
        }
        set {
            this.shaperDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SideChainDevice")]
    public SideChainDevice[] SideChainDevice {
        get {
            return this.sideChainDeviceField;
        }
        set {
            this.sideChainDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SignalFollowerDevice")]
    public SignalFollowerDevice[] SignalFollowerDevice {
        get {
            return this.signalFollowerDeviceField;
        }
        set {
            this.signalFollowerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice")]
    public StereoExpanderDevice[] StereoExpanderDevice {
        get {
            return this.stereoExpanderDeviceField;
        }
        set {
            this.stereoExpanderDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StutterDevice")]
    public StutterDevice[] StutterDevice {
        get {
            return this.stutterDeviceField;
        }
        set {
            this.stutterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TrackMixerDevice")]
    public TrackMixerDevice[] TrackMixerDevice {
        get {
            return this.trackMixerDeviceField;
        }
        set {
            this.trackMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("VelocityDevice")]
    public VelocityDevice[] VelocityDevice {
        get {
            return this.velocityDeviceField;
        }
        set {
            this.velocityDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("XYPadDevice")]
    public XYPadDevice[] XYPadDevice {
        get {
            return this.xYPadDeviceField;
        }
        set {
            this.xYPadDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AnalogFilterDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private AnalogFilterDevicePreset runTimePresetAField;
    
    private AnalogFilterDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private AnalogFilterDeviceOversamplingFactor oversamplingFactorField;
    
    private AnalogFilterDeviceModel modelField;
    
    private FilterDeviceParameter typeField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter resonanceField;
    
    private FilterDeviceParameter inertiaField;
    
    private FilterDeviceParameter driveField;
    
    private bool showResponseViewField;
    
    private float responseViewMaxGainField;
    
    private string typeField1;
    
    public AnalogFilterDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.oversamplingFactorField = AnalogFilterDeviceOversamplingFactor.Item2x;
        this.modelField = AnalogFilterDeviceModel.Item2PK35;
        this.showResponseViewField = true;
        this.responseViewMaxGainField = ((float)(18F));
        this.typeField1 = "AnalogFilterDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public AnalogFilterDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public AnalogFilterDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(AnalogFilterDeviceOversamplingFactor.Item2x)]
    public AnalogFilterDeviceOversamplingFactor OversamplingFactor {
        get {
            return this.oversamplingFactorField;
        }
        set {
            this.oversamplingFactorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(AnalogFilterDeviceModel.Item2PK35)]
    public AnalogFilterDeviceModel Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resonance {
        get {
            return this.resonanceField;
        }
        set {
            this.resonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Drive {
        get {
            return this.driveField;
        }
        set {
            this.driveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool ShowResponseView {
        get {
            return this.showResponseViewField;
        }
        set {
            this.showResponseViewField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "18")]
    public float ResponseViewMaxGain {
        get {
            return this.responseViewMaxGainField;
        }
        set {
            this.responseViewMaxGainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AnalogFilterDevicePreset {
    
    private AnalogFilterDevice deviceSlotField;
    
    private string typeField;
    
    public AnalogFilterDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public AnalogFilterDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FilterDeviceIsActiveParameter {
    
    private float valueField;
    
    private FilterDeviceIsActiveParameterVisualization visualizationField;
    
    private FilterDeviceIsActiveParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public FilterDeviceIsActiveParameter() {
        this.valueField = ((float)(1F));
        this.visualizationField = FilterDeviceIsActiveParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(FilterDeviceIsActiveParameterVisualization.Deviceonly)]
    public FilterDeviceIsActiveParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum FilterDeviceIsActiveParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class FilterDeviceIsActiveParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiMapping {
    
    private MidiMappingMappingMode mappingModeField;
    
    private MidiMappingControllerMode controllerModeField;
    
    private MidiMappingNoteMode noteModeField;
    
    private int channelField;
    
    private int cCNumberOrNoteField;
    
    private float minField;
    
    private float maxField;
    
    private string typeField;
    
    public MidiMapping() {
        this.mappingModeField = MidiMappingMappingMode.Controllers;
        this.controllerModeField = MidiMappingControllerMode.Absolute7bit;
        this.noteModeField = MidiMappingNoteMode.Value;
        this.channelField = 0;
        this.cCNumberOrNoteField = 0;
        this.minField = ((float)(0F));
        this.maxField = ((float)(1F));
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiMappingMappingMode.Controllers)]
    public MidiMappingMappingMode MappingMode {
        get {
            return this.mappingModeField;
        }
        set {
            this.mappingModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiMappingControllerMode.Absolute7bit)]
    public MidiMappingControllerMode ControllerMode {
        get {
            return this.controllerModeField;
        }
        set {
            this.controllerModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiMappingNoteMode.Value)]
    public MidiMappingNoteMode NoteMode {
        get {
            return this.noteModeField;
        }
        set {
            this.noteModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Channel {
        get {
            return this.channelField;
        }
        set {
            this.channelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int CCNumberOrNote {
        get {
            return this.cCNumberOrNoteField;
        }
        set {
            this.cCNumberOrNoteField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiMappingMappingMode {
    
    /// <remarks/>
    Controllers,
    
    /// <remarks/>
    Notes,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiMappingControllerMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Absolute 7 bit")]
    Absolute7bit,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Relative signed bit")]
    Relativesignedbit,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Relative signed bit 2")]
    Relativesignedbit2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Relative bin offset")]
    Relativebinoffset,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Relative two\'s comp")]
    Relativetwoscomp,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiMappingNoteMode {
    
    /// <remarks/>
    Trigger,
    
    /// <remarks/>
    Gate,
    
    /// <remarks/>
    Value,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum AnalogFilterDeviceOversamplingFactor {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1x")]
    Item1x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2x")]
    Item2x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4x")]
    Item4x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8x")]
    Item8x,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum AnalogFilterDeviceModel {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2P K35")]
    Item2PK35,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2P Moog")]
    Item2PMoog,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4P Moog")]
    Item4PMoog,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4P Diode")]
    Item4PDiode,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FilterDeviceParameter {
    
    private float valueField;
    
    private FilterDeviceParameterVisualization visualizationField;
    
    private FilterDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public FilterDeviceParameter() {
        this.valueField = ((float)(1F));
        this.visualizationField = FilterDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(FilterDeviceParameterVisualization.Deviceonly)]
    public FilterDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum FilterDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class FilterDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AudioPluginDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private AudioPluginDevicePreset runTimePresetAField;
    
    private AudioPluginDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int activeProgramField;
    
    private AudioPluginDevicePluginType pluginTypeField;
    
    private bool pluginTypeFieldSpecified;
    
    private string pluginIdentifierField;
    
    private string pluginDisplayNameField;
    
    private string pluginShortDisplayNameField;
    
    private string pluginEditorWindowPositionField;
    
    private AudioPluginDeviceParameterChunkType parameterChunkTypeField;
    
    private string parameterChunkField;
    
    private AudioPluginDeviceParameters parametersField;
    
    private string typeField;
    
    public AudioPluginDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.activeProgramField = 0;
        this.pluginEditorWindowPositionField = "-1,-1";
        this.parameterChunkTypeField = AudioPluginDeviceParameterChunkType.Chunk;
        this.typeField = "AudioPluginDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int ActiveProgram {
        get {
            return this.activeProgramField;
        }
        set {
            this.activeProgramField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDevicePluginType PluginType {
        get {
            return this.pluginTypeField;
        }
        set {
            this.pluginTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PluginTypeSpecified {
        get {
            return this.pluginTypeFieldSpecified;
        }
        set {
            this.pluginTypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string PluginIdentifier {
        get {
            return this.pluginIdentifierField;
        }
        set {
            this.pluginIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string PluginDisplayName {
        get {
            return this.pluginDisplayNameField;
        }
        set {
            this.pluginDisplayNameField = value;
        }
    }
    
    /// <remarks/>
    public string PluginShortDisplayName {
        get {
            return this.pluginShortDisplayNameField;
        }
        set {
            this.pluginShortDisplayNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("-1,-1")]
    public string PluginEditorWindowPosition {
        get {
            return this.pluginEditorWindowPositionField;
        }
        set {
            this.pluginEditorWindowPositionField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(AudioPluginDeviceParameterChunkType.Chunk)]
    public AudioPluginDeviceParameterChunkType ParameterChunkType {
        get {
            return this.parameterChunkTypeField;
        }
        set {
            this.parameterChunkTypeField = value;
        }
    }
    
    /// <remarks/>
    public string ParameterChunk {
        get {
            return this.parameterChunkField;
        }
        set {
            this.parameterChunkField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDeviceParameters Parameters {
        get {
            return this.parametersField;
        }
        set {
            this.parametersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AudioPluginDevicePreset {
    
    private AudioPluginDevice deviceSlotField;
    
    private string typeField;
    
    public AudioPluginDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public AudioPluginDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum AudioPluginDevicePluginType {
    
    /// <remarks/>
    AU,
    
    /// <remarks/>
    VST,
    
    /// <remarks/>
    VST3,
    
    /// <remarks/>
    LADSPA,
    
    /// <remarks/>
    DSSI,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum AudioPluginDeviceParameterChunkType {
    
    /// <remarks/>
    Chunk,
    
    /// <remarks/>
    ParameterBag,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class AudioPluginDeviceParameters {
    
    private AudioPluginDeviceParameter[] parameterField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Parameter")]
    public AudioPluginDeviceParameter[] Parameter {
        get {
            return this.parameterField;
        }
        set {
            this.parameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AudioPluginDeviceParameter {
    
    private float valueField;
    
    private AudioPluginDeviceParameterVisualization visualizationField;
    
    private AudioPluginDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public AudioPluginDeviceParameter() {
        this.valueField = ((float)(0F));
        this.visualizationField = AudioPluginDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(AudioPluginDeviceParameterVisualization.Deviceonly)]
    public AudioPluginDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum AudioPluginDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class AudioPluginDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BusCompressorDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private BusCompressorDevicePreset runTimePresetAField;
    
    private BusCompressorDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter ratioField;
    
    private FilterDeviceParameter attackField;
    
    private FilterDeviceParameter releaseField;
    
    private FilterDeviceParameter makeUpField;
    
    private FilterDeviceParameter kneeField;
    
    private string typeField;
    
    public BusCompressorDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "BusCompressorDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public BusCompressorDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public BusCompressorDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ratio {
        get {
            return this.ratioField;
        }
        set {
            this.ratioField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MakeUp {
        get {
            return this.makeUpField;
        }
        set {
            this.makeUpField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Knee {
        get {
            return this.kneeField;
        }
        set {
            this.kneeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class BusCompressorDevicePreset {
    
    private BusCompressorDevice deviceSlotField;
    
    private string typeField;
    
    public BusCompressorDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public BusCompressorDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CabinetSimulatorDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private CabinetSimulatorDevicePreset runTimePresetAField;
    
    private CabinetSimulatorDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter cabinetField;
    
    private FilterDeviceParameter routingField;
    
    private FilterDeviceParameter distortionField;
    
    private FilterDeviceParameter wetField;
    
    private FilterDeviceParameter dryField;
    
    private bool stereoField;
    
    private FilterDeviceParameter gain0Field;
    
    private FilterDeviceParameter gain1Field;
    
    private FilterDeviceParameter gain2Field;
    
    private FilterDeviceParameter gain3Field;
    
    private FilterDeviceParameter gain4Field;
    
    private float frequency0Field;
    
    private float frequency1Field;
    
    private float frequency2Field;
    
    private float frequency3Field;
    
    private float frequency4Field;
    
    private float bandWidth0Field;
    
    private float bandWidth1Field;
    
    private float bandWidth2Field;
    
    private float bandWidth3Field;
    
    private float bandWidth4Field;
    
    private string typeField;
    
    public CabinetSimulatorDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.stereoField = true;
        this.frequency0Field = ((float)(100F));
        this.frequency1Field = ((float)(1000F));
        this.frequency2Field = ((float)(2000F));
        this.frequency3Field = ((float)(4000F));
        this.frequency4Field = ((float)(8000F));
        this.bandWidth0Field = ((float)(1F));
        this.bandWidth1Field = ((float)(2F));
        this.bandWidth2Field = ((float)(2F));
        this.bandWidth3Field = ((float)(2F));
        this.bandWidth4Field = ((float)(1F));
        this.typeField = "CabinetSimulatorDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public CabinetSimulatorDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public CabinetSimulatorDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cabinet {
        get {
            return this.cabinetField;
        }
        set {
            this.cabinetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Routing {
        get {
            return this.routingField;
        }
        set {
            this.routingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Distortion {
        get {
            return this.distortionField;
        }
        set {
            this.distortionField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Wet {
        get {
            return this.wetField;
        }
        set {
            this.wetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dry {
        get {
            return this.dryField;
        }
        set {
            this.dryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Stereo {
        get {
            return this.stereoField;
        }
        set {
            this.stereoField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain0 {
        get {
            return this.gain0Field;
        }
        set {
            this.gain0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain1 {
        get {
            return this.gain1Field;
        }
        set {
            this.gain1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain2 {
        get {
            return this.gain2Field;
        }
        set {
            this.gain2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain3 {
        get {
            return this.gain3Field;
        }
        set {
            this.gain3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain4 {
        get {
            return this.gain4Field;
        }
        set {
            this.gain4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "100")]
    public float Frequency0 {
        get {
            return this.frequency0Field;
        }
        set {
            this.frequency0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1000")]
    public float Frequency1 {
        get {
            return this.frequency1Field;
        }
        set {
            this.frequency1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "2000")]
    public float Frequency2 {
        get {
            return this.frequency2Field;
        }
        set {
            this.frequency2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "4000")]
    public float Frequency3 {
        get {
            return this.frequency3Field;
        }
        set {
            this.frequency3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "8000")]
    public float Frequency4 {
        get {
            return this.frequency4Field;
        }
        set {
            this.frequency4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float BandWidth0 {
        get {
            return this.bandWidth0Field;
        }
        set {
            this.bandWidth0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
    public float BandWidth1 {
        get {
            return this.bandWidth1Field;
        }
        set {
            this.bandWidth1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
    public float BandWidth2 {
        get {
            return this.bandWidth2Field;
        }
        set {
            this.bandWidth2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "2")]
    public float BandWidth3 {
        get {
            return this.bandWidth3Field;
        }
        set {
            this.bandWidth3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float BandWidth4 {
        get {
            return this.bandWidth4Field;
        }
        set {
            this.bandWidth4Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CabinetSimulatorDevicePreset {
    
    private CabinetSimulatorDevice deviceSlotField;
    
    private string typeField;
    
    public CabinetSimulatorDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public CabinetSimulatorDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Chorus2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Chorus2DevicePreset runTimePresetAField;
    
    private Chorus2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter rateField;
    
    private FilterDeviceParameter depthField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter delayField;
    
    private FilterDeviceParameter dryWetMixField;
    
    private FilterDeviceParameter dephaseField;
    
    private NonContinuesDeviceParameter resetField;
    
    private FilterDeviceParameter filterTypeField;
    
    private FilterDeviceParameter filterFreqField;
    
    private FilterDeviceParameter filterResonanceField;
    
    private FilterDeviceParameter filterDriveField;
    
    private string typeField;
    
    public Chorus2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Chorus2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Chorus2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Chorus2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Depth {
        get {
            return this.depthField;
        }
        set {
            this.depthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryWetMix {
        get {
            return this.dryWetMixField;
        }
        set {
            this.dryWetMixField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dephase {
        get {
            return this.dephaseField;
        }
        set {
            this.dephaseField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Reset {
        get {
            return this.resetField;
        }
        set {
            this.resetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterFreq {
        get {
            return this.filterFreqField;
        }
        set {
            this.filterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterResonance {
        get {
            return this.filterResonanceField;
        }
        set {
            this.filterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterDrive {
        get {
            return this.filterDriveField;
        }
        set {
            this.filterDriveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Chorus2DevicePreset {
    
    private Chorus2Device deviceSlotField;
    
    private string typeField;
    
    public Chorus2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Chorus2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NonContinuesDeviceParameter {
    
    private NonContinuesDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    /// <remarks/>
    public NonContinuesDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class NonContinuesDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ChorusDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private ChorusDevicePreset runTimePresetAField;
    
    private ChorusDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter lfoRateField;
    
    private FilterDeviceParameter lfoDepthField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter delayField;
    
    private FilterDeviceParameter dryWetMixField;
    
    private FilterDeviceParameter phaseField;
    
    private FilterDeviceParameter filterTypeField;
    
    private FilterDeviceParameter filterFreqField;
    
    private FilterDeviceParameter filterResonanceField;
    
    private string typeField;
    
    public ChorusDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "ChorusDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public ChorusDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public ChorusDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LfoRate {
        get {
            return this.lfoRateField;
        }
        set {
            this.lfoRateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LfoDepth {
        get {
            return this.lfoDepthField;
        }
        set {
            this.lfoDepthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryWetMix {
        get {
            return this.dryWetMixField;
        }
        set {
            this.dryWetMixField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Phase {
        get {
            return this.phaseField;
        }
        set {
            this.phaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterFreq {
        get {
            return this.filterFreqField;
        }
        set {
            this.filterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterResonance {
        get {
            return this.filterResonanceField;
        }
        set {
            this.filterResonanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ChorusDevicePreset {
    
    private ChorusDevice deviceSlotField;
    
    private string typeField;
    
    public ChorusDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public ChorusDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Comb2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Comb2DevicePreset runTimePresetAField;
    
    private Comb2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private Comb2NoteFilterDeviceParameter noteField;
    
    private FilterDeviceParameter transposeField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter inertiaField;
    
    private FilterDeviceParameter dryWetField;
    
    private string typeField;
    
    public Comb2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Comb2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Comb2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Comb2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public Comb2NoteFilterDeviceParameter Note {
        get {
            return this.noteField;
        }
        set {
            this.noteField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryWet {
        get {
            return this.dryWetField;
        }
        set {
            this.dryWetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Comb2DevicePreset {
    
    private Comb2Device deviceSlotField;
    
    private string typeField;
    
    public Comb2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Comb2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Comb2NoteFilterDeviceParameter {
    
    private float valueField;
    
    private Comb2NoteFilterDeviceParameterVisualization visualizationField;
    
    private Comb2NoteFilterDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public Comb2NoteFilterDeviceParameter() {
        this.valueField = ((float)(48F));
        this.visualizationField = Comb2NoteFilterDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "48")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Comb2NoteFilterDeviceParameterVisualization.Deviceonly)]
    public Comb2NoteFilterDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public Comb2NoteFilterDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Comb2NoteFilterDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class Comb2NoteFilterDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CombDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private CombDevicePreset runTimePresetAField;
    
    private CombDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter frequencyField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter inertiaField;
    
    private FilterDeviceParameter wetOutField;
    
    private FilterDeviceParameter dryOutField;
    
    private string typeField;
    
    public CombDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "CombDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public CombDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public CombDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetOut {
        get {
            return this.wetOutField;
        }
        set {
            this.wetOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryOut {
        get {
            return this.dryOutField;
        }
        set {
            this.dryOutField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CombDevicePreset {
    
    private CombDevice deviceSlotField;
    
    private string typeField;
    
    public CombDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public CombDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CompressorDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private CompressorDevicePreset runTimePresetAField;
    
    private CompressorDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter logThresholdField;
    
    private FilterDeviceParameter ratioField;
    
    private FilterDeviceParameter attackField;
    
    private FilterDeviceParameter releaseField;
    
    private FilterDeviceParameter gainField;
    
    private string typeField;
    
    public CompressorDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "CompressorDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public CompressorDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public CompressorDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LogThreshold {
        get {
            return this.logThresholdField;
        }
        set {
            this.logThresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ratio {
        get {
            return this.ratioField;
        }
        set {
            this.ratioField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain {
        get {
            return this.gainField;
        }
        set {
            this.gainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CompressorDevicePreset {
    
    private CompressorDevice deviceSlotField;
    
    private string typeField;
    
    public CompressorDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public CompressorDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConvolverDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private ConvolverDevicePreset runTimePresetAField;
    
    private ConvolverDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter gainField;
    
    private FilterDeviceParameter startField;
    
    private FilterDeviceParameter lengthField;
    
    private FilterDeviceParameter resampleField;
    
    private FilterDeviceParameter preDelayField;
    
    private FilterDeviceParameter colorField;
    
    private FilterDeviceParameter dryField;
    
    private FilterDeviceParameter wetField;
    
    private bool stereoField;
    
    private string impulseDataLeftField;
    
    private string impulseDataRightField;
    
    private int impulseDataSampleRateField;
    
    private string sampleNameField;
    
    private string sampleDirectoryPathField;
    
    private string typeField;
    
    public ConvolverDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.stereoField = true;
        this.impulseDataSampleRateField = 0;
        this.sampleNameField = "No impulse loaded";
        this.typeField = "ConvolverDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public ConvolverDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public ConvolverDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain {
        get {
            return this.gainField;
        }
        set {
            this.gainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Start {
        get {
            return this.startField;
        }
        set {
            this.startField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Length {
        get {
            return this.lengthField;
        }
        set {
            this.lengthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resample {
        get {
            return this.resampleField;
        }
        set {
            this.resampleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PreDelay {
        get {
            return this.preDelayField;
        }
        set {
            this.preDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dry {
        get {
            return this.dryField;
        }
        set {
            this.dryField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Wet {
        get {
            return this.wetField;
        }
        set {
            this.wetField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Stereo {
        get {
            return this.stereoField;
        }
        set {
            this.stereoField = value;
        }
    }
    
    /// <remarks/>
    public string ImpulseDataLeft {
        get {
            return this.impulseDataLeftField;
        }
        set {
            this.impulseDataLeftField = value;
        }
    }
    
    /// <remarks/>
    public string ImpulseDataRight {
        get {
            return this.impulseDataRightField;
        }
        set {
            this.impulseDataRightField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int ImpulseDataSampleRate {
        get {
            return this.impulseDataSampleRateField;
        }
        set {
            this.impulseDataSampleRateField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("No impulse loaded")]
    public string SampleName {
        get {
            return this.sampleNameField;
        }
        set {
            this.sampleNameField = value;
        }
    }
    
    /// <remarks/>
    public string SampleDirectoryPath {
        get {
            return this.sampleDirectoryPathField;
        }
        set {
            this.sampleDirectoryPathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConvolverDevicePreset {
    
    private ConvolverDevice deviceSlotField;
    
    private string typeField;
    
    public ConvolverDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public ConvolverDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CrossoverDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private CrossoverDevicePreset runTimePresetAField;
    
    private CrossoverDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter out1SendAmountField;
    
    private FilterDeviceParameter out1DestSendTrackField;
    
    private bool out1MuteSourceField;
    
    private FilterDeviceParameter out2SendAmountField;
    
    private FilterDeviceParameter out2DestSendTrackField;
    
    private bool out2MuteSourceField;
    
    private FilterDeviceParameter out3SendAmountField;
    
    private FilterDeviceParameter out3DestSendTrackField;
    
    private bool out3MuteSourceField;
    
    private bool smoothParameterChangesField;
    
    private bool applyPostVolumeField;
    
    private bool graphVisibleField;
    
    private FilterDeviceParameter lowFrequencyField;
    
    private FilterDeviceParameter highFrequencyField;
    
    private CrossoverDeviceCrossoverType crossoverTypeField;
    
    private string typeField;
    
    public CrossoverDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.out1MuteSourceField = true;
        this.out2MuteSourceField = true;
        this.out3MuteSourceField = true;
        this.smoothParameterChangesField = true;
        this.applyPostVolumeField = true;
        this.graphVisibleField = true;
        this.crossoverTypeField = CrossoverDeviceCrossoverType.LR8;
        this.typeField = "CrossoverDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public CrossoverDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public CrossoverDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1SendAmount {
        get {
            return this.out1SendAmountField;
        }
        set {
            this.out1SendAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestSendTrack {
        get {
            return this.out1DestSendTrackField;
        }
        set {
            this.out1DestSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Out1MuteSource {
        get {
            return this.out1MuteSourceField;
        }
        set {
            this.out1MuteSourceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2SendAmount {
        get {
            return this.out2SendAmountField;
        }
        set {
            this.out2SendAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestSendTrack {
        get {
            return this.out2DestSendTrackField;
        }
        set {
            this.out2DestSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Out2MuteSource {
        get {
            return this.out2MuteSourceField;
        }
        set {
            this.out2MuteSourceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3SendAmount {
        get {
            return this.out3SendAmountField;
        }
        set {
            this.out3SendAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3DestSendTrack {
        get {
            return this.out3DestSendTrackField;
        }
        set {
            this.out3DestSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Out3MuteSource {
        get {
            return this.out3MuteSourceField;
        }
        set {
            this.out3MuteSourceField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool ApplyPostVolume {
        get {
            return this.applyPostVolumeField;
        }
        set {
            this.applyPostVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool GraphVisible {
        get {
            return this.graphVisibleField;
        }
        set {
            this.graphVisibleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LowFrequency {
        get {
            return this.lowFrequencyField;
        }
        set {
            this.lowFrequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter HighFrequency {
        get {
            return this.highFrequencyField;
        }
        set {
            this.highFrequencyField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(CrossoverDeviceCrossoverType.LR8)]
    public CrossoverDeviceCrossoverType CrossoverType {
        get {
            return this.crossoverTypeField;
        }
        set {
            this.crossoverTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CrossoverDevicePreset {
    
    private CrossoverDevice deviceSlotField;
    
    private string typeField;
    
    public CrossoverDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public CrossoverDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum CrossoverDeviceCrossoverType {
    
    /// <remarks/>
    LR2,
    
    /// <remarks/>
    LR4,
    
    /// <remarks/>
    LR8,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Fast FIR")]
    FastFIR,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Steep FIR")]
    SteepFIR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DcOffsetDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DcOffsetDevicePreset runTimePresetAField;
    
    private DcOffsetDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter dCOffsetField;
    
    private FilterDeviceParameter autoDCField;
    
    private string typeField;
    
    public DcOffsetDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "DcOffsetDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DcOffsetDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public DcOffsetDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DCOffset {
        get {
            return this.dCOffsetField;
        }
        set {
            this.dCOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter AutoDC {
        get {
            return this.autoDCField;
        }
        set {
            this.autoDCField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DcOffsetDevicePreset {
    
    private DcOffsetDevice deviceSlotField;
    
    private string typeField;
    
    public DcOffsetDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public DcOffsetDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DelayDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DelayDevicePreset runTimePresetAField;
    
    private DelayDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter lDelayField;
    
    private FilterDeviceParameter rDelayField;
    
    private FilterDeviceParameter lFeedbackField;
    
    private FilterDeviceParameter rFeedbackField;
    
    private FilterDeviceParameter trackSendField;
    
    private FilterDeviceParameter lineSyncField;
    
    private NonContinuesDeviceParameter lSetSyncedDelayField;
    
    private NonContinuesDeviceParameter rSetSyncedDelayField;
    
    private FilterDeviceParameter lTapPanField;
    
    private FilterDeviceParameter rTapPanField;
    
    private FilterDeviceParameter muteDrySignalField;
    
    private FilterDeviceParameter lSyncTimeField;
    
    private FilterDeviceParameter rSyncTimeField;
    
    private FilterDeviceParameter lSyncOffsetField;
    
    private FilterDeviceParameter rSyncOffsetField;
    
    private string typeField;
    
    public DelayDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "DelayDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DelayDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public DelayDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LDelay {
        get {
            return this.lDelayField;
        }
        set {
            this.lDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RDelay {
        get {
            return this.rDelayField;
        }
        set {
            this.rDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LFeedback {
        get {
            return this.lFeedbackField;
        }
        set {
            this.lFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RFeedback {
        get {
            return this.rFeedbackField;
        }
        set {
            this.rFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter TrackSend {
        get {
            return this.trackSendField;
        }
        set {
            this.trackSendField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LineSync {
        get {
            return this.lineSyncField;
        }
        set {
            this.lineSyncField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter LSetSyncedDelay {
        get {
            return this.lSetSyncedDelayField;
        }
        set {
            this.lSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter RSetSyncedDelay {
        get {
            return this.rSetSyncedDelayField;
        }
        set {
            this.rSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LTapPan {
        get {
            return this.lTapPanField;
        }
        set {
            this.lTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RTapPan {
        get {
            return this.rTapPanField;
        }
        set {
            this.rTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MuteDrySignal {
        get {
            return this.muteDrySignalField;
        }
        set {
            this.muteDrySignalField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LSyncTime {
        get {
            return this.lSyncTimeField;
        }
        set {
            this.lSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RSyncTime {
        get {
            return this.rSyncTimeField;
        }
        set {
            this.rSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LSyncOffset {
        get {
            return this.lSyncOffsetField;
        }
        set {
            this.lSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RSyncOffset {
        get {
            return this.rSyncOffsetField;
        }
        set {
            this.rSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DelayDevicePreset {
    
    private DelayDevice deviceSlotField;
    
    private string typeField;
    
    public DelayDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public DelayDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DigitalFilterDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DigitalFilterDevicePreset runTimePresetAField;
    
    private DigitalFilterDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private DigitalFilterDeviceOversamplingFactor oversamplingFactorField;
    
    private DigitalFilterDeviceModel modelField;
    
    private FilterDeviceParameter typeField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter qField;
    
    private FilterDeviceParameter rippleField;
    
    private FilterDeviceParameter inertiaField;
    
    private bool showResponseViewField;
    
    private float responseViewMaxGainField;
    
    private string typeField1;
    
    public DigitalFilterDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.oversamplingFactorField = DigitalFilterDeviceOversamplingFactor.Item2x;
        this.modelField = DigitalFilterDeviceModel.Biquad;
        this.showResponseViewField = true;
        this.responseViewMaxGainField = ((float)(18F));
        this.typeField1 = "DigitalFilterDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DigitalFilterDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public DigitalFilterDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(DigitalFilterDeviceOversamplingFactor.Item2x)]
    public DigitalFilterDeviceOversamplingFactor OversamplingFactor {
        get {
            return this.oversamplingFactorField;
        }
        set {
            this.oversamplingFactorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(DigitalFilterDeviceModel.Biquad)]
    public DigitalFilterDeviceModel Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Q {
        get {
            return this.qField;
        }
        set {
            this.qField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ripple {
        get {
            return this.rippleField;
        }
        set {
            this.rippleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool ShowResponseView {
        get {
            return this.showResponseViewField;
        }
        set {
            this.showResponseViewField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "18")]
    public float ResponseViewMaxGain {
        get {
            return this.responseViewMaxGainField;
        }
        set {
            this.responseViewMaxGainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DigitalFilterDevicePreset {
    
    private DigitalFilterDevice deviceSlotField;
    
    private string typeField;
    
    public DigitalFilterDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public DigitalFilterDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum DigitalFilterDeviceOversamplingFactor {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("1x")]
    Item1x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("2x")]
    Item2x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("4x")]
    Item4x,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("8x")]
    Item8x,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum DigitalFilterDeviceModel {
    
    /// <remarks/>
    Biquad,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Butterworth 4n")]
    Butterworth4n,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Butterworth 8n")]
    Butterworth8n,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Chebyshev 4n")]
    Chebyshev4n,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Chebyshev 8n")]
    Chebyshev8n,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Distortion2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Distortion2DevicePreset runTimePresetAField;
    
    private Distortion2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private bool oversampleField;
    
    private FilterDeviceParameter typeField;
    
    private FilterDeviceParameter driveField;
    
    private FilterDeviceParameter toneField;
    
    private FilterDeviceParameter wetOutField;
    
    private FilterDeviceParameter dryOutField;
    
    private string typeField1;
    
    public Distortion2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.oversampleField = false;
        this.typeField1 = "Distortion2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Distortion2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Distortion2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Oversample {
        get {
            return this.oversampleField;
        }
        set {
            this.oversampleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Drive {
        get {
            return this.driveField;
        }
        set {
            this.driveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tone {
        get {
            return this.toneField;
        }
        set {
            this.toneField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetOut {
        get {
            return this.wetOutField;
        }
        set {
            this.wetOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryOut {
        get {
            return this.dryOutField;
        }
        set {
            this.dryOutField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Distortion2DevicePreset {
    
    private Distortion2Device deviceSlotField;
    
    private string typeField;
    
    public Distortion2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Distortion2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DistortionDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DistortionDevicePreset runTimePresetAField;
    
    private DistortionDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter lpOrClampField;
    
    private FilterDeviceParameter wetOutField;
    
    private FilterDeviceParameter dryOutField;
    
    private FilterDeviceParameter gateOrFilterField;
    
    private FilterDeviceParameter typeField;
    
    private string typeField1;
    
    public DistortionDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField1 = "DistortionDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DistortionDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public DistortionDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LpOrClamp {
        get {
            return this.lpOrClampField;
        }
        set {
            this.lpOrClampField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetOut {
        get {
            return this.wetOutField;
        }
        set {
            this.wetOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryOut {
        get {
            return this.dryOutField;
        }
        set {
            this.dryOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter GateOrFilter {
        get {
            return this.gateOrFilterField;
        }
        set {
            this.gateOrFilterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DistortionDevicePreset {
    
    private DistortionDevice deviceSlotField;
    
    private string typeField;
    
    public DistortionDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public DistortionDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DooferDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DooferDevicePreset runTimePresetAField;
    
    private DooferDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private DooferMacroParameter macro0Field;
    
    private DooferMacroParameter macro1Field;
    
    private DooferMacroParameter macro2Field;
    
    private DooferMacroParameter macro3Field;
    
    private DooferMacroParameter macro4Field;
    
    private DooferMacroParameter macro5Field;
    
    private DooferMacroParameter macro6Field;
    
    private DooferMacroParameter macro7Field;
    
    private int numActiveMacrosField;
    
    private bool showDevicesField;
    
    private DooferFilterDeviceChain deviceChainField;
    
    private string typeField;
    
    public DooferDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.numActiveMacrosField = 4;
        this.showDevicesField = true;
        this.typeField = "DooferDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DooferDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public DooferDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro0 {
        get {
            return this.macro0Field;
        }
        set {
            this.macro0Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro1 {
        get {
            return this.macro1Field;
        }
        set {
            this.macro1Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro2 {
        get {
            return this.macro2Field;
        }
        set {
            this.macro2Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro3 {
        get {
            return this.macro3Field;
        }
        set {
            this.macro3Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro4 {
        get {
            return this.macro4Field;
        }
        set {
            this.macro4Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro5 {
        get {
            return this.macro5Field;
        }
        set {
            this.macro5Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro6 {
        get {
            return this.macro6Field;
        }
        set {
            this.macro6Field = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameter Macro7 {
        get {
            return this.macro7Field;
        }
        set {
            this.macro7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int NumActiveMacros {
        get {
            return this.numActiveMacrosField;
        }
        set {
            this.numActiveMacrosField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool ShowDevices {
        get {
            return this.showDevicesField;
        }
        set {
            this.showDevicesField = value;
        }
    }
    
    /// <remarks/>
    public DooferFilterDeviceChain DeviceChain {
        get {
            return this.deviceChainField;
        }
        set {
            this.deviceChainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DooferDevicePreset {
    
    private DooferDevice deviceSlotField;
    
    private string typeField;
    
    public DooferDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public DooferDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DooferMacroParameter {
    
    private float valueField;
    
    private DooferMacroParameterVisualization visualizationField;
    
    private DooferMacroParameterMidiMappings midiMappingsField;
    
    private string nameField;
    
    private DooferMacroParameterMappings mappingsField;
    
    private string typeField;
    
    public DooferMacroParameter() {
        this.valueField = ((float)(50F));
        this.visualizationField = DooferMacroParameterVisualization.Deviceonly;
        this.nameField = "Macro 1";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "50")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(DooferMacroParameterVisualization.Deviceonly)]
    public DooferMacroParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Macro 1")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public DooferMacroParameterMappings Mappings {
        get {
            return this.mappingsField;
        }
        set {
            this.mappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum DooferMacroParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class DooferMacroParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class DooferMacroParameterMappings {
    
    private DooferParameterMapping[] mappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Mapping")]
    public DooferParameterMapping[] Mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DooferParameterMapping {
    
    private int destDeviceIndexField;
    
    private int destParameterIndexField;
    
    private float minField;
    
    private float maxField;
    
    private DooferParameterMappingScaling scalingField;
    
    private string typeField;
    
    public DooferParameterMapping() {
        this.destDeviceIndexField = -1;
        this.destParameterIndexField = -1;
        this.minField = ((float)(0F));
        this.maxField = ((float)(1F));
        this.scalingField = DooferParameterMappingScaling.Linear;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DestDeviceIndex {
        get {
            return this.destDeviceIndexField;
        }
        set {
            this.destDeviceIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DestParameterIndex {
        get {
            return this.destParameterIndexField;
        }
        set {
            this.destParameterIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(DooferParameterMappingScaling.Linear)]
    public DooferParameterMappingScaling Scaling {
        get {
            return this.scalingField;
        }
        set {
            this.scalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum DooferParameterMappingScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DooferFilterDeviceChain {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private DooferFilterDeviceChainDevices devicesField;
    
    private string typeField;
    
    public DooferFilterDeviceChain() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public DooferFilterDeviceChainDevices Devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class DooferFilterDeviceChainDevices {
    
    private AnalogFilterDevice[] analogFilterDeviceField;
    
    private AudioPluginDevice[] audioPluginDeviceField;
    
    private BusCompressorDevice[] busCompressorDeviceField;
    
    private CabinetSimulatorDevice[] cabinetSimulatorDeviceField;
    
    private Chorus2Device[] chorus2DeviceField;
    
    private ChorusDevice[] chorusDeviceField;
    
    private Comb2Device[] comb2DeviceField;
    
    private CombDevice[] combDeviceField;
    
    private CompressorDevice[] compressorDeviceField;
    
    private ConvolverDevice[] convolverDeviceField;
    
    private CrossoverDevice[] crossoverDeviceField;
    
    private DcOffsetDevice[] dcOffsetDeviceField;
    
    private DelayDevice[] delayDeviceField;
    
    private DigitalFilterDevice[] digitalFilterDeviceField;
    
    private Distortion2Device[] distortion2DeviceField;
    
    private DistortionDevice[] distortionDeviceField;
    
    private DooferDevice[] dooferDeviceField;
    
    private Eq10Device[] eq10DeviceField;
    
    private Eq5Device[] eq5DeviceField;
    
    private ExciterDevice[] exciterDeviceField;
    
    private Filter1Device[] filter1DeviceField;
    
    private Filter2Device[] filter2DeviceField;
    
    private Filter3Device[] filter3DeviceField;
    
    private FilterDistortionDevice[] filterDistortionDeviceField;
    
    private Flanger2Device[] flanger2DeviceField;
    
    private FlangerDevice[] flangerDeviceField;
    
    private FormulaMetaDevice[] formulaMetaDeviceField;
    
    private GainerDevice[] gainerDeviceField;
    
    private Gate2Device[] gate2DeviceField;
    
    private GateDevice[] gateDeviceField;
    
    private HydraDevice[] hydraDeviceField;
    
    private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
    
    private InstrumentMacroDevice[] instrumentMacroDeviceField;
    
    private KeyTrackingDevice[] keyTrackingDeviceField;
    
    private LfoDevice[] lfoDeviceField;
    
    private LineInDevice[] lineInDeviceField;
    
    private Lofi2Device[] lofi2DeviceField;
    
    private LofiDevice[] lofiDeviceField;
    
    private MaximizerDevice[] maximizerDeviceField;
    
    private MetaMixerDevice[] metaMixerDeviceField;
    
    private MidiCCDevice[] midiCCDeviceField;
    
    private MidiControlDevice[] midiControlDeviceField;
    
    private MixerEqDevice[] mixerEqDeviceField;
    
    private MultitapDevice[] multitapDeviceField;
    
    private PdcTestDelayDevice[] pdcTestDelayDeviceField;
    
    private Phaser2Device[] phaser2DeviceField;
    
    private PhaserDevice[] phaserDeviceField;
    
    private RepeaterDevice[] repeaterDeviceField;
    
    private Reverb2Device[] reverb2DeviceField;
    
    private Reverb3Device[] reverb3DeviceField;
    
    private ReverbDevice[] reverbDeviceField;
    
    private RewireInDevice[] rewireInDeviceField;
    
    private RingMod2Device[] ringMod2DeviceField;
    
    private RingModDevice[] ringModDeviceField;
    
    private SendDevice[] sendDeviceField;
    
    private ShaperDevice[] shaperDeviceField;
    
    private SideChainDevice[] sideChainDeviceField;
    
    private SignalFollowerDevice[] signalFollowerDeviceField;
    
    private StereoExpanderDevice[] stereoExpanderDeviceField;
    
    private StutterDevice[] stutterDeviceField;
    
    private VelocityDevice[] velocityDeviceField;
    
    private XYPadDevice[] xYPadDeviceField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AnalogFilterDevice")]
    public AnalogFilterDevice[] AnalogFilterDevice {
        get {
            return this.analogFilterDeviceField;
        }
        set {
            this.analogFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice")]
    public AudioPluginDevice[] AudioPluginDevice {
        get {
            return this.audioPluginDeviceField;
        }
        set {
            this.audioPluginDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice")]
    public BusCompressorDevice[] BusCompressorDevice {
        get {
            return this.busCompressorDeviceField;
        }
        set {
            this.busCompressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CabinetSimulatorDevice")]
    public CabinetSimulatorDevice[] CabinetSimulatorDevice {
        get {
            return this.cabinetSimulatorDeviceField;
        }
        set {
            this.cabinetSimulatorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Chorus2Device")]
    public Chorus2Device[] Chorus2Device {
        get {
            return this.chorus2DeviceField;
        }
        set {
            this.chorus2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ChorusDevice")]
    public ChorusDevice[] ChorusDevice {
        get {
            return this.chorusDeviceField;
        }
        set {
            this.chorusDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Comb2Device")]
    public Comb2Device[] Comb2Device {
        get {
            return this.comb2DeviceField;
        }
        set {
            this.comb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CombDevice")]
    public CombDevice[] CombDevice {
        get {
            return this.combDeviceField;
        }
        set {
            this.combDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CompressorDevice")]
    public CompressorDevice[] CompressorDevice {
        get {
            return this.compressorDeviceField;
        }
        set {
            this.compressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConvolverDevice")]
    public ConvolverDevice[] ConvolverDevice {
        get {
            return this.convolverDeviceField;
        }
        set {
            this.convolverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CrossoverDevice")]
    public CrossoverDevice[] CrossoverDevice {
        get {
            return this.crossoverDeviceField;
        }
        set {
            this.crossoverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice")]
    public DcOffsetDevice[] DcOffsetDevice {
        get {
            return this.dcOffsetDeviceField;
        }
        set {
            this.dcOffsetDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DelayDevice")]
    public DelayDevice[] DelayDevice {
        get {
            return this.delayDeviceField;
        }
        set {
            this.delayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DigitalFilterDevice")]
    public DigitalFilterDevice[] DigitalFilterDevice {
        get {
            return this.digitalFilterDeviceField;
        }
        set {
            this.digitalFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Distortion2Device")]
    public Distortion2Device[] Distortion2Device {
        get {
            return this.distortion2DeviceField;
        }
        set {
            this.distortion2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DistortionDevice")]
    public DistortionDevice[] DistortionDevice {
        get {
            return this.distortionDeviceField;
        }
        set {
            this.distortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DooferDevice")]
    public DooferDevice[] DooferDevice {
        get {
            return this.dooferDeviceField;
        }
        set {
            this.dooferDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq10Device")]
    public Eq10Device[] Eq10Device {
        get {
            return this.eq10DeviceField;
        }
        set {
            this.eq10DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq5Device")]
    public Eq5Device[] Eq5Device {
        get {
            return this.eq5DeviceField;
        }
        set {
            this.eq5DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ExciterDevice")]
    public ExciterDevice[] ExciterDevice {
        get {
            return this.exciterDeviceField;
        }
        set {
            this.exciterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter1Device")]
    public Filter1Device[] Filter1Device {
        get {
            return this.filter1DeviceField;
        }
        set {
            this.filter1DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter2Device")]
    public Filter2Device[] Filter2Device {
        get {
            return this.filter2DeviceField;
        }
        set {
            this.filter2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter3Device")]
    public Filter3Device[] Filter3Device {
        get {
            return this.filter3DeviceField;
        }
        set {
            this.filter3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice")]
    public FilterDistortionDevice[] FilterDistortionDevice {
        get {
            return this.filterDistortionDeviceField;
        }
        set {
            this.filterDistortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Flanger2Device")]
    public Flanger2Device[] Flanger2Device {
        get {
            return this.flanger2DeviceField;
        }
        set {
            this.flanger2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FlangerDevice")]
    public FlangerDevice[] FlangerDevice {
        get {
            return this.flangerDeviceField;
        }
        set {
            this.flangerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FormulaMetaDevice")]
    public FormulaMetaDevice[] FormulaMetaDevice {
        get {
            return this.formulaMetaDeviceField;
        }
        set {
            this.formulaMetaDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GainerDevice")]
    public GainerDevice[] GainerDevice {
        get {
            return this.gainerDeviceField;
        }
        set {
            this.gainerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Gate2Device")]
    public Gate2Device[] Gate2Device {
        get {
            return this.gate2DeviceField;
        }
        set {
            this.gate2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GateDevice")]
    public GateDevice[] GateDevice {
        get {
            return this.gateDeviceField;
        }
        set {
            this.gateDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("HydraDevice")]
    public HydraDevice[] HydraDevice {
        get {
            return this.hydraDeviceField;
        }
        set {
            this.hydraDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice")]
    public InstrumentAutomationDevice[] InstrumentAutomationDevice {
        get {
            return this.instrumentAutomationDeviceField;
        }
        set {
            this.instrumentAutomationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentMacroDevice")]
    public InstrumentMacroDevice[] InstrumentMacroDevice {
        get {
            return this.instrumentMacroDeviceField;
        }
        set {
            this.instrumentMacroDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyTrackingDevice")]
    public KeyTrackingDevice[] KeyTrackingDevice {
        get {
            return this.keyTrackingDeviceField;
        }
        set {
            this.keyTrackingDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LfoDevice")]
    public LfoDevice[] LfoDevice {
        get {
            return this.lfoDeviceField;
        }
        set {
            this.lfoDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LineInDevice")]
    public LineInDevice[] LineInDevice {
        get {
            return this.lineInDeviceField;
        }
        set {
            this.lineInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lofi2Device")]
    public Lofi2Device[] Lofi2Device {
        get {
            return this.lofi2DeviceField;
        }
        set {
            this.lofi2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LofiDevice")]
    public LofiDevice[] LofiDevice {
        get {
            return this.lofiDeviceField;
        }
        set {
            this.lofiDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice")]
    public MaximizerDevice[] MaximizerDevice {
        get {
            return this.maximizerDeviceField;
        }
        set {
            this.maximizerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MetaMixerDevice")]
    public MetaMixerDevice[] MetaMixerDevice {
        get {
            return this.metaMixerDeviceField;
        }
        set {
            this.metaMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice")]
    public MidiCCDevice[] MidiCCDevice {
        get {
            return this.midiCCDeviceField;
        }
        set {
            this.midiCCDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiControlDevice")]
    public MidiControlDevice[] MidiControlDevice {
        get {
            return this.midiControlDeviceField;
        }
        set {
            this.midiControlDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice")]
    public MixerEqDevice[] MixerEqDevice {
        get {
            return this.mixerEqDeviceField;
        }
        set {
            this.mixerEqDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MultitapDevice")]
    public MultitapDevice[] MultitapDevice {
        get {
            return this.multitapDeviceField;
        }
        set {
            this.multitapDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice")]
    public PdcTestDelayDevice[] PdcTestDelayDevice {
        get {
            return this.pdcTestDelayDeviceField;
        }
        set {
            this.pdcTestDelayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Phaser2Device")]
    public Phaser2Device[] Phaser2Device {
        get {
            return this.phaser2DeviceField;
        }
        set {
            this.phaser2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PhaserDevice")]
    public PhaserDevice[] PhaserDevice {
        get {
            return this.phaserDeviceField;
        }
        set {
            this.phaserDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RepeaterDevice")]
    public RepeaterDevice[] RepeaterDevice {
        get {
            return this.repeaterDeviceField;
        }
        set {
            this.repeaterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb2Device")]
    public Reverb2Device[] Reverb2Device {
        get {
            return this.reverb2DeviceField;
        }
        set {
            this.reverb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb3Device")]
    public Reverb3Device[] Reverb3Device {
        get {
            return this.reverb3DeviceField;
        }
        set {
            this.reverb3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReverbDevice")]
    public ReverbDevice[] ReverbDevice {
        get {
            return this.reverbDeviceField;
        }
        set {
            this.reverbDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RewireInDevice")]
    public RewireInDevice[] RewireInDevice {
        get {
            return this.rewireInDeviceField;
        }
        set {
            this.rewireInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingMod2Device")]
    public RingMod2Device[] RingMod2Device {
        get {
            return this.ringMod2DeviceField;
        }
        set {
            this.ringMod2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingModDevice")]
    public RingModDevice[] RingModDevice {
        get {
            return this.ringModDeviceField;
        }
        set {
            this.ringModDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SendDevice")]
    public SendDevice[] SendDevice {
        get {
            return this.sendDeviceField;
        }
        set {
            this.sendDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ShaperDevice")]
    public ShaperDevice[] ShaperDevice {
        get {
            return this.shaperDeviceField;
        }
        set {
            this.shaperDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SideChainDevice")]
    public SideChainDevice[] SideChainDevice {
        get {
            return this.sideChainDeviceField;
        }
        set {
            this.sideChainDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SignalFollowerDevice")]
    public SignalFollowerDevice[] SignalFollowerDevice {
        get {
            return this.signalFollowerDeviceField;
        }
        set {
            this.signalFollowerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice")]
    public StereoExpanderDevice[] StereoExpanderDevice {
        get {
            return this.stereoExpanderDeviceField;
        }
        set {
            this.stereoExpanderDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StutterDevice")]
    public StutterDevice[] StutterDevice {
        get {
            return this.stutterDeviceField;
        }
        set {
            this.stutterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("VelocityDevice")]
    public VelocityDevice[] VelocityDevice {
        get {
            return this.velocityDeviceField;
        }
        set {
            this.velocityDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("XYPadDevice")]
    public XYPadDevice[] XYPadDevice {
        get {
            return this.xYPadDeviceField;
        }
        set {
            this.xYPadDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Eq10Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Eq10DevicePreset runTimePresetAField;
    
    private Eq10DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private Eq10DeviceInputMode inputModeField;
    
    private float maxVisualizedGainField;
    
    private FilterDeviceParameter gain0Field;
    
    private FilterDeviceParameter gain1Field;
    
    private FilterDeviceParameter gain2Field;
    
    private FilterDeviceParameter gain3Field;
    
    private FilterDeviceParameter gain4Field;
    
    private FilterDeviceParameter gain5Field;
    
    private FilterDeviceParameter gain6Field;
    
    private FilterDeviceParameter gain7Field;
    
    private FilterDeviceParameter gain8Field;
    
    private FilterDeviceParameter gain9Field;
    
    private FilterDeviceParameter frequency0Field;
    
    private FilterDeviceParameter frequency1Field;
    
    private FilterDeviceParameter frequency2Field;
    
    private FilterDeviceParameter frequency3Field;
    
    private FilterDeviceParameter frequency4Field;
    
    private FilterDeviceParameter frequency5Field;
    
    private FilterDeviceParameter frequency6Field;
    
    private FilterDeviceParameter frequency7Field;
    
    private FilterDeviceParameter frequency8Field;
    
    private FilterDeviceParameter frequency9Field;
    
    private FilterDeviceParameter bandWidth0Field;
    
    private FilterDeviceParameter bandWidth1Field;
    
    private FilterDeviceParameter bandWidth2Field;
    
    private FilterDeviceParameter bandWidth3Field;
    
    private FilterDeviceParameter bandWidth4Field;
    
    private FilterDeviceParameter bandWidth5Field;
    
    private FilterDeviceParameter bandWidth6Field;
    
    private FilterDeviceParameter bandWidth7Field;
    
    private FilterDeviceParameter bandWidth8Field;
    
    private FilterDeviceParameter bandWidth9Field;
    
    private Eq10DeviceVisualizationMode visualizationModeField;
    
    private string typeField;
    
    public Eq10Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.inputModeField = Eq10DeviceInputMode.LR1;
        this.maxVisualizedGainField = ((float)(20F));
        this.visualizationModeField = Eq10DeviceVisualizationMode.GraphOnly;
        this.typeField = "Eq10Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Eq10DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Eq10DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Eq10DeviceInputMode.LR1)]
    public Eq10DeviceInputMode InputMode {
        get {
            return this.inputModeField;
        }
        set {
            this.inputModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
    public float MaxVisualizedGain {
        get {
            return this.maxVisualizedGainField;
        }
        set {
            this.maxVisualizedGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain0 {
        get {
            return this.gain0Field;
        }
        set {
            this.gain0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain1 {
        get {
            return this.gain1Field;
        }
        set {
            this.gain1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain2 {
        get {
            return this.gain2Field;
        }
        set {
            this.gain2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain3 {
        get {
            return this.gain3Field;
        }
        set {
            this.gain3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain4 {
        get {
            return this.gain4Field;
        }
        set {
            this.gain4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain5 {
        get {
            return this.gain5Field;
        }
        set {
            this.gain5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain6 {
        get {
            return this.gain6Field;
        }
        set {
            this.gain6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain7 {
        get {
            return this.gain7Field;
        }
        set {
            this.gain7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain8 {
        get {
            return this.gain8Field;
        }
        set {
            this.gain8Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain9 {
        get {
            return this.gain9Field;
        }
        set {
            this.gain9Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency0 {
        get {
            return this.frequency0Field;
        }
        set {
            this.frequency0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency1 {
        get {
            return this.frequency1Field;
        }
        set {
            this.frequency1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency2 {
        get {
            return this.frequency2Field;
        }
        set {
            this.frequency2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency3 {
        get {
            return this.frequency3Field;
        }
        set {
            this.frequency3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency4 {
        get {
            return this.frequency4Field;
        }
        set {
            this.frequency4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency5 {
        get {
            return this.frequency5Field;
        }
        set {
            this.frequency5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency6 {
        get {
            return this.frequency6Field;
        }
        set {
            this.frequency6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency7 {
        get {
            return this.frequency7Field;
        }
        set {
            this.frequency7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency8 {
        get {
            return this.frequency8Field;
        }
        set {
            this.frequency8Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency9 {
        get {
            return this.frequency9Field;
        }
        set {
            this.frequency9Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth0 {
        get {
            return this.bandWidth0Field;
        }
        set {
            this.bandWidth0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth1 {
        get {
            return this.bandWidth1Field;
        }
        set {
            this.bandWidth1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth2 {
        get {
            return this.bandWidth2Field;
        }
        set {
            this.bandWidth2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth3 {
        get {
            return this.bandWidth3Field;
        }
        set {
            this.bandWidth3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth4 {
        get {
            return this.bandWidth4Field;
        }
        set {
            this.bandWidth4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth5 {
        get {
            return this.bandWidth5Field;
        }
        set {
            this.bandWidth5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth6 {
        get {
            return this.bandWidth6Field;
        }
        set {
            this.bandWidth6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth7 {
        get {
            return this.bandWidth7Field;
        }
        set {
            this.bandWidth7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth8 {
        get {
            return this.bandWidth8Field;
        }
        set {
            this.bandWidth8Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth9 {
        get {
            return this.bandWidth9Field;
        }
        set {
            this.bandWidth9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Eq10DeviceVisualizationMode.GraphOnly)]
    public Eq10DeviceVisualizationMode VisualizationMode {
        get {
            return this.visualizationModeField;
        }
        set {
            this.visualizationModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Eq10DevicePreset {
    
    private Eq10Device deviceSlotField;
    
    private string typeField;
    
    public Eq10DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Eq10Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Eq10DeviceInputMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L-R")]
    LR,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR1,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Eq10DeviceVisualizationMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Graph Only")]
    GraphOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Sliders Only")]
    SlidersOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Full Display")]
    FullDisplay,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Eq5Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Eq5DevicePreset runTimePresetAField;
    
    private Eq5DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private Eq5DeviceInputMode inputModeField;
    
    private float maxVisualizedGainField;
    
    private FilterDeviceParameter gain0Field;
    
    private FilterDeviceParameter gain1Field;
    
    private FilterDeviceParameter gain2Field;
    
    private FilterDeviceParameter gain3Field;
    
    private FilterDeviceParameter gain4Field;
    
    private FilterDeviceParameter frequency0Field;
    
    private FilterDeviceParameter frequency1Field;
    
    private FilterDeviceParameter frequency2Field;
    
    private FilterDeviceParameter frequency3Field;
    
    private FilterDeviceParameter frequency4Field;
    
    private FilterDeviceParameter bandWidth0Field;
    
    private FilterDeviceParameter bandWidth1Field;
    
    private FilterDeviceParameter bandWidth2Field;
    
    private FilterDeviceParameter bandWidth3Field;
    
    private FilterDeviceParameter bandWidth4Field;
    
    private Eq5DeviceVisualizationMode visualizationModeField;
    
    private string typeField;
    
    public Eq5Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.inputModeField = Eq5DeviceInputMode.LR1;
        this.maxVisualizedGainField = ((float)(20F));
        this.visualizationModeField = Eq5DeviceVisualizationMode.GraphOnly;
        this.typeField = "Eq5Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Eq5DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Eq5DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Eq5DeviceInputMode.LR1)]
    public Eq5DeviceInputMode InputMode {
        get {
            return this.inputModeField;
        }
        set {
            this.inputModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "20")]
    public float MaxVisualizedGain {
        get {
            return this.maxVisualizedGainField;
        }
        set {
            this.maxVisualizedGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain0 {
        get {
            return this.gain0Field;
        }
        set {
            this.gain0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain1 {
        get {
            return this.gain1Field;
        }
        set {
            this.gain1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain2 {
        get {
            return this.gain2Field;
        }
        set {
            this.gain2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain3 {
        get {
            return this.gain3Field;
        }
        set {
            this.gain3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain4 {
        get {
            return this.gain4Field;
        }
        set {
            this.gain4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency0 {
        get {
            return this.frequency0Field;
        }
        set {
            this.frequency0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency1 {
        get {
            return this.frequency1Field;
        }
        set {
            this.frequency1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency2 {
        get {
            return this.frequency2Field;
        }
        set {
            this.frequency2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency3 {
        get {
            return this.frequency3Field;
        }
        set {
            this.frequency3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency4 {
        get {
            return this.frequency4Field;
        }
        set {
            this.frequency4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth0 {
        get {
            return this.bandWidth0Field;
        }
        set {
            this.bandWidth0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth1 {
        get {
            return this.bandWidth1Field;
        }
        set {
            this.bandWidth1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth2 {
        get {
            return this.bandWidth2Field;
        }
        set {
            this.bandWidth2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth3 {
        get {
            return this.bandWidth3Field;
        }
        set {
            this.bandWidth3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BandWidth4 {
        get {
            return this.bandWidth4Field;
        }
        set {
            this.bandWidth4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Eq5DeviceVisualizationMode.GraphOnly)]
    public Eq5DeviceVisualizationMode VisualizationMode {
        get {
            return this.visualizationModeField;
        }
        set {
            this.visualizationModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Eq5DevicePreset {
    
    private Eq5Device deviceSlotField;
    
    private string typeField;
    
    public Eq5DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Eq5Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Eq5DeviceInputMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L-R")]
    LR,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR1,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Eq5DeviceVisualizationMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Graph Only")]
    GraphOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Sliders Only")]
    SlidersOnly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Full Display")]
    FullDisplay,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ExciterDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private ExciterDevicePreset runTimePresetAField;
    
    private ExciterDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter lowFrequencyField;
    
    private FilterDeviceParameter highFrequencyField;
    
    private ExciterDeviceVisibleBand visibleBandField;
    
    private FilterDeviceParameter band1ModeField;
    
    private FilterDeviceParameter band1Sharpness1Field;
    
    private FilterDeviceParameter band1Amount1Field;
    
    private FilterDeviceParameter band1Sharpness2Field;
    
    private FilterDeviceParameter band1Amount2Field;
    
    private FilterDeviceParameter band1Sharpness3Field;
    
    private FilterDeviceParameter band1Amount3Field;
    
    private FilterDeviceParameter band2ModeField;
    
    private FilterDeviceParameter band2Sharpness1Field;
    
    private FilterDeviceParameter band2Amount1Field;
    
    private FilterDeviceParameter band2Sharpness2Field;
    
    private FilterDeviceParameter band2Amount2Field;
    
    private FilterDeviceParameter band2Sharpness3Field;
    
    private FilterDeviceParameter band2Amount3Field;
    
    private FilterDeviceParameter band3ModeField;
    
    private FilterDeviceParameter band3Sharpness1Field;
    
    private FilterDeviceParameter band3Amount1Field;
    
    private FilterDeviceParameter band3Sharpness2Field;
    
    private FilterDeviceParameter band3Amount2Field;
    
    private FilterDeviceParameter band3Sharpness3Field;
    
    private FilterDeviceParameter band3Amount3Field;
    
    private string typeField;
    
    public ExciterDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.visibleBandField = ExciterDeviceVisibleBand.High;
        this.typeField = "ExciterDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public ExciterDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public ExciterDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LowFrequency {
        get {
            return this.lowFrequencyField;
        }
        set {
            this.lowFrequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter HighFrequency {
        get {
            return this.highFrequencyField;
        }
        set {
            this.highFrequencyField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(ExciterDeviceVisibleBand.High)]
    public ExciterDeviceVisibleBand VisibleBand {
        get {
            return this.visibleBandField;
        }
        set {
            this.visibleBandField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Mode {
        get {
            return this.band1ModeField;
        }
        set {
            this.band1ModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Sharpness1 {
        get {
            return this.band1Sharpness1Field;
        }
        set {
            this.band1Sharpness1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Amount1 {
        get {
            return this.band1Amount1Field;
        }
        set {
            this.band1Amount1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Sharpness2 {
        get {
            return this.band1Sharpness2Field;
        }
        set {
            this.band1Sharpness2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Amount2 {
        get {
            return this.band1Amount2Field;
        }
        set {
            this.band1Amount2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Sharpness3 {
        get {
            return this.band1Sharpness3Field;
        }
        set {
            this.band1Sharpness3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band1Amount3 {
        get {
            return this.band1Amount3Field;
        }
        set {
            this.band1Amount3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Mode {
        get {
            return this.band2ModeField;
        }
        set {
            this.band2ModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Sharpness1 {
        get {
            return this.band2Sharpness1Field;
        }
        set {
            this.band2Sharpness1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Amount1 {
        get {
            return this.band2Amount1Field;
        }
        set {
            this.band2Amount1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Sharpness2 {
        get {
            return this.band2Sharpness2Field;
        }
        set {
            this.band2Sharpness2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Amount2 {
        get {
            return this.band2Amount2Field;
        }
        set {
            this.band2Amount2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Sharpness3 {
        get {
            return this.band2Sharpness3Field;
        }
        set {
            this.band2Sharpness3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band2Amount3 {
        get {
            return this.band2Amount3Field;
        }
        set {
            this.band2Amount3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Mode {
        get {
            return this.band3ModeField;
        }
        set {
            this.band3ModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Sharpness1 {
        get {
            return this.band3Sharpness1Field;
        }
        set {
            this.band3Sharpness1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Amount1 {
        get {
            return this.band3Amount1Field;
        }
        set {
            this.band3Amount1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Sharpness2 {
        get {
            return this.band3Sharpness2Field;
        }
        set {
            this.band3Sharpness2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Amount2 {
        get {
            return this.band3Amount2Field;
        }
        set {
            this.band3Amount2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Sharpness3 {
        get {
            return this.band3Sharpness3Field;
        }
        set {
            this.band3Sharpness3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Band3Amount3 {
        get {
            return this.band3Amount3Field;
        }
        set {
            this.band3Amount3Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ExciterDevicePreset {
    
    private ExciterDevice deviceSlotField;
    
    private string typeField;
    
    public ExciterDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public ExciterDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum ExciterDeviceVisibleBand {
    
    /// <remarks/>
    Low,
    
    /// <remarks/>
    Mid,
    
    /// <remarks/>
    High,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter1Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Filter1DevicePreset runTimePresetAField;
    
    private Filter1DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter resonanceField;
    
    private FilterDeviceParameter innertiaField;
    
    private FilterDeviceParameter typeField;
    
    private string typeField1;
    
    public Filter1Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField1 = "Filter1Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Filter1DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Filter1DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resonance {
        get {
            return this.resonanceField;
        }
        set {
            this.resonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Innertia {
        get {
            return this.innertiaField;
        }
        set {
            this.innertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter1DevicePreset {
    
    private Filter1Device deviceSlotField;
    
    private string typeField;
    
    public Filter1DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Filter1Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Filter2DevicePreset runTimePresetAField;
    
    private Filter2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter resonanceField;
    
    private FilterDeviceParameter innertiaField;
    
    private FilterDeviceParameter typeField;
    
    private bool limitMoogFilterOutputField;
    
    private string typeField1;
    
    public Filter2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.limitMoogFilterOutputField = true;
        this.typeField1 = "Filter2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Filter2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Filter2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resonance {
        get {
            return this.resonanceField;
        }
        set {
            this.resonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Innertia {
        get {
            return this.innertiaField;
        }
        set {
            this.innertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool LimitMoogFilterOutput {
        get {
            return this.limitMoogFilterOutputField;
        }
        set {
            this.limitMoogFilterOutputField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter2DevicePreset {
    
    private Filter2Device deviceSlotField;
    
    private string typeField;
    
    public Filter2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Filter2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter3Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Filter3DevicePreset runTimePresetAField;
    
    private Filter3DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter typeField;
    
    private FilterDeviceParameter frequencyField;
    
    private FilterDeviceParameter qField;
    
    private FilterDeviceParameter gainField;
    
    private FilterDeviceParameter inertiaField;
    
    private Filter3DeviceModel modelField;
    
    private string typeField1;
    
    public Filter3Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.modelField = Filter3DeviceModel.Item24dB4Pole;
        this.typeField1 = "Filter3Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Filter3DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Filter3DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Q {
        get {
            return this.qField;
        }
        set {
            this.qField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain {
        get {
            return this.gainField;
        }
        set {
            this.gainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(Filter3DeviceModel.Item24dB4Pole)]
    public Filter3DeviceModel Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Filter3DevicePreset {
    
    private Filter3Device deviceSlotField;
    
    private string typeField;
    
    public Filter3DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Filter3Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum Filter3DeviceModel {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("24dB 4Pole")]
    Item24dB4Pole,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("24dB Moog")]
    Item24dBMoog,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Butterworth 4n")]
    Butterworth4n,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Butterworth 8n")]
    Butterworth8n,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FilterDistortionDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private FilterDistortionDevicePreset runTimePresetAField;
    
    private FilterDistortionDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private bool oversampleField;
    
    private FilterDeviceParameter filterTypeField;
    
    private FilterDeviceParameter driveField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter resonanceField;
    
    private FilterDeviceParameter inertiaField;
    
    private string typeField;
    
    public FilterDistortionDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.oversampleField = false;
        this.typeField = "FilterDistortionDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public FilterDistortionDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public FilterDistortionDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Oversample {
        get {
            return this.oversampleField;
        }
        set {
            this.oversampleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Drive {
        get {
            return this.driveField;
        }
        set {
            this.driveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resonance {
        get {
            return this.resonanceField;
        }
        set {
            this.resonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FilterDistortionDevicePreset {
    
    private FilterDistortionDevice deviceSlotField;
    
    private string typeField;
    
    public FilterDistortionDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public FilterDistortionDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Flanger2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Flanger2DevicePreset runTimePresetAField;
    
    private Flanger2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter amountField;
    
    private FilterDeviceParameter rateField;
    
    private FilterDeviceParameter amplitudeField;
    
    private FilterDeviceParameter feedBackField;
    
    private FilterDeviceParameter delayField;
    
    private FilterDeviceParameter dephaseField;
    
    private NonContinuesDeviceParameter resetField;
    
    private FilterDeviceParameter filterTypeField;
    
    private FilterDeviceParameter filterFreqField;
    
    private FilterDeviceParameter filterResonanceField;
    
    private FilterDeviceParameter filterDriveField;
    
    private string typeField;
    
    public Flanger2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Flanger2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Flanger2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Flanger2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amplitude {
        get {
            return this.amplitudeField;
        }
        set {
            this.amplitudeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FeedBack {
        get {
            return this.feedBackField;
        }
        set {
            this.feedBackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dephase {
        get {
            return this.dephaseField;
        }
        set {
            this.dephaseField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Reset {
        get {
            return this.resetField;
        }
        set {
            this.resetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterFreq {
        get {
            return this.filterFreqField;
        }
        set {
            this.filterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterResonance {
        get {
            return this.filterResonanceField;
        }
        set {
            this.filterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterDrive {
        get {
            return this.filterDriveField;
        }
        set {
            this.filterDriveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Flanger2DevicePreset {
    
    private Flanger2Device deviceSlotField;
    
    private string typeField;
    
    public Flanger2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Flanger2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FlangerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private FlangerDevicePreset runTimePresetAField;
    
    private FlangerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter amountField;
    
    private FilterDeviceParameter rateField;
    
    private FilterDeviceParameter amplitudeField;
    
    private FilterDeviceParameter feedBackField;
    
    private FilterDeviceParameter delayField;
    
    private FilterDeviceParameter dephaseField;
    
    private FilterDeviceParameter filterTypeField;
    
    private FilterDeviceParameter filterFreqField;
    
    private FilterDeviceParameter filterResonanceField;
    
    private string typeField;
    
    public FlangerDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "FlangerDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public FlangerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public FlangerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amplitude {
        get {
            return this.amplitudeField;
        }
        set {
            this.amplitudeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FeedBack {
        get {
            return this.feedBackField;
        }
        set {
            this.feedBackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dephase {
        get {
            return this.dephaseField;
        }
        set {
            this.dephaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterFreq {
        get {
            return this.filterFreqField;
        }
        set {
            this.filterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter FilterResonance {
        get {
            return this.filterResonanceField;
        }
        set {
            this.filterResonanceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FlangerDevicePreset {
    
    private FlangerDevice deviceSlotField;
    
    private string typeField;
    
    public FlangerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public FlangerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FormulaMetaDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private FormulaMetaDevicePreset runTimePresetAField;
    
    private FormulaMetaDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private string[] formulaParagraphsField;
    
    private string[] functionsParagraphsField;
    
    private string inputNameAField;
    
    private string inputNameBField;
    
    private string inputNameCField;
    
    private bool editorVisibleField;
    
    private FilterDeviceParameter inputAField;
    
    private FilterDeviceParameter inputBField;
    
    private FilterDeviceParameter inputCField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private string typeField;
    
    public FormulaMetaDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.inputNameAField = "A";
        this.inputNameBField = "B";
        this.inputNameCField = "C";
        this.editorVisibleField = true;
        this.typeField = "FormulaMetaDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public FormulaMetaDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public FormulaMetaDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("FormulaParagraph", IsNullable=false)]
    public string[] FormulaParagraphs {
        get {
            return this.formulaParagraphsField;
        }
        set {
            this.formulaParagraphsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("FunctionsParagraph", IsNullable=false)]
    public string[] FunctionsParagraphs {
        get {
            return this.functionsParagraphsField;
        }
        set {
            this.functionsParagraphsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("A")]
    public string InputNameA {
        get {
            return this.inputNameAField;
        }
        set {
            this.inputNameAField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("B")]
    public string InputNameB {
        get {
            return this.inputNameBField;
        }
        set {
            this.inputNameBField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("C")]
    public string InputNameC {
        get {
            return this.inputNameCField;
        }
        set {
            this.inputNameCField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool EditorVisible {
        get {
            return this.editorVisibleField;
        }
        set {
            this.editorVisibleField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputA {
        get {
            return this.inputAField;
        }
        set {
            this.inputAField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputB {
        get {
            return this.inputBField;
        }
        set {
            this.inputBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputC {
        get {
            return this.inputCField;
        }
        set {
            this.inputCField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FormulaMetaDevicePreset {
    
    private FormulaMetaDevice deviceSlotField;
    
    private string typeField;
    
    public FormulaMetaDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public FormulaMetaDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GainerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private GainerDevicePreset runTimePresetAField;
    
    private GainerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter volumeField;
    
    private FilterDeviceParameter panningField;
    
    private bool lPhaseInvertField;
    
    private bool rPhaseInvertField;
    
    private bool smoothParameterChangesField;
    
    private string typeField;
    
    public GainerDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.lPhaseInvertField = false;
        this.rPhaseInvertField = false;
        this.smoothParameterChangesField = true;
        this.typeField = "GainerDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public GainerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public GainerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool LPhaseInvert {
        get {
            return this.lPhaseInvertField;
        }
        set {
            this.lPhaseInvertField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool RPhaseInvert {
        get {
            return this.rPhaseInvertField;
        }
        set {
            this.rPhaseInvertField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GainerDevicePreset {
    
    private GainerDevice deviceSlotField;
    
    private string typeField;
    
    public GainerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public GainerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Gate2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Gate2DevicePreset runTimePresetAField;
    
    private Gate2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter attackField;
    
    private FilterDeviceParameter holdField;
    
    private FilterDeviceParameter releaseField;
    
    private FilterDeviceParameter floorField;
    
    private bool listenToSideChainField;
    
    private FilterDeviceParameter sideChainHpFreqField;
    
    private FilterDeviceParameter sideChainLpFreqField;
    
    private FilterDeviceParameter typeField;
    
    private FilterDeviceParameter mixModeField;
    
    private string typeField1;
    
    public Gate2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.listenToSideChainField = false;
        this.typeField1 = "Gate2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Gate2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Gate2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Hold {
        get {
            return this.holdField;
        }
        set {
            this.holdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Floor {
        get {
            return this.floorField;
        }
        set {
            this.floorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ListenToSideChain {
        get {
            return this.listenToSideChainField;
        }
        set {
            this.listenToSideChainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SideChainHpFreq {
        get {
            return this.sideChainHpFreqField;
        }
        set {
            this.sideChainHpFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SideChainLpFreq {
        get {
            return this.sideChainLpFreqField;
        }
        set {
            this.sideChainLpFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MixMode {
        get {
            return this.mixModeField;
        }
        set {
            this.mixModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Gate2DevicePreset {
    
    private Gate2Device deviceSlotField;
    
    private string typeField;
    
    public Gate2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Gate2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GateDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private GateDevicePreset runTimePresetAField;
    
    private GateDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter attackInMsField;
    
    private FilterDeviceParameter holdInMsField;
    
    private FilterDeviceParameter releaseInMsField;
    
    private FilterDeviceParameter gatedVolumeField;
    
    private string typeField;
    
    public GateDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "GateDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public GateDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public GateDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter AttackInMs {
        get {
            return this.attackInMsField;
        }
        set {
            this.attackInMsField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter HoldInMs {
        get {
            return this.holdInMsField;
        }
        set {
            this.holdInMsField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ReleaseInMs {
        get {
            return this.releaseInMsField;
        }
        set {
            this.releaseInMsField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter GatedVolume {
        get {
            return this.gatedVolumeField;
        }
        set {
            this.gatedVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GateDevicePreset {
    
    private GateDevice deviceSlotField;
    
    private string typeField;
    
    public GateDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public GateDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HydraDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private HydraDevicePreset runTimePresetAField;
    
    private HydraDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int visiblePagesField;
    
    private FilterDeviceParameter inputValueField;
    
    private FilterDeviceParameter out1DestTrackField;
    
    private FilterDeviceParameter out1DestEffectField;
    
    private FilterDeviceParameter out1DestParameterField;
    
    private FilterDeviceParameter out1MinField;
    
    private FilterDeviceParameter out1MaxField;
    
    private HydraDeviceOut1Scaling out1ScalingField;
    
    private FilterDeviceParameter out2DestTrackField;
    
    private FilterDeviceParameter out2DestEffectField;
    
    private FilterDeviceParameter out2DestParameterField;
    
    private FilterDeviceParameter out2MinField;
    
    private FilterDeviceParameter out2MaxField;
    
    private HydraDeviceOut2Scaling out2ScalingField;
    
    private FilterDeviceParameter out3DestTrackField;
    
    private FilterDeviceParameter out3DestEffectField;
    
    private FilterDeviceParameter out3DestParameterField;
    
    private FilterDeviceParameter out3MinField;
    
    private FilterDeviceParameter out3MaxField;
    
    private HydraDeviceOut3Scaling out3ScalingField;
    
    private FilterDeviceParameter out4DestTrackField;
    
    private FilterDeviceParameter out4DestEffectField;
    
    private FilterDeviceParameter out4DestParameterField;
    
    private FilterDeviceParameter out4MinField;
    
    private FilterDeviceParameter out4MaxField;
    
    private HydraDeviceOut4Scaling out4ScalingField;
    
    private FilterDeviceParameter out5DestTrackField;
    
    private FilterDeviceParameter out5DestEffectField;
    
    private FilterDeviceParameter out5DestParameterField;
    
    private FilterDeviceParameter out5MinField;
    
    private FilterDeviceParameter out5MaxField;
    
    private HydraDeviceOut5Scaling out5ScalingField;
    
    private FilterDeviceParameter out6DestTrackField;
    
    private FilterDeviceParameter out6DestEffectField;
    
    private FilterDeviceParameter out6DestParameterField;
    
    private FilterDeviceParameter out6MinField;
    
    private FilterDeviceParameter out6MaxField;
    
    private HydraDeviceOut6Scaling out6ScalingField;
    
    private FilterDeviceParameter out7DestTrackField;
    
    private FilterDeviceParameter out7DestEffectField;
    
    private FilterDeviceParameter out7DestParameterField;
    
    private FilterDeviceParameter out7MinField;
    
    private FilterDeviceParameter out7MaxField;
    
    private HydraDeviceOut7Scaling out7ScalingField;
    
    private FilterDeviceParameter out8DestTrackField;
    
    private FilterDeviceParameter out8DestEffectField;
    
    private FilterDeviceParameter out8DestParameterField;
    
    private FilterDeviceParameter out8MinField;
    
    private FilterDeviceParameter out8MaxField;
    
    private HydraDeviceOut8Scaling out8ScalingField;
    
    private FilterDeviceParameter out9DestTrackField;
    
    private FilterDeviceParameter out9DestEffectField;
    
    private FilterDeviceParameter out9DestParameterField;
    
    private FilterDeviceParameter out9MinField;
    
    private FilterDeviceParameter out9MaxField;
    
    private HydraDeviceOut9Scaling out9ScalingField;
    
    private string typeField;
    
    public HydraDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.visiblePagesField = 1;
        this.out1ScalingField = HydraDeviceOut1Scaling.Linear;
        this.out2ScalingField = HydraDeviceOut2Scaling.Linear;
        this.out3ScalingField = HydraDeviceOut3Scaling.Linear;
        this.out4ScalingField = HydraDeviceOut4Scaling.Linear;
        this.out5ScalingField = HydraDeviceOut5Scaling.Linear;
        this.out6ScalingField = HydraDeviceOut6Scaling.Linear;
        this.out7ScalingField = HydraDeviceOut7Scaling.Linear;
        this.out8ScalingField = HydraDeviceOut8Scaling.Linear;
        this.out9ScalingField = HydraDeviceOut9Scaling.Linear;
        this.typeField = "HydraDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public HydraDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public HydraDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int VisiblePages {
        get {
            return this.visiblePagesField;
        }
        set {
            this.visiblePagesField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputValue {
        get {
            return this.inputValueField;
        }
        set {
            this.inputValueField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestTrack {
        get {
            return this.out1DestTrackField;
        }
        set {
            this.out1DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestEffect {
        get {
            return this.out1DestEffectField;
        }
        set {
            this.out1DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestParameter {
        get {
            return this.out1DestParameterField;
        }
        set {
            this.out1DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1Min {
        get {
            return this.out1MinField;
        }
        set {
            this.out1MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1Max {
        get {
            return this.out1MaxField;
        }
        set {
            this.out1MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut1Scaling.Linear)]
    public HydraDeviceOut1Scaling Out1Scaling {
        get {
            return this.out1ScalingField;
        }
        set {
            this.out1ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestTrack {
        get {
            return this.out2DestTrackField;
        }
        set {
            this.out2DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestEffect {
        get {
            return this.out2DestEffectField;
        }
        set {
            this.out2DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestParameter {
        get {
            return this.out2DestParameterField;
        }
        set {
            this.out2DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2Min {
        get {
            return this.out2MinField;
        }
        set {
            this.out2MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2Max {
        get {
            return this.out2MaxField;
        }
        set {
            this.out2MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut2Scaling.Linear)]
    public HydraDeviceOut2Scaling Out2Scaling {
        get {
            return this.out2ScalingField;
        }
        set {
            this.out2ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3DestTrack {
        get {
            return this.out3DestTrackField;
        }
        set {
            this.out3DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3DestEffect {
        get {
            return this.out3DestEffectField;
        }
        set {
            this.out3DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3DestParameter {
        get {
            return this.out3DestParameterField;
        }
        set {
            this.out3DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3Min {
        get {
            return this.out3MinField;
        }
        set {
            this.out3MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out3Max {
        get {
            return this.out3MaxField;
        }
        set {
            this.out3MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut3Scaling.Linear)]
    public HydraDeviceOut3Scaling Out3Scaling {
        get {
            return this.out3ScalingField;
        }
        set {
            this.out3ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out4DestTrack {
        get {
            return this.out4DestTrackField;
        }
        set {
            this.out4DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out4DestEffect {
        get {
            return this.out4DestEffectField;
        }
        set {
            this.out4DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out4DestParameter {
        get {
            return this.out4DestParameterField;
        }
        set {
            this.out4DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out4Min {
        get {
            return this.out4MinField;
        }
        set {
            this.out4MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out4Max {
        get {
            return this.out4MaxField;
        }
        set {
            this.out4MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut4Scaling.Linear)]
    public HydraDeviceOut4Scaling Out4Scaling {
        get {
            return this.out4ScalingField;
        }
        set {
            this.out4ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out5DestTrack {
        get {
            return this.out5DestTrackField;
        }
        set {
            this.out5DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out5DestEffect {
        get {
            return this.out5DestEffectField;
        }
        set {
            this.out5DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out5DestParameter {
        get {
            return this.out5DestParameterField;
        }
        set {
            this.out5DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out5Min {
        get {
            return this.out5MinField;
        }
        set {
            this.out5MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out5Max {
        get {
            return this.out5MaxField;
        }
        set {
            this.out5MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut5Scaling.Linear)]
    public HydraDeviceOut5Scaling Out5Scaling {
        get {
            return this.out5ScalingField;
        }
        set {
            this.out5ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out6DestTrack {
        get {
            return this.out6DestTrackField;
        }
        set {
            this.out6DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out6DestEffect {
        get {
            return this.out6DestEffectField;
        }
        set {
            this.out6DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out6DestParameter {
        get {
            return this.out6DestParameterField;
        }
        set {
            this.out6DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out6Min {
        get {
            return this.out6MinField;
        }
        set {
            this.out6MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out6Max {
        get {
            return this.out6MaxField;
        }
        set {
            this.out6MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut6Scaling.Linear)]
    public HydraDeviceOut6Scaling Out6Scaling {
        get {
            return this.out6ScalingField;
        }
        set {
            this.out6ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out7DestTrack {
        get {
            return this.out7DestTrackField;
        }
        set {
            this.out7DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out7DestEffect {
        get {
            return this.out7DestEffectField;
        }
        set {
            this.out7DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out7DestParameter {
        get {
            return this.out7DestParameterField;
        }
        set {
            this.out7DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out7Min {
        get {
            return this.out7MinField;
        }
        set {
            this.out7MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out7Max {
        get {
            return this.out7MaxField;
        }
        set {
            this.out7MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut7Scaling.Linear)]
    public HydraDeviceOut7Scaling Out7Scaling {
        get {
            return this.out7ScalingField;
        }
        set {
            this.out7ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out8DestTrack {
        get {
            return this.out8DestTrackField;
        }
        set {
            this.out8DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out8DestEffect {
        get {
            return this.out8DestEffectField;
        }
        set {
            this.out8DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out8DestParameter {
        get {
            return this.out8DestParameterField;
        }
        set {
            this.out8DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out8Min {
        get {
            return this.out8MinField;
        }
        set {
            this.out8MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out8Max {
        get {
            return this.out8MaxField;
        }
        set {
            this.out8MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut8Scaling.Linear)]
    public HydraDeviceOut8Scaling Out8Scaling {
        get {
            return this.out8ScalingField;
        }
        set {
            this.out8ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out9DestTrack {
        get {
            return this.out9DestTrackField;
        }
        set {
            this.out9DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out9DestEffect {
        get {
            return this.out9DestEffectField;
        }
        set {
            this.out9DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out9DestParameter {
        get {
            return this.out9DestParameterField;
        }
        set {
            this.out9DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out9Min {
        get {
            return this.out9MinField;
        }
        set {
            this.out9MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out9Max {
        get {
            return this.out9MaxField;
        }
        set {
            this.out9MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(HydraDeviceOut9Scaling.Linear)]
    public HydraDeviceOut9Scaling Out9Scaling {
        get {
            return this.out9ScalingField;
        }
        set {
            this.out9ScalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HydraDevicePreset {
    
    private HydraDevice deviceSlotField;
    
    private string typeField;
    
    public HydraDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public HydraDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut1Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut2Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut3Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut4Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut5Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut6Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut7Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut8Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum HydraDeviceOut9Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentAutomationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private InstrumentAutomationDevicePreset runTimePresetAField;
    
    private InstrumentAutomationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int parameterNumber0Field;
    
    private FilterDeviceParameter parameterValue0Field;
    
    private int parameterNumber1Field;
    
    private FilterDeviceParameter parameterValue1Field;
    
    private int parameterNumber2Field;
    
    private FilterDeviceParameter parameterValue2Field;
    
    private int parameterNumber3Field;
    
    private FilterDeviceParameter parameterValue3Field;
    
    private int parameterNumber4Field;
    
    private FilterDeviceParameter parameterValue4Field;
    
    private int parameterNumber5Field;
    
    private FilterDeviceParameter parameterValue5Field;
    
    private int parameterNumber6Field;
    
    private FilterDeviceParameter parameterValue6Field;
    
    private int parameterNumber7Field;
    
    private FilterDeviceParameter parameterValue7Field;
    
    private int parameterNumber8Field;
    
    private FilterDeviceParameter parameterValue8Field;
    
    private int parameterNumber9Field;
    
    private FilterDeviceParameter parameterValue9Field;
    
    private int parameterNumber10Field;
    
    private FilterDeviceParameter parameterValue10Field;
    
    private int parameterNumber11Field;
    
    private FilterDeviceParameter parameterValue11Field;
    
    private int parameterNumber12Field;
    
    private FilterDeviceParameter parameterValue12Field;
    
    private int parameterNumber13Field;
    
    private FilterDeviceParameter parameterValue13Field;
    
    private int parameterNumber14Field;
    
    private FilterDeviceParameter parameterValue14Field;
    
    private int parameterNumber15Field;
    
    private FilterDeviceParameter parameterValue15Field;
    
    private int parameterNumber16Field;
    
    private FilterDeviceParameter parameterValue16Field;
    
    private int parameterNumber17Field;
    
    private FilterDeviceParameter parameterValue17Field;
    
    private int parameterNumber18Field;
    
    private FilterDeviceParameter parameterValue18Field;
    
    private int parameterNumber19Field;
    
    private FilterDeviceParameter parameterValue19Field;
    
    private int parameterNumber20Field;
    
    private FilterDeviceParameter parameterValue20Field;
    
    private int parameterNumber21Field;
    
    private FilterDeviceParameter parameterValue21Field;
    
    private int parameterNumber22Field;
    
    private FilterDeviceParameter parameterValue22Field;
    
    private int parameterNumber23Field;
    
    private FilterDeviceParameter parameterValue23Field;
    
    private int parameterNumber24Field;
    
    private FilterDeviceParameter parameterValue24Field;
    
    private int parameterNumber25Field;
    
    private FilterDeviceParameter parameterValue25Field;
    
    private int parameterNumber26Field;
    
    private FilterDeviceParameter parameterValue26Field;
    
    private int parameterNumber27Field;
    
    private FilterDeviceParameter parameterValue27Field;
    
    private int parameterNumber28Field;
    
    private FilterDeviceParameter parameterValue28Field;
    
    private int parameterNumber29Field;
    
    private FilterDeviceParameter parameterValue29Field;
    
    private int parameterNumber30Field;
    
    private FilterDeviceParameter parameterValue30Field;
    
    private int parameterNumber31Field;
    
    private FilterDeviceParameter parameterValue31Field;
    
    private int parameterNumber32Field;
    
    private FilterDeviceParameter parameterValue32Field;
    
    private int parameterNumber33Field;
    
    private FilterDeviceParameter parameterValue33Field;
    
    private int parameterNumber34Field;
    
    private FilterDeviceParameter parameterValue34Field;
    
    private int linkedInstrumentField;
    
    private int visiblePagesField;
    
    private string typeField;
    
    public InstrumentAutomationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = true;
        this.parameterNumber0Field = 0;
        this.parameterNumber1Field = 1;
        this.parameterNumber2Field = 2;
        this.parameterNumber3Field = 3;
        this.parameterNumber4Field = 4;
        this.parameterNumber5Field = 5;
        this.parameterNumber6Field = 6;
        this.parameterNumber7Field = 7;
        this.parameterNumber8Field = 8;
        this.parameterNumber9Field = 9;
        this.parameterNumber10Field = 10;
        this.parameterNumber11Field = 11;
        this.parameterNumber12Field = 12;
        this.parameterNumber13Field = 13;
        this.parameterNumber14Field = 14;
        this.parameterNumber15Field = 15;
        this.parameterNumber16Field = 16;
        this.parameterNumber17Field = 17;
        this.parameterNumber18Field = 18;
        this.parameterNumber19Field = 19;
        this.parameterNumber20Field = 20;
        this.parameterNumber21Field = 21;
        this.parameterNumber22Field = 22;
        this.parameterNumber23Field = 23;
        this.parameterNumber24Field = 24;
        this.parameterNumber25Field = 25;
        this.parameterNumber26Field = 26;
        this.parameterNumber27Field = 27;
        this.parameterNumber28Field = 28;
        this.parameterNumber29Field = 29;
        this.parameterNumber30Field = 30;
        this.parameterNumber31Field = 31;
        this.parameterNumber32Field = 32;
        this.parameterNumber33Field = 33;
        this.parameterNumber34Field = 34;
        this.linkedInstrumentField = 0;
        this.visiblePagesField = 1;
        this.typeField = "InstrumentAutomationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentAutomationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentAutomationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int ParameterNumber0 {
        get {
            return this.parameterNumber0Field;
        }
        set {
            this.parameterNumber0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue0 {
        get {
            return this.parameterValue0Field;
        }
        set {
            this.parameterValue0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int ParameterNumber1 {
        get {
            return this.parameterNumber1Field;
        }
        set {
            this.parameterNumber1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue1 {
        get {
            return this.parameterValue1Field;
        }
        set {
            this.parameterValue1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(2)]
    public int ParameterNumber2 {
        get {
            return this.parameterNumber2Field;
        }
        set {
            this.parameterNumber2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue2 {
        get {
            return this.parameterValue2Field;
        }
        set {
            this.parameterValue2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(3)]
    public int ParameterNumber3 {
        get {
            return this.parameterNumber3Field;
        }
        set {
            this.parameterNumber3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue3 {
        get {
            return this.parameterValue3Field;
        }
        set {
            this.parameterValue3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int ParameterNumber4 {
        get {
            return this.parameterNumber4Field;
        }
        set {
            this.parameterNumber4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue4 {
        get {
            return this.parameterValue4Field;
        }
        set {
            this.parameterValue4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(5)]
    public int ParameterNumber5 {
        get {
            return this.parameterNumber5Field;
        }
        set {
            this.parameterNumber5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue5 {
        get {
            return this.parameterValue5Field;
        }
        set {
            this.parameterValue5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(6)]
    public int ParameterNumber6 {
        get {
            return this.parameterNumber6Field;
        }
        set {
            this.parameterNumber6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue6 {
        get {
            return this.parameterValue6Field;
        }
        set {
            this.parameterValue6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(7)]
    public int ParameterNumber7 {
        get {
            return this.parameterNumber7Field;
        }
        set {
            this.parameterNumber7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue7 {
        get {
            return this.parameterValue7Field;
        }
        set {
            this.parameterValue7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(8)]
    public int ParameterNumber8 {
        get {
            return this.parameterNumber8Field;
        }
        set {
            this.parameterNumber8Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue8 {
        get {
            return this.parameterValue8Field;
        }
        set {
            this.parameterValue8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(9)]
    public int ParameterNumber9 {
        get {
            return this.parameterNumber9Field;
        }
        set {
            this.parameterNumber9Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue9 {
        get {
            return this.parameterValue9Field;
        }
        set {
            this.parameterValue9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(10)]
    public int ParameterNumber10 {
        get {
            return this.parameterNumber10Field;
        }
        set {
            this.parameterNumber10Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue10 {
        get {
            return this.parameterValue10Field;
        }
        set {
            this.parameterValue10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(11)]
    public int ParameterNumber11 {
        get {
            return this.parameterNumber11Field;
        }
        set {
            this.parameterNumber11Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue11 {
        get {
            return this.parameterValue11Field;
        }
        set {
            this.parameterValue11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(12)]
    public int ParameterNumber12 {
        get {
            return this.parameterNumber12Field;
        }
        set {
            this.parameterNumber12Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue12 {
        get {
            return this.parameterValue12Field;
        }
        set {
            this.parameterValue12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(13)]
    public int ParameterNumber13 {
        get {
            return this.parameterNumber13Field;
        }
        set {
            this.parameterNumber13Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue13 {
        get {
            return this.parameterValue13Field;
        }
        set {
            this.parameterValue13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(14)]
    public int ParameterNumber14 {
        get {
            return this.parameterNumber14Field;
        }
        set {
            this.parameterNumber14Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue14 {
        get {
            return this.parameterValue14Field;
        }
        set {
            this.parameterValue14Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(15)]
    public int ParameterNumber15 {
        get {
            return this.parameterNumber15Field;
        }
        set {
            this.parameterNumber15Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue15 {
        get {
            return this.parameterValue15Field;
        }
        set {
            this.parameterValue15Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(16)]
    public int ParameterNumber16 {
        get {
            return this.parameterNumber16Field;
        }
        set {
            this.parameterNumber16Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue16 {
        get {
            return this.parameterValue16Field;
        }
        set {
            this.parameterValue16Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(17)]
    public int ParameterNumber17 {
        get {
            return this.parameterNumber17Field;
        }
        set {
            this.parameterNumber17Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue17 {
        get {
            return this.parameterValue17Field;
        }
        set {
            this.parameterValue17Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(18)]
    public int ParameterNumber18 {
        get {
            return this.parameterNumber18Field;
        }
        set {
            this.parameterNumber18Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue18 {
        get {
            return this.parameterValue18Field;
        }
        set {
            this.parameterValue18Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(19)]
    public int ParameterNumber19 {
        get {
            return this.parameterNumber19Field;
        }
        set {
            this.parameterNumber19Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue19 {
        get {
            return this.parameterValue19Field;
        }
        set {
            this.parameterValue19Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(20)]
    public int ParameterNumber20 {
        get {
            return this.parameterNumber20Field;
        }
        set {
            this.parameterNumber20Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue20 {
        get {
            return this.parameterValue20Field;
        }
        set {
            this.parameterValue20Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(21)]
    public int ParameterNumber21 {
        get {
            return this.parameterNumber21Field;
        }
        set {
            this.parameterNumber21Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue21 {
        get {
            return this.parameterValue21Field;
        }
        set {
            this.parameterValue21Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(22)]
    public int ParameterNumber22 {
        get {
            return this.parameterNumber22Field;
        }
        set {
            this.parameterNumber22Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue22 {
        get {
            return this.parameterValue22Field;
        }
        set {
            this.parameterValue22Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(23)]
    public int ParameterNumber23 {
        get {
            return this.parameterNumber23Field;
        }
        set {
            this.parameterNumber23Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue23 {
        get {
            return this.parameterValue23Field;
        }
        set {
            this.parameterValue23Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(24)]
    public int ParameterNumber24 {
        get {
            return this.parameterNumber24Field;
        }
        set {
            this.parameterNumber24Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue24 {
        get {
            return this.parameterValue24Field;
        }
        set {
            this.parameterValue24Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(25)]
    public int ParameterNumber25 {
        get {
            return this.parameterNumber25Field;
        }
        set {
            this.parameterNumber25Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue25 {
        get {
            return this.parameterValue25Field;
        }
        set {
            this.parameterValue25Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(26)]
    public int ParameterNumber26 {
        get {
            return this.parameterNumber26Field;
        }
        set {
            this.parameterNumber26Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue26 {
        get {
            return this.parameterValue26Field;
        }
        set {
            this.parameterValue26Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(27)]
    public int ParameterNumber27 {
        get {
            return this.parameterNumber27Field;
        }
        set {
            this.parameterNumber27Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue27 {
        get {
            return this.parameterValue27Field;
        }
        set {
            this.parameterValue27Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(28)]
    public int ParameterNumber28 {
        get {
            return this.parameterNumber28Field;
        }
        set {
            this.parameterNumber28Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue28 {
        get {
            return this.parameterValue28Field;
        }
        set {
            this.parameterValue28Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(29)]
    public int ParameterNumber29 {
        get {
            return this.parameterNumber29Field;
        }
        set {
            this.parameterNumber29Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue29 {
        get {
            return this.parameterValue29Field;
        }
        set {
            this.parameterValue29Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(30)]
    public int ParameterNumber30 {
        get {
            return this.parameterNumber30Field;
        }
        set {
            this.parameterNumber30Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue30 {
        get {
            return this.parameterValue30Field;
        }
        set {
            this.parameterValue30Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(31)]
    public int ParameterNumber31 {
        get {
            return this.parameterNumber31Field;
        }
        set {
            this.parameterNumber31Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue31 {
        get {
            return this.parameterValue31Field;
        }
        set {
            this.parameterValue31Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(32)]
    public int ParameterNumber32 {
        get {
            return this.parameterNumber32Field;
        }
        set {
            this.parameterNumber32Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue32 {
        get {
            return this.parameterValue32Field;
        }
        set {
            this.parameterValue32Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(33)]
    public int ParameterNumber33 {
        get {
            return this.parameterNumber33Field;
        }
        set {
            this.parameterNumber33Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue33 {
        get {
            return this.parameterValue33Field;
        }
        set {
            this.parameterValue33Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(34)]
    public int ParameterNumber34 {
        get {
            return this.parameterNumber34Field;
        }
        set {
            this.parameterNumber34Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue34 {
        get {
            return this.parameterValue34Field;
        }
        set {
            this.parameterValue34Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LinkedInstrument {
        get {
            return this.linkedInstrumentField;
        }
        set {
            this.linkedInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int VisiblePages {
        get {
            return this.visiblePagesField;
        }
        set {
            this.visiblePagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentAutomationDevicePreset {
    
    private InstrumentAutomationDevice deviceSlotField;
    
    private string typeField;
    
    public InstrumentAutomationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public InstrumentAutomationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentMacroDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private InstrumentMacroDevicePreset runTimePresetAField;
    
    private InstrumentMacroDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter parameterValue0Field;
    
    private FilterDeviceParameter parameterValue1Field;
    
    private FilterDeviceParameter parameterValue2Field;
    
    private FilterDeviceParameter parameterValue3Field;
    
    private FilterDeviceParameter parameterValue4Field;
    
    private FilterDeviceParameter parameterValue5Field;
    
    private FilterDeviceParameter parameterValue6Field;
    
    private FilterDeviceParameter parameterValue7Field;
    
    private FilterDeviceParameter pitchbendValueField;
    
    private FilterDeviceParameter modulationValueField;
    
    private FilterDeviceParameter channelPressureValueField;
    
    private FilterDeviceParameter phraseProgrammValueField;
    
    private int linkedInstrumentField;
    
    private string typeField;
    
    public InstrumentMacroDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.linkedInstrumentField = 0;
        this.typeField = "InstrumentMacroDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue0 {
        get {
            return this.parameterValue0Field;
        }
        set {
            this.parameterValue0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue1 {
        get {
            return this.parameterValue1Field;
        }
        set {
            this.parameterValue1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue2 {
        get {
            return this.parameterValue2Field;
        }
        set {
            this.parameterValue2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue3 {
        get {
            return this.parameterValue3Field;
        }
        set {
            this.parameterValue3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue4 {
        get {
            return this.parameterValue4Field;
        }
        set {
            this.parameterValue4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue5 {
        get {
            return this.parameterValue5Field;
        }
        set {
            this.parameterValue5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue6 {
        get {
            return this.parameterValue6Field;
        }
        set {
            this.parameterValue6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ParameterValue7 {
        get {
            return this.parameterValue7Field;
        }
        set {
            this.parameterValue7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PitchbendValue {
        get {
            return this.pitchbendValueField;
        }
        set {
            this.pitchbendValueField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ModulationValue {
        get {
            return this.modulationValueField;
        }
        set {
            this.modulationValueField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ChannelPressureValue {
        get {
            return this.channelPressureValueField;
        }
        set {
            this.channelPressureValueField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PhraseProgrammValue {
        get {
            return this.phraseProgrammValueField;
        }
        set {
            this.phraseProgrammValueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LinkedInstrument {
        get {
            return this.linkedInstrumentField;
        }
        set {
            this.linkedInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentMacroDevicePreset {
    
    private InstrumentMacroDevice deviceSlotField;
    
    private string typeField;
    
    public InstrumentMacroDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public InstrumentMacroDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class KeyTrackingDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private KeyTrackingDevicePreset runTimePresetAField;
    
    private KeyTrackingDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int srcInstrumentField;
    
    private KeyTrackingDeviceDestScaling destScalingField;
    
    private KeyTrackingDeviceKeyTrackingMode keyTrackingModeField;
    
    private int keyTrackingMinField;
    
    private int keyTrackingMaxField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private FilterDeviceParameter destMinField;
    
    private FilterDeviceParameter destMaxField;
    
    private string typeField;
    
    public KeyTrackingDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.srcInstrumentField = -1;
        this.destScalingField = KeyTrackingDeviceDestScaling.Linear;
        this.keyTrackingModeField = KeyTrackingDeviceKeyTrackingMode.Clamp;
        this.keyTrackingMinField = 36;
        this.keyTrackingMaxField = 72;
        this.typeField = "KeyTrackingDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public KeyTrackingDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public KeyTrackingDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SrcInstrument {
        get {
            return this.srcInstrumentField;
        }
        set {
            this.srcInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(KeyTrackingDeviceDestScaling.Linear)]
    public KeyTrackingDeviceDestScaling DestScaling {
        get {
            return this.destScalingField;
        }
        set {
            this.destScalingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(KeyTrackingDeviceKeyTrackingMode.Clamp)]
    public KeyTrackingDeviceKeyTrackingMode KeyTrackingMode {
        get {
            return this.keyTrackingModeField;
        }
        set {
            this.keyTrackingModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(36)]
    public int KeyTrackingMin {
        get {
            return this.keyTrackingMinField;
        }
        set {
            this.keyTrackingMinField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(72)]
    public int KeyTrackingMax {
        get {
            return this.keyTrackingMaxField;
        }
        set {
            this.keyTrackingMaxField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMin {
        get {
            return this.destMinField;
        }
        set {
            this.destMinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMax {
        get {
            return this.destMaxField;
        }
        set {
            this.destMaxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class KeyTrackingDevicePreset {
    
    private KeyTrackingDevice deviceSlotField;
    
    private string typeField;
    
    public KeyTrackingDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public KeyTrackingDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum KeyTrackingDeviceDestScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum KeyTrackingDeviceKeyTrackingMode {
    
    /// <remarks/>
    Clamp,
    
    /// <remarks/>
    Soft,
    
    /// <remarks/>
    Octave,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LfoDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private LfoDevicePreset runTimePresetAField;
    
    private LfoDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private FilterDeviceParameter amplitudeField;
    
    private FilterDeviceParameter offsetField;
    
    private FilterDeviceParameter frequencyField;
    
    private FilterDeviceParameter typeField;
    
    private NonContinuesDeviceParameter resetField;
    
    private Envelope customEnvelopeField;
    
    private bool customEnvelopeOneShotField;
    
    private bool useAdjustedEnvelopeLengthField;
    
    private string typeField1;
    
    public LfoDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.customEnvelopeOneShotField = false;
        this.useAdjustedEnvelopeLengthField = true;
        this.typeField1 = "LfoDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public LfoDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public LfoDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amplitude {
        get {
            return this.amplitudeField;
        }
        set {
            this.amplitudeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Offset {
        get {
            return this.offsetField;
        }
        set {
            this.offsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Reset {
        get {
            return this.resetField;
        }
        set {
            this.resetField = value;
        }
    }
    
    /// <remarks/>
    public Envelope CustomEnvelope {
        get {
            return this.customEnvelopeField;
        }
        set {
            this.customEnvelopeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool CustomEnvelopeOneShot {
        get {
            return this.customEnvelopeOneShotField;
        }
        set {
            this.customEnvelopeOneShotField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool UseAdjustedEnvelopeLength {
        get {
            return this.useAdjustedEnvelopeLengthField;
        }
        set {
            this.useAdjustedEnvelopeLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField1;
        }
        set {
            this.typeField1 = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LfoDevicePreset {
    
    private LfoDevice deviceSlotField;
    
    private string typeField;
    
    public LfoDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public LfoDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LineInDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private LineInDevicePreset runTimePresetAField;
    
    private LineInDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int inputChannelField;
    
    private LineInDeviceInputChannelMode inputChannelModeField;
    
    private LineInDeviceInputLatencyMode inputLatencyModeField;
    
    private FilterDeviceParameter panningField;
    
    private FilterDeviceParameter volumeField;
    
    private string typeField;
    
    public LineInDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.inputChannelField = -1;
        this.inputChannelModeField = LineInDeviceInputChannelMode.LR;
        this.inputLatencyModeField = LineInDeviceInputLatencyMode.LiveRecordingMode;
        this.typeField = "LineInDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public LineInDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public LineInDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int InputChannel {
        get {
            return this.inputChannelField;
        }
        set {
            this.inputChannelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(LineInDeviceInputChannelMode.LR)]
    public LineInDeviceInputChannelMode InputChannelMode {
        get {
            return this.inputChannelModeField;
        }
        set {
            this.inputChannelModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(LineInDeviceInputLatencyMode.LiveRecordingMode)]
    public LineInDeviceInputLatencyMode InputLatencyMode {
        get {
            return this.inputLatencyModeField;
        }
        set {
            this.inputLatencyModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LineInDevicePreset {
    
    private LineInDevice deviceSlotField;
    
    private string typeField;
    
    public LineInDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public LineInDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum LineInDeviceInputChannelMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum LineInDeviceInputLatencyMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Live Recording Mode")]
    LiveRecordingMode,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("MIDI Return Mode")]
    MIDIReturnMode,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Lofi2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Lofi2DevicePreset runTimePresetAField;
    
    private Lofi2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter bitsField;
    
    private FilterDeviceParameter rateField;
    
    private FilterDeviceParameter noiseField;
    
    private FilterDeviceParameter wetOutField;
    
    private FilterDeviceParameter dryOutField;
    
    private FilterDeviceParameter interpolateField;
    
    private string typeField;
    
    public Lofi2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Lofi2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Lofi2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Lofi2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Bits {
        get {
            return this.bitsField;
        }
        set {
            this.bitsField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Noise {
        get {
            return this.noiseField;
        }
        set {
            this.noiseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetOut {
        get {
            return this.wetOutField;
        }
        set {
            this.wetOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryOut {
        get {
            return this.dryOutField;
        }
        set {
            this.dryOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Interpolate {
        get {
            return this.interpolateField;
        }
        set {
            this.interpolateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Lofi2DevicePreset {
    
    private Lofi2Device deviceSlotField;
    
    private string typeField;
    
    public Lofi2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Lofi2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LofiDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private LofiDevicePreset runTimePresetAField;
    
    private LofiDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter bitCrunshField;
    
    private FilterDeviceParameter qualityField;
    
    private FilterDeviceParameter noiseField;
    
    private FilterDeviceParameter wetOutField;
    
    private FilterDeviceParameter dryOutField;
    
    private FilterDeviceParameter interpolateField;
    
    private string typeField;
    
    public LofiDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "LofiDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public LofiDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public LofiDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BitCrunsh {
        get {
            return this.bitCrunshField;
        }
        set {
            this.bitCrunshField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Quality {
        get {
            return this.qualityField;
        }
        set {
            this.qualityField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Noise {
        get {
            return this.noiseField;
        }
        set {
            this.noiseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetOut {
        get {
            return this.wetOutField;
        }
        set {
            this.wetOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryOut {
        get {
            return this.dryOutField;
        }
        set {
            this.dryOutField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Interpolate {
        get {
            return this.interpolateField;
        }
        set {
            this.interpolateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LofiDevicePreset {
    
    private LofiDevice deviceSlotField;
    
    private string typeField;
    
    public LofiDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public LofiDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MaximizerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MaximizerDevicePreset runTimePresetAField;
    
    private MaximizerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter inputGainField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter transientReleaseField;
    
    private FilterDeviceParameter longTermReleaseField;
    
    private FilterDeviceParameter ceilingField;
    
    private string typeField;
    
    public MaximizerDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "MaximizerDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MaximizerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MaximizerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputGain {
        get {
            return this.inputGainField;
        }
        set {
            this.inputGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter TransientRelease {
        get {
            return this.transientReleaseField;
        }
        set {
            this.transientReleaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LongTermRelease {
        get {
            return this.longTermReleaseField;
        }
        set {
            this.longTermReleaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ceiling {
        get {
            return this.ceilingField;
        }
        set {
            this.ceilingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MaximizerDevicePreset {
    
    private MaximizerDevice deviceSlotField;
    
    private string typeField;
    
    public MaximizerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MaximizerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MetaMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MetaMixerDevicePreset runTimePresetAField;
    
    private MetaMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private MetaMixerDeviceDestScaling destScalingField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private FilterDeviceParameter destMinField;
    
    private FilterDeviceParameter destMaxField;
    
    private FilterDeviceParameter inputAField;
    
    private FilterDeviceParameter inputBField;
    
    private FilterDeviceParameter inputCField;
    
    private FilterDeviceParameter weightAField;
    
    private FilterDeviceParameter weightBField;
    
    private FilterDeviceParameter weightCField;
    
    private string typeField;
    
    public MetaMixerDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.destScalingField = MetaMixerDeviceDestScaling.Linear;
        this.typeField = "MetaMixerDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MetaMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MetaMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MetaMixerDeviceDestScaling.Linear)]
    public MetaMixerDeviceDestScaling DestScaling {
        get {
            return this.destScalingField;
        }
        set {
            this.destScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMin {
        get {
            return this.destMinField;
        }
        set {
            this.destMinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMax {
        get {
            return this.destMaxField;
        }
        set {
            this.destMaxField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputA {
        get {
            return this.inputAField;
        }
        set {
            this.inputAField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputB {
        get {
            return this.inputBField;
        }
        set {
            this.inputBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter InputC {
        get {
            return this.inputCField;
        }
        set {
            this.inputCField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WeightA {
        get {
            return this.weightAField;
        }
        set {
            this.weightAField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WeightB {
        get {
            return this.weightBField;
        }
        set {
            this.weightBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WeightC {
        get {
            return this.weightCField;
        }
        set {
            this.weightCField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MetaMixerDevicePreset {
    
    private MetaMixerDevice deviceSlotField;
    
    private string typeField;
    
    public MetaMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MetaMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MetaMixerDeviceDestScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiCCDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MidiCCDevicePreset runTimePresetAField;
    
    private MidiCCDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter controllerValue0Field;
    
    private int controllerNumber0Field;
    
    private string controllerName0Field;
    
    private FilterDeviceParameter controllerValue1Field;
    
    private int controllerNumber1Field;
    
    private string controllerName1Field;
    
    private FilterDeviceParameter controllerValue2Field;
    
    private int controllerNumber2Field;
    
    private string controllerName2Field;
    
    private FilterDeviceParameter controllerValue3Field;
    
    private int controllerNumber3Field;
    
    private string controllerName3Field;
    
    private FilterDeviceParameter controllerValue4Field;
    
    private int controllerNumber4Field;
    
    private string controllerName4Field;
    
    private FilterDeviceParameter controllerValue5Field;
    
    private int controllerNumber5Field;
    
    private string controllerName5Field;
    
    private FilterDeviceParameter controllerValue6Field;
    
    private int controllerNumber6Field;
    
    private string controllerName6Field;
    
    private FilterDeviceParameter controllerValue7Field;
    
    private int controllerNumber7Field;
    
    private string controllerName7Field;
    
    private FilterDeviceParameter controllerValue8Field;
    
    private int controllerNumber8Field;
    
    private string controllerName8Field;
    
    private FilterDeviceParameter controllerValue9Field;
    
    private int controllerNumber9Field;
    
    private string controllerName9Field;
    
    private FilterDeviceParameter controllerValue10Field;
    
    private int controllerNumber10Field;
    
    private string controllerName10Field;
    
    private FilterDeviceParameter controllerValue11Field;
    
    private int controllerNumber11Field;
    
    private string controllerName11Field;
    
    private FilterDeviceParameter controllerValue12Field;
    
    private int controllerNumber12Field;
    
    private string controllerName12Field;
    
    private FilterDeviceParameter controllerValue13Field;
    
    private int controllerNumber13Field;
    
    private string controllerName13Field;
    
    private int linkedInstrumentField;
    
    private int visiblePagesField;
    
    private string typeField;
    
    public MidiCCDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = true;
        this.controllerNumber0Field = -1;
        this.controllerName0Field = "Untitled";
        this.controllerNumber1Field = -1;
        this.controllerName1Field = "Untitled";
        this.controllerNumber2Field = -1;
        this.controllerName2Field = "Untitled";
        this.controllerNumber3Field = -1;
        this.controllerName3Field = "Untitled";
        this.controllerNumber4Field = -1;
        this.controllerName4Field = "Untitled";
        this.controllerNumber5Field = -1;
        this.controllerName5Field = "Untitled";
        this.controllerNumber6Field = -1;
        this.controllerName6Field = "Untitled";
        this.controllerNumber7Field = -1;
        this.controllerName7Field = "Untitled";
        this.controllerNumber8Field = -1;
        this.controllerName8Field = "Untitled";
        this.controllerNumber9Field = -1;
        this.controllerName9Field = "Untitled";
        this.controllerNumber10Field = -1;
        this.controllerName10Field = "Untitled";
        this.controllerNumber11Field = -1;
        this.controllerName11Field = "Untitled";
        this.controllerNumber12Field = -1;
        this.controllerName12Field = "Untitled";
        this.controllerNumber13Field = -1;
        this.controllerName13Field = "Untitled";
        this.linkedInstrumentField = 0;
        this.visiblePagesField = 1;
        this.typeField = "MidiCCDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MidiCCDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MidiCCDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue0 {
        get {
            return this.controllerValue0Field;
        }
        set {
            this.controllerValue0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber0 {
        get {
            return this.controllerNumber0Field;
        }
        set {
            this.controllerNumber0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName0 {
        get {
            return this.controllerName0Field;
        }
        set {
            this.controllerName0Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue1 {
        get {
            return this.controllerValue1Field;
        }
        set {
            this.controllerValue1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber1 {
        get {
            return this.controllerNumber1Field;
        }
        set {
            this.controllerNumber1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName1 {
        get {
            return this.controllerName1Field;
        }
        set {
            this.controllerName1Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue2 {
        get {
            return this.controllerValue2Field;
        }
        set {
            this.controllerValue2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber2 {
        get {
            return this.controllerNumber2Field;
        }
        set {
            this.controllerNumber2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName2 {
        get {
            return this.controllerName2Field;
        }
        set {
            this.controllerName2Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue3 {
        get {
            return this.controllerValue3Field;
        }
        set {
            this.controllerValue3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber3 {
        get {
            return this.controllerNumber3Field;
        }
        set {
            this.controllerNumber3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName3 {
        get {
            return this.controllerName3Field;
        }
        set {
            this.controllerName3Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue4 {
        get {
            return this.controllerValue4Field;
        }
        set {
            this.controllerValue4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber4 {
        get {
            return this.controllerNumber4Field;
        }
        set {
            this.controllerNumber4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName4 {
        get {
            return this.controllerName4Field;
        }
        set {
            this.controllerName4Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue5 {
        get {
            return this.controllerValue5Field;
        }
        set {
            this.controllerValue5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber5 {
        get {
            return this.controllerNumber5Field;
        }
        set {
            this.controllerNumber5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName5 {
        get {
            return this.controllerName5Field;
        }
        set {
            this.controllerName5Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue6 {
        get {
            return this.controllerValue6Field;
        }
        set {
            this.controllerValue6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber6 {
        get {
            return this.controllerNumber6Field;
        }
        set {
            this.controllerNumber6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName6 {
        get {
            return this.controllerName6Field;
        }
        set {
            this.controllerName6Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue7 {
        get {
            return this.controllerValue7Field;
        }
        set {
            this.controllerValue7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber7 {
        get {
            return this.controllerNumber7Field;
        }
        set {
            this.controllerNumber7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName7 {
        get {
            return this.controllerName7Field;
        }
        set {
            this.controllerName7Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue8 {
        get {
            return this.controllerValue8Field;
        }
        set {
            this.controllerValue8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber8 {
        get {
            return this.controllerNumber8Field;
        }
        set {
            this.controllerNumber8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName8 {
        get {
            return this.controllerName8Field;
        }
        set {
            this.controllerName8Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue9 {
        get {
            return this.controllerValue9Field;
        }
        set {
            this.controllerValue9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber9 {
        get {
            return this.controllerNumber9Field;
        }
        set {
            this.controllerNumber9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName9 {
        get {
            return this.controllerName9Field;
        }
        set {
            this.controllerName9Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue10 {
        get {
            return this.controllerValue10Field;
        }
        set {
            this.controllerValue10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber10 {
        get {
            return this.controllerNumber10Field;
        }
        set {
            this.controllerNumber10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName10 {
        get {
            return this.controllerName10Field;
        }
        set {
            this.controllerName10Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue11 {
        get {
            return this.controllerValue11Field;
        }
        set {
            this.controllerValue11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber11 {
        get {
            return this.controllerNumber11Field;
        }
        set {
            this.controllerNumber11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName11 {
        get {
            return this.controllerName11Field;
        }
        set {
            this.controllerName11Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue12 {
        get {
            return this.controllerValue12Field;
        }
        set {
            this.controllerValue12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber12 {
        get {
            return this.controllerNumber12Field;
        }
        set {
            this.controllerNumber12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName12 {
        get {
            return this.controllerName12Field;
        }
        set {
            this.controllerName12Field = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ControllerValue13 {
        get {
            return this.controllerValue13Field;
        }
        set {
            this.controllerValue13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber13 {
        get {
            return this.controllerNumber13Field;
        }
        set {
            this.controllerNumber13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName13 {
        get {
            return this.controllerName13Field;
        }
        set {
            this.controllerName13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LinkedInstrument {
        get {
            return this.linkedInstrumentField;
        }
        set {
            this.linkedInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int VisiblePages {
        get {
            return this.visiblePagesField;
        }
        set {
            this.visiblePagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiCCDevicePreset {
    
    private MidiCCDevice deviceSlotField;
    
    private string typeField;
    
    public MidiCCDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MidiCCDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiControlDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MidiControlDevicePreset runTimePresetAField;
    
    private MidiControlDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue0Field;
    
    private int controllerNumber0Field;
    
    private string controllerName0Field;
    
    private MidiControlDeviceControllerType0 controllerType0Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue1Field;
    
    private int controllerNumber1Field;
    
    private string controllerName1Field;
    
    private MidiControlDeviceControllerType1 controllerType1Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue2Field;
    
    private int controllerNumber2Field;
    
    private string controllerName2Field;
    
    private MidiControlDeviceControllerType2 controllerType2Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue3Field;
    
    private int controllerNumber3Field;
    
    private string controllerName3Field;
    
    private MidiControlDeviceControllerType3 controllerType3Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue4Field;
    
    private int controllerNumber4Field;
    
    private string controllerName4Field;
    
    private MidiControlDeviceControllerType4 controllerType4Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue5Field;
    
    private int controllerNumber5Field;
    
    private string controllerName5Field;
    
    private MidiControlDeviceControllerType5 controllerType5Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue6Field;
    
    private int controllerNumber6Field;
    
    private string controllerName6Field;
    
    private MidiControlDeviceControllerType6 controllerType6Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue7Field;
    
    private int controllerNumber7Field;
    
    private string controllerName7Field;
    
    private MidiControlDeviceControllerType7 controllerType7Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue8Field;
    
    private int controllerNumber8Field;
    
    private string controllerName8Field;
    
    private MidiControlDeviceControllerType8 controllerType8Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue9Field;
    
    private int controllerNumber9Field;
    
    private string controllerName9Field;
    
    private MidiControlDeviceControllerType9 controllerType9Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue10Field;
    
    private int controllerNumber10Field;
    
    private string controllerName10Field;
    
    private MidiControlDeviceControllerType10 controllerType10Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue11Field;
    
    private int controllerNumber11Field;
    
    private string controllerName11Field;
    
    private MidiControlDeviceControllerType11 controllerType11Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue12Field;
    
    private int controllerNumber12Field;
    
    private string controllerName12Field;
    
    private MidiControlDeviceControllerType12 controllerType12Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue13Field;
    
    private int controllerNumber13Field;
    
    private string controllerName13Field;
    
    private MidiControlDeviceControllerType13 controllerType13Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue14Field;
    
    private int controllerNumber14Field;
    
    private string controllerName14Field;
    
    private MidiControlDeviceControllerType14 controllerType14Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue15Field;
    
    private int controllerNumber15Field;
    
    private string controllerName15Field;
    
    private MidiControlDeviceControllerType15 controllerType15Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue16Field;
    
    private int controllerNumber16Field;
    
    private string controllerName16Field;
    
    private MidiControlDeviceControllerType16 controllerType16Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue17Field;
    
    private int controllerNumber17Field;
    
    private string controllerName17Field;
    
    private MidiControlDeviceControllerType17 controllerType17Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue18Field;
    
    private int controllerNumber18Field;
    
    private string controllerName18Field;
    
    private MidiControlDeviceControllerType18 controllerType18Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue19Field;
    
    private int controllerNumber19Field;
    
    private string controllerName19Field;
    
    private MidiControlDeviceControllerType19 controllerType19Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue20Field;
    
    private int controllerNumber20Field;
    
    private string controllerName20Field;
    
    private MidiControlDeviceControllerType20 controllerType20Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue21Field;
    
    private int controllerNumber21Field;
    
    private string controllerName21Field;
    
    private MidiControlDeviceControllerType21 controllerType21Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue22Field;
    
    private int controllerNumber22Field;
    
    private string controllerName22Field;
    
    private MidiControlDeviceControllerType22 controllerType22Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue23Field;
    
    private int controllerNumber23Field;
    
    private string controllerName23Field;
    
    private MidiControlDeviceControllerType23 controllerType23Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue24Field;
    
    private int controllerNumber24Field;
    
    private string controllerName24Field;
    
    private MidiControlDeviceControllerType24 controllerType24Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue25Field;
    
    private int controllerNumber25Field;
    
    private string controllerName25Field;
    
    private MidiControlDeviceControllerType25 controllerType25Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue26Field;
    
    private int controllerNumber26Field;
    
    private string controllerName26Field;
    
    private MidiControlDeviceControllerType26 controllerType26Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue27Field;
    
    private int controllerNumber27Field;
    
    private string controllerName27Field;
    
    private MidiControlDeviceControllerType27 controllerType27Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue28Field;
    
    private int controllerNumber28Field;
    
    private string controllerName28Field;
    
    private MidiControlDeviceControllerType28 controllerType28Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue29Field;
    
    private int controllerNumber29Field;
    
    private string controllerName29Field;
    
    private MidiControlDeviceControllerType29 controllerType29Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue30Field;
    
    private int controllerNumber30Field;
    
    private string controllerName30Field;
    
    private MidiControlDeviceControllerType30 controllerType30Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue31Field;
    
    private int controllerNumber31Field;
    
    private string controllerName31Field;
    
    private MidiControlDeviceControllerType31 controllerType31Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue32Field;
    
    private int controllerNumber32Field;
    
    private string controllerName32Field;
    
    private MidiControlDeviceControllerType32 controllerType32Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue33Field;
    
    private int controllerNumber33Field;
    
    private string controllerName33Field;
    
    private MidiControlDeviceControllerType33 controllerType33Field;
    
    private MidiControlDeviceFilterDeviceParameter controllerValue34Field;
    
    private int controllerNumber34Field;
    
    private string controllerName34Field;
    
    private MidiControlDeviceControllerType34 controllerType34Field;
    
    private int linkedInstrumentField;
    
    private int visiblePagesField;
    
    private string typeField;
    
    public MidiControlDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = true;
        this.controllerNumber0Field = -1;
        this.controllerName0Field = "Untitled";
        this.controllerType0Field = MidiControlDeviceControllerType0.PB;
        this.controllerNumber1Field = -1;
        this.controllerName1Field = "Untitled";
        this.controllerType1Field = MidiControlDeviceControllerType1.CP;
        this.controllerNumber2Field = -1;
        this.controllerName2Field = "Untitled";
        this.controllerType2Field = MidiControlDeviceControllerType2.CC;
        this.controllerNumber3Field = -1;
        this.controllerName3Field = "Untitled";
        this.controllerType3Field = MidiControlDeviceControllerType3.CC;
        this.controllerNumber4Field = -1;
        this.controllerName4Field = "Untitled";
        this.controllerType4Field = MidiControlDeviceControllerType4.CC;
        this.controllerNumber5Field = -1;
        this.controllerName5Field = "Untitled";
        this.controllerType5Field = MidiControlDeviceControllerType5.CC;
        this.controllerNumber6Field = -1;
        this.controllerName6Field = "Untitled";
        this.controllerType6Field = MidiControlDeviceControllerType6.CC;
        this.controllerNumber7Field = -1;
        this.controllerName7Field = "Untitled";
        this.controllerType7Field = MidiControlDeviceControllerType7.CC;
        this.controllerNumber8Field = -1;
        this.controllerName8Field = "Untitled";
        this.controllerType8Field = MidiControlDeviceControllerType8.CC;
        this.controllerNumber9Field = -1;
        this.controllerName9Field = "Untitled";
        this.controllerType9Field = MidiControlDeviceControllerType9.CC;
        this.controllerNumber10Field = -1;
        this.controllerName10Field = "Untitled";
        this.controllerType10Field = MidiControlDeviceControllerType10.CC;
        this.controllerNumber11Field = -1;
        this.controllerName11Field = "Untitled";
        this.controllerType11Field = MidiControlDeviceControllerType11.CC;
        this.controllerNumber12Field = -1;
        this.controllerName12Field = "Untitled";
        this.controllerType12Field = MidiControlDeviceControllerType12.CC;
        this.controllerNumber13Field = -1;
        this.controllerName13Field = "Untitled";
        this.controllerType13Field = MidiControlDeviceControllerType13.CC;
        this.controllerNumber14Field = -1;
        this.controllerName14Field = "Untitled";
        this.controllerType14Field = MidiControlDeviceControllerType14.CC;
        this.controllerNumber15Field = -1;
        this.controllerName15Field = "Untitled";
        this.controllerType15Field = MidiControlDeviceControllerType15.CC;
        this.controllerNumber16Field = -1;
        this.controllerName16Field = "Untitled";
        this.controllerType16Field = MidiControlDeviceControllerType16.CC;
        this.controllerNumber17Field = -1;
        this.controllerName17Field = "Untitled";
        this.controllerType17Field = MidiControlDeviceControllerType17.CC;
        this.controllerNumber18Field = -1;
        this.controllerName18Field = "Untitled";
        this.controllerType18Field = MidiControlDeviceControllerType18.CC;
        this.controllerNumber19Field = -1;
        this.controllerName19Field = "Untitled";
        this.controllerType19Field = MidiControlDeviceControllerType19.CC;
        this.controllerNumber20Field = -1;
        this.controllerName20Field = "Untitled";
        this.controllerType20Field = MidiControlDeviceControllerType20.CC;
        this.controllerNumber21Field = -1;
        this.controllerName21Field = "Untitled";
        this.controllerType21Field = MidiControlDeviceControllerType21.CC;
        this.controllerNumber22Field = -1;
        this.controllerName22Field = "Untitled";
        this.controllerType22Field = MidiControlDeviceControllerType22.CC;
        this.controllerNumber23Field = -1;
        this.controllerName23Field = "Untitled";
        this.controllerType23Field = MidiControlDeviceControllerType23.CC;
        this.controllerNumber24Field = -1;
        this.controllerName24Field = "Untitled";
        this.controllerType24Field = MidiControlDeviceControllerType24.CC;
        this.controllerNumber25Field = -1;
        this.controllerName25Field = "Untitled";
        this.controllerType25Field = MidiControlDeviceControllerType25.CC;
        this.controllerNumber26Field = -1;
        this.controllerName26Field = "Untitled";
        this.controllerType26Field = MidiControlDeviceControllerType26.CC;
        this.controllerNumber27Field = -1;
        this.controllerName27Field = "Untitled";
        this.controllerType27Field = MidiControlDeviceControllerType27.CC;
        this.controllerNumber28Field = -1;
        this.controllerName28Field = "Untitled";
        this.controllerType28Field = MidiControlDeviceControllerType28.CC;
        this.controllerNumber29Field = -1;
        this.controllerName29Field = "Untitled";
        this.controllerType29Field = MidiControlDeviceControllerType29.CC;
        this.controllerNumber30Field = -1;
        this.controllerName30Field = "Untitled";
        this.controllerType30Field = MidiControlDeviceControllerType30.CC;
        this.controllerNumber31Field = -1;
        this.controllerName31Field = "Untitled";
        this.controllerType31Field = MidiControlDeviceControllerType31.CC;
        this.controllerNumber32Field = -1;
        this.controllerName32Field = "Untitled";
        this.controllerType32Field = MidiControlDeviceControllerType32.CC;
        this.controllerNumber33Field = -1;
        this.controllerName33Field = "Untitled";
        this.controllerType33Field = MidiControlDeviceControllerType33.CC;
        this.controllerNumber34Field = -1;
        this.controllerName34Field = "Untitled";
        this.controllerType34Field = MidiControlDeviceControllerType34.CC;
        this.linkedInstrumentField = 0;
        this.visiblePagesField = 1;
        this.typeField = "MidiControlDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue0 {
        get {
            return this.controllerValue0Field;
        }
        set {
            this.controllerValue0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber0 {
        get {
            return this.controllerNumber0Field;
        }
        set {
            this.controllerNumber0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName0 {
        get {
            return this.controllerName0Field;
        }
        set {
            this.controllerName0Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType0.PB)]
    public MidiControlDeviceControllerType0 ControllerType0 {
        get {
            return this.controllerType0Field;
        }
        set {
            this.controllerType0Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue1 {
        get {
            return this.controllerValue1Field;
        }
        set {
            this.controllerValue1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber1 {
        get {
            return this.controllerNumber1Field;
        }
        set {
            this.controllerNumber1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName1 {
        get {
            return this.controllerName1Field;
        }
        set {
            this.controllerName1Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType1.CP)]
    public MidiControlDeviceControllerType1 ControllerType1 {
        get {
            return this.controllerType1Field;
        }
        set {
            this.controllerType1Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue2 {
        get {
            return this.controllerValue2Field;
        }
        set {
            this.controllerValue2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber2 {
        get {
            return this.controllerNumber2Field;
        }
        set {
            this.controllerNumber2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName2 {
        get {
            return this.controllerName2Field;
        }
        set {
            this.controllerName2Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType2.CC)]
    public MidiControlDeviceControllerType2 ControllerType2 {
        get {
            return this.controllerType2Field;
        }
        set {
            this.controllerType2Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue3 {
        get {
            return this.controllerValue3Field;
        }
        set {
            this.controllerValue3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber3 {
        get {
            return this.controllerNumber3Field;
        }
        set {
            this.controllerNumber3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName3 {
        get {
            return this.controllerName3Field;
        }
        set {
            this.controllerName3Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType3.CC)]
    public MidiControlDeviceControllerType3 ControllerType3 {
        get {
            return this.controllerType3Field;
        }
        set {
            this.controllerType3Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue4 {
        get {
            return this.controllerValue4Field;
        }
        set {
            this.controllerValue4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber4 {
        get {
            return this.controllerNumber4Field;
        }
        set {
            this.controllerNumber4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName4 {
        get {
            return this.controllerName4Field;
        }
        set {
            this.controllerName4Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType4.CC)]
    public MidiControlDeviceControllerType4 ControllerType4 {
        get {
            return this.controllerType4Field;
        }
        set {
            this.controllerType4Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue5 {
        get {
            return this.controllerValue5Field;
        }
        set {
            this.controllerValue5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber5 {
        get {
            return this.controllerNumber5Field;
        }
        set {
            this.controllerNumber5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName5 {
        get {
            return this.controllerName5Field;
        }
        set {
            this.controllerName5Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType5.CC)]
    public MidiControlDeviceControllerType5 ControllerType5 {
        get {
            return this.controllerType5Field;
        }
        set {
            this.controllerType5Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue6 {
        get {
            return this.controllerValue6Field;
        }
        set {
            this.controllerValue6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber6 {
        get {
            return this.controllerNumber6Field;
        }
        set {
            this.controllerNumber6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName6 {
        get {
            return this.controllerName6Field;
        }
        set {
            this.controllerName6Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType6.CC)]
    public MidiControlDeviceControllerType6 ControllerType6 {
        get {
            return this.controllerType6Field;
        }
        set {
            this.controllerType6Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue7 {
        get {
            return this.controllerValue7Field;
        }
        set {
            this.controllerValue7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber7 {
        get {
            return this.controllerNumber7Field;
        }
        set {
            this.controllerNumber7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName7 {
        get {
            return this.controllerName7Field;
        }
        set {
            this.controllerName7Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType7.CC)]
    public MidiControlDeviceControllerType7 ControllerType7 {
        get {
            return this.controllerType7Field;
        }
        set {
            this.controllerType7Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue8 {
        get {
            return this.controllerValue8Field;
        }
        set {
            this.controllerValue8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber8 {
        get {
            return this.controllerNumber8Field;
        }
        set {
            this.controllerNumber8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName8 {
        get {
            return this.controllerName8Field;
        }
        set {
            this.controllerName8Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType8.CC)]
    public MidiControlDeviceControllerType8 ControllerType8 {
        get {
            return this.controllerType8Field;
        }
        set {
            this.controllerType8Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue9 {
        get {
            return this.controllerValue9Field;
        }
        set {
            this.controllerValue9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber9 {
        get {
            return this.controllerNumber9Field;
        }
        set {
            this.controllerNumber9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName9 {
        get {
            return this.controllerName9Field;
        }
        set {
            this.controllerName9Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType9.CC)]
    public MidiControlDeviceControllerType9 ControllerType9 {
        get {
            return this.controllerType9Field;
        }
        set {
            this.controllerType9Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue10 {
        get {
            return this.controllerValue10Field;
        }
        set {
            this.controllerValue10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber10 {
        get {
            return this.controllerNumber10Field;
        }
        set {
            this.controllerNumber10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName10 {
        get {
            return this.controllerName10Field;
        }
        set {
            this.controllerName10Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType10.CC)]
    public MidiControlDeviceControllerType10 ControllerType10 {
        get {
            return this.controllerType10Field;
        }
        set {
            this.controllerType10Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue11 {
        get {
            return this.controllerValue11Field;
        }
        set {
            this.controllerValue11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber11 {
        get {
            return this.controllerNumber11Field;
        }
        set {
            this.controllerNumber11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName11 {
        get {
            return this.controllerName11Field;
        }
        set {
            this.controllerName11Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType11.CC)]
    public MidiControlDeviceControllerType11 ControllerType11 {
        get {
            return this.controllerType11Field;
        }
        set {
            this.controllerType11Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue12 {
        get {
            return this.controllerValue12Field;
        }
        set {
            this.controllerValue12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber12 {
        get {
            return this.controllerNumber12Field;
        }
        set {
            this.controllerNumber12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName12 {
        get {
            return this.controllerName12Field;
        }
        set {
            this.controllerName12Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType12.CC)]
    public MidiControlDeviceControllerType12 ControllerType12 {
        get {
            return this.controllerType12Field;
        }
        set {
            this.controllerType12Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue13 {
        get {
            return this.controllerValue13Field;
        }
        set {
            this.controllerValue13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber13 {
        get {
            return this.controllerNumber13Field;
        }
        set {
            this.controllerNumber13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName13 {
        get {
            return this.controllerName13Field;
        }
        set {
            this.controllerName13Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType13.CC)]
    public MidiControlDeviceControllerType13 ControllerType13 {
        get {
            return this.controllerType13Field;
        }
        set {
            this.controllerType13Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue14 {
        get {
            return this.controllerValue14Field;
        }
        set {
            this.controllerValue14Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber14 {
        get {
            return this.controllerNumber14Field;
        }
        set {
            this.controllerNumber14Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName14 {
        get {
            return this.controllerName14Field;
        }
        set {
            this.controllerName14Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType14.CC)]
    public MidiControlDeviceControllerType14 ControllerType14 {
        get {
            return this.controllerType14Field;
        }
        set {
            this.controllerType14Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue15 {
        get {
            return this.controllerValue15Field;
        }
        set {
            this.controllerValue15Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber15 {
        get {
            return this.controllerNumber15Field;
        }
        set {
            this.controllerNumber15Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName15 {
        get {
            return this.controllerName15Field;
        }
        set {
            this.controllerName15Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType15.CC)]
    public MidiControlDeviceControllerType15 ControllerType15 {
        get {
            return this.controllerType15Field;
        }
        set {
            this.controllerType15Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue16 {
        get {
            return this.controllerValue16Field;
        }
        set {
            this.controllerValue16Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber16 {
        get {
            return this.controllerNumber16Field;
        }
        set {
            this.controllerNumber16Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName16 {
        get {
            return this.controllerName16Field;
        }
        set {
            this.controllerName16Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType16.CC)]
    public MidiControlDeviceControllerType16 ControllerType16 {
        get {
            return this.controllerType16Field;
        }
        set {
            this.controllerType16Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue17 {
        get {
            return this.controllerValue17Field;
        }
        set {
            this.controllerValue17Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber17 {
        get {
            return this.controllerNumber17Field;
        }
        set {
            this.controllerNumber17Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName17 {
        get {
            return this.controllerName17Field;
        }
        set {
            this.controllerName17Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType17.CC)]
    public MidiControlDeviceControllerType17 ControllerType17 {
        get {
            return this.controllerType17Field;
        }
        set {
            this.controllerType17Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue18 {
        get {
            return this.controllerValue18Field;
        }
        set {
            this.controllerValue18Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber18 {
        get {
            return this.controllerNumber18Field;
        }
        set {
            this.controllerNumber18Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName18 {
        get {
            return this.controllerName18Field;
        }
        set {
            this.controllerName18Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType18.CC)]
    public MidiControlDeviceControllerType18 ControllerType18 {
        get {
            return this.controllerType18Field;
        }
        set {
            this.controllerType18Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue19 {
        get {
            return this.controllerValue19Field;
        }
        set {
            this.controllerValue19Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber19 {
        get {
            return this.controllerNumber19Field;
        }
        set {
            this.controllerNumber19Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName19 {
        get {
            return this.controllerName19Field;
        }
        set {
            this.controllerName19Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType19.CC)]
    public MidiControlDeviceControllerType19 ControllerType19 {
        get {
            return this.controllerType19Field;
        }
        set {
            this.controllerType19Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue20 {
        get {
            return this.controllerValue20Field;
        }
        set {
            this.controllerValue20Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber20 {
        get {
            return this.controllerNumber20Field;
        }
        set {
            this.controllerNumber20Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName20 {
        get {
            return this.controllerName20Field;
        }
        set {
            this.controllerName20Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType20.CC)]
    public MidiControlDeviceControllerType20 ControllerType20 {
        get {
            return this.controllerType20Field;
        }
        set {
            this.controllerType20Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue21 {
        get {
            return this.controllerValue21Field;
        }
        set {
            this.controllerValue21Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber21 {
        get {
            return this.controllerNumber21Field;
        }
        set {
            this.controllerNumber21Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName21 {
        get {
            return this.controllerName21Field;
        }
        set {
            this.controllerName21Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType21.CC)]
    public MidiControlDeviceControllerType21 ControllerType21 {
        get {
            return this.controllerType21Field;
        }
        set {
            this.controllerType21Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue22 {
        get {
            return this.controllerValue22Field;
        }
        set {
            this.controllerValue22Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber22 {
        get {
            return this.controllerNumber22Field;
        }
        set {
            this.controllerNumber22Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName22 {
        get {
            return this.controllerName22Field;
        }
        set {
            this.controllerName22Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType22.CC)]
    public MidiControlDeviceControllerType22 ControllerType22 {
        get {
            return this.controllerType22Field;
        }
        set {
            this.controllerType22Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue23 {
        get {
            return this.controllerValue23Field;
        }
        set {
            this.controllerValue23Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber23 {
        get {
            return this.controllerNumber23Field;
        }
        set {
            this.controllerNumber23Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName23 {
        get {
            return this.controllerName23Field;
        }
        set {
            this.controllerName23Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType23.CC)]
    public MidiControlDeviceControllerType23 ControllerType23 {
        get {
            return this.controllerType23Field;
        }
        set {
            this.controllerType23Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue24 {
        get {
            return this.controllerValue24Field;
        }
        set {
            this.controllerValue24Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber24 {
        get {
            return this.controllerNumber24Field;
        }
        set {
            this.controllerNumber24Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName24 {
        get {
            return this.controllerName24Field;
        }
        set {
            this.controllerName24Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType24.CC)]
    public MidiControlDeviceControllerType24 ControllerType24 {
        get {
            return this.controllerType24Field;
        }
        set {
            this.controllerType24Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue25 {
        get {
            return this.controllerValue25Field;
        }
        set {
            this.controllerValue25Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber25 {
        get {
            return this.controllerNumber25Field;
        }
        set {
            this.controllerNumber25Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName25 {
        get {
            return this.controllerName25Field;
        }
        set {
            this.controllerName25Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType25.CC)]
    public MidiControlDeviceControllerType25 ControllerType25 {
        get {
            return this.controllerType25Field;
        }
        set {
            this.controllerType25Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue26 {
        get {
            return this.controllerValue26Field;
        }
        set {
            this.controllerValue26Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber26 {
        get {
            return this.controllerNumber26Field;
        }
        set {
            this.controllerNumber26Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName26 {
        get {
            return this.controllerName26Field;
        }
        set {
            this.controllerName26Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType26.CC)]
    public MidiControlDeviceControllerType26 ControllerType26 {
        get {
            return this.controllerType26Field;
        }
        set {
            this.controllerType26Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue27 {
        get {
            return this.controllerValue27Field;
        }
        set {
            this.controllerValue27Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber27 {
        get {
            return this.controllerNumber27Field;
        }
        set {
            this.controllerNumber27Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName27 {
        get {
            return this.controllerName27Field;
        }
        set {
            this.controllerName27Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType27.CC)]
    public MidiControlDeviceControllerType27 ControllerType27 {
        get {
            return this.controllerType27Field;
        }
        set {
            this.controllerType27Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue28 {
        get {
            return this.controllerValue28Field;
        }
        set {
            this.controllerValue28Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber28 {
        get {
            return this.controllerNumber28Field;
        }
        set {
            this.controllerNumber28Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName28 {
        get {
            return this.controllerName28Field;
        }
        set {
            this.controllerName28Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType28.CC)]
    public MidiControlDeviceControllerType28 ControllerType28 {
        get {
            return this.controllerType28Field;
        }
        set {
            this.controllerType28Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue29 {
        get {
            return this.controllerValue29Field;
        }
        set {
            this.controllerValue29Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber29 {
        get {
            return this.controllerNumber29Field;
        }
        set {
            this.controllerNumber29Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName29 {
        get {
            return this.controllerName29Field;
        }
        set {
            this.controllerName29Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType29.CC)]
    public MidiControlDeviceControllerType29 ControllerType29 {
        get {
            return this.controllerType29Field;
        }
        set {
            this.controllerType29Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue30 {
        get {
            return this.controllerValue30Field;
        }
        set {
            this.controllerValue30Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber30 {
        get {
            return this.controllerNumber30Field;
        }
        set {
            this.controllerNumber30Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName30 {
        get {
            return this.controllerName30Field;
        }
        set {
            this.controllerName30Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType30.CC)]
    public MidiControlDeviceControllerType30 ControllerType30 {
        get {
            return this.controllerType30Field;
        }
        set {
            this.controllerType30Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue31 {
        get {
            return this.controllerValue31Field;
        }
        set {
            this.controllerValue31Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber31 {
        get {
            return this.controllerNumber31Field;
        }
        set {
            this.controllerNumber31Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName31 {
        get {
            return this.controllerName31Field;
        }
        set {
            this.controllerName31Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType31.CC)]
    public MidiControlDeviceControllerType31 ControllerType31 {
        get {
            return this.controllerType31Field;
        }
        set {
            this.controllerType31Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue32 {
        get {
            return this.controllerValue32Field;
        }
        set {
            this.controllerValue32Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber32 {
        get {
            return this.controllerNumber32Field;
        }
        set {
            this.controllerNumber32Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName32 {
        get {
            return this.controllerName32Field;
        }
        set {
            this.controllerName32Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType32.CC)]
    public MidiControlDeviceControllerType32 ControllerType32 {
        get {
            return this.controllerType32Field;
        }
        set {
            this.controllerType32Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue33 {
        get {
            return this.controllerValue33Field;
        }
        set {
            this.controllerValue33Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber33 {
        get {
            return this.controllerNumber33Field;
        }
        set {
            this.controllerNumber33Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName33 {
        get {
            return this.controllerName33Field;
        }
        set {
            this.controllerName33Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType33.CC)]
    public MidiControlDeviceControllerType33 ControllerType33 {
        get {
            return this.controllerType33Field;
        }
        set {
            this.controllerType33Field = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameter ControllerValue34 {
        get {
            return this.controllerValue34Field;
        }
        set {
            this.controllerValue34Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ControllerNumber34 {
        get {
            return this.controllerNumber34Field;
        }
        set {
            this.controllerNumber34Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Untitled")]
    public string ControllerName34 {
        get {
            return this.controllerName34Field;
        }
        set {
            this.controllerName34Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceControllerType34.CC)]
    public MidiControlDeviceControllerType34 ControllerType34 {
        get {
            return this.controllerType34Field;
        }
        set {
            this.controllerType34Field = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LinkedInstrument {
        get {
            return this.linkedInstrumentField;
        }
        set {
            this.linkedInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int VisiblePages {
        get {
            return this.visiblePagesField;
        }
        set {
            this.visiblePagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiControlDevicePreset {
    
    private MidiControlDevice deviceSlotField;
    
    private string typeField;
    
    public MidiControlDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MidiControlDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiControlDeviceFilterDeviceParameter {
    
    private float valueField;
    
    private MidiControlDeviceFilterDeviceParameterVisualization visualizationField;
    
    private MidiControlDeviceFilterDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public MidiControlDeviceFilterDeviceParameter() {
        this.valueField = ((float)(63.5F));
        this.visualizationField = MidiControlDeviceFilterDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "63.5")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MidiControlDeviceFilterDeviceParameterVisualization.Deviceonly)]
    public MidiControlDeviceFilterDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public MidiControlDeviceFilterDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceFilterDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class MidiControlDeviceFilterDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType0 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType1 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType2 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType3 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType4 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType5 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType6 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType7 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType8 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType9 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType10 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType11 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType12 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType13 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType14 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType15 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType16 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType17 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType18 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType19 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType20 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType21 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType22 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType23 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType24 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType25 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType26 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType27 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType28 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType29 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType30 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType31 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType32 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType33 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MidiControlDeviceControllerType34 {
    
    /// <remarks/>
    PB,
    
    /// <remarks/>
    CP,
    
    /// <remarks/>
    CC,
    
    /// <remarks/>
    Prg,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MixerEqDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MixerEqDevicePreset runTimePresetAField;
    
    private MixerEqDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private MixerEqDeviceInputMode inputModeField;
    
    private float maxVisualizedGainField;
    
    private FilterDeviceParameter lowGainField;
    
    private FilterDeviceParameter midGainField;
    
    private FilterDeviceParameter midFreqField;
    
    private FilterDeviceParameter midQField;
    
    private FilterDeviceParameter hiGainField;
    
    private string typeField;
    
    public MixerEqDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.inputModeField = MixerEqDeviceInputMode.LR;
        this.maxVisualizedGainField = ((float)(18F));
        this.typeField = "MixerEqDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MixerEqDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MixerEqDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(MixerEqDeviceInputMode.LR)]
    public MixerEqDeviceInputMode InputMode {
        get {
            return this.inputModeField;
        }
        set {
            this.inputModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "18")]
    public float MaxVisualizedGain {
        get {
            return this.maxVisualizedGainField;
        }
        set {
            this.maxVisualizedGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LowGain {
        get {
            return this.lowGainField;
        }
        set {
            this.lowGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MidGain {
        get {
            return this.midGainField;
        }
        set {
            this.midGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MidFreq {
        get {
            return this.midFreqField;
        }
        set {
            this.midFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MidQ {
        get {
            return this.midQField;
        }
        set {
            this.midQField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter HiGain {
        get {
            return this.hiGainField;
        }
        set {
            this.hiGainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MixerEqDevicePreset {
    
    private MixerEqDevice deviceSlotField;
    
    private string typeField;
    
    public MixerEqDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MixerEqDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum MixerEqDeviceInputMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MultitapDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MultitapDevicePreset runTimePresetAField;
    
    private MultitapDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private NonContinuesDeviceParameter panicField;
    
    private int visibleTapField;
    
    private bool visiblePanelField;
    
    private FilterDeviceParameter muteDrySignalField;
    
    private FilterDeviceParameter tap1DelayLeftField;
    
    private FilterDeviceParameter tap1DelayRightField;
    
    private FilterDeviceParameter tap1InputAmountField;
    
    private FilterDeviceParameter tap1AmountField;
    
    private FilterDeviceParameter tap1LFeedbackField;
    
    private FilterDeviceParameter tap1RFeedbackField;
    
    private FilterDeviceParameter tap1InvertFeedbackField;
    
    private FilterDeviceParameter tap1PreviousTapInputField;
    
    private FilterDeviceParameter tap1LeftTapPanField;
    
    private FilterDeviceParameter tap1RightTapPanField;
    
    private FilterDeviceParameter tap1FilterModeField;
    
    private FilterDeviceParameter tap1FilterTypeField;
    
    private FilterDeviceParameter tap1FilterFreqField;
    
    private FilterDeviceParameter tap1FilterResonanceField;
    
    private FilterDeviceParameter tap1FilterDriveField;
    
    private FilterDeviceParameter tap1LineSyncField;
    
    private NonContinuesDeviceParameter tap1LSetSyncedDelayField;
    
    private NonContinuesDeviceParameter tap1RSetSyncedDelayField;
    
    private FilterDeviceParameter tap1LSyncTimeField;
    
    private FilterDeviceParameter tap1RSyncTimeField;
    
    private FilterDeviceParameter tap1LSyncOffsetField;
    
    private FilterDeviceParameter tap1RSyncOffsetField;
    
    private FilterDeviceParameter tap2DelayLeftField;
    
    private FilterDeviceParameter tap2DelayRightField;
    
    private FilterDeviceParameter tap2InputAmountField;
    
    private FilterDeviceParameter tap2AmountField;
    
    private FilterDeviceParameter tap2LFeedbackField;
    
    private FilterDeviceParameter tap2RFeedbackField;
    
    private FilterDeviceParameter tap2InvertFeedbackField;
    
    private FilterDeviceParameter tap2PreviousTapInputField;
    
    private FilterDeviceParameter tap2LeftTapPanField;
    
    private FilterDeviceParameter tap2RightTapPanField;
    
    private FilterDeviceParameter tap2FilterModeField;
    
    private FilterDeviceParameter tap2FilterTypeField;
    
    private FilterDeviceParameter tap2FilterFreqField;
    
    private FilterDeviceParameter tap2FilterResonanceField;
    
    private FilterDeviceParameter tap2FilterDriveField;
    
    private FilterDeviceParameter tap2LineSyncField;
    
    private NonContinuesDeviceParameter tap2LSetSyncedDelayField;
    
    private NonContinuesDeviceParameter tap2RSetSyncedDelayField;
    
    private FilterDeviceParameter tap2LSyncTimeField;
    
    private FilterDeviceParameter tap2RSyncTimeField;
    
    private FilterDeviceParameter tap2LSyncOffsetField;
    
    private FilterDeviceParameter tap2RSyncOffsetField;
    
    private FilterDeviceParameter tap3DelayLeftField;
    
    private FilterDeviceParameter tap3DelayRightField;
    
    private FilterDeviceParameter tap3InputAmountField;
    
    private FilterDeviceParameter tap3AmountField;
    
    private FilterDeviceParameter tap3LFeedbackField;
    
    private FilterDeviceParameter tap3RFeedbackField;
    
    private FilterDeviceParameter tap3InvertFeedbackField;
    
    private FilterDeviceParameter tap3PreviousTapInputField;
    
    private FilterDeviceParameter tap3LeftTapPanField;
    
    private FilterDeviceParameter tap3RightTapPanField;
    
    private FilterDeviceParameter tap3FilterModeField;
    
    private FilterDeviceParameter tap3FilterTypeField;
    
    private FilterDeviceParameter tap3FilterFreqField;
    
    private FilterDeviceParameter tap3FilterResonanceField;
    
    private FilterDeviceParameter tap3FilterDriveField;
    
    private FilterDeviceParameter tap3LineSyncField;
    
    private NonContinuesDeviceParameter tap3LSetSyncedDelayField;
    
    private NonContinuesDeviceParameter tap3RSetSyncedDelayField;
    
    private FilterDeviceParameter tap3LSyncTimeField;
    
    private FilterDeviceParameter tap3RSyncTimeField;
    
    private FilterDeviceParameter tap3LSyncOffsetField;
    
    private FilterDeviceParameter tap3RSyncOffsetField;
    
    private FilterDeviceParameter tap4DelayLeftField;
    
    private FilterDeviceParameter tap4DelayRightField;
    
    private FilterDeviceParameter tap4InputAmountField;
    
    private FilterDeviceParameter tap4AmountField;
    
    private FilterDeviceParameter tap4LFeedbackField;
    
    private FilterDeviceParameter tap4RFeedbackField;
    
    private FilterDeviceParameter tap4InvertFeedbackField;
    
    private FilterDeviceParameter tap4PreviousTapInputField;
    
    private FilterDeviceParameter tap4LeftTapPanField;
    
    private FilterDeviceParameter tap4RightTapPanField;
    
    private FilterDeviceParameter tap4FilterModeField;
    
    private FilterDeviceParameter tap4FilterTypeField;
    
    private FilterDeviceParameter tap4FilterFreqField;
    
    private FilterDeviceParameter tap4FilterResonanceField;
    
    private FilterDeviceParameter tap4FilterDriveField;
    
    private FilterDeviceParameter tap4LineSyncField;
    
    private NonContinuesDeviceParameter tap4LSetSyncedDelayField;
    
    private NonContinuesDeviceParameter tap4RSetSyncedDelayField;
    
    private FilterDeviceParameter tap4LSyncTimeField;
    
    private FilterDeviceParameter tap4RSyncTimeField;
    
    private FilterDeviceParameter tap4LSyncOffsetField;
    
    private FilterDeviceParameter tap4RSyncOffsetField;
    
    private string typeField;
    
    public MultitapDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.visibleTapField = 0;
        this.visiblePanelField = false;
        this.typeField = "MultitapDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MultitapDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MultitapDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Panic {
        get {
            return this.panicField;
        }
        set {
            this.panicField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int VisibleTap {
        get {
            return this.visibleTapField;
        }
        set {
            this.visibleTapField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool VisiblePanel {
        get {
            return this.visiblePanelField;
        }
        set {
            this.visiblePanelField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter MuteDrySignal {
        get {
            return this.muteDrySignalField;
        }
        set {
            this.muteDrySignalField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1DelayLeft {
        get {
            return this.tap1DelayLeftField;
        }
        set {
            this.tap1DelayLeftField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1DelayRight {
        get {
            return this.tap1DelayRightField;
        }
        set {
            this.tap1DelayRightField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1InputAmount {
        get {
            return this.tap1InputAmountField;
        }
        set {
            this.tap1InputAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1Amount {
        get {
            return this.tap1AmountField;
        }
        set {
            this.tap1AmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1LFeedback {
        get {
            return this.tap1LFeedbackField;
        }
        set {
            this.tap1LFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1RFeedback {
        get {
            return this.tap1RFeedbackField;
        }
        set {
            this.tap1RFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1InvertFeedback {
        get {
            return this.tap1InvertFeedbackField;
        }
        set {
            this.tap1InvertFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1PreviousTapInput {
        get {
            return this.tap1PreviousTapInputField;
        }
        set {
            this.tap1PreviousTapInputField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1LeftTapPan {
        get {
            return this.tap1LeftTapPanField;
        }
        set {
            this.tap1LeftTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1RightTapPan {
        get {
            return this.tap1RightTapPanField;
        }
        set {
            this.tap1RightTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1FilterMode {
        get {
            return this.tap1FilterModeField;
        }
        set {
            this.tap1FilterModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1FilterType {
        get {
            return this.tap1FilterTypeField;
        }
        set {
            this.tap1FilterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1FilterFreq {
        get {
            return this.tap1FilterFreqField;
        }
        set {
            this.tap1FilterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1FilterResonance {
        get {
            return this.tap1FilterResonanceField;
        }
        set {
            this.tap1FilterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1FilterDrive {
        get {
            return this.tap1FilterDriveField;
        }
        set {
            this.tap1FilterDriveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1LineSync {
        get {
            return this.tap1LineSyncField;
        }
        set {
            this.tap1LineSyncField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap1LSetSyncedDelay {
        get {
            return this.tap1LSetSyncedDelayField;
        }
        set {
            this.tap1LSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap1RSetSyncedDelay {
        get {
            return this.tap1RSetSyncedDelayField;
        }
        set {
            this.tap1RSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1LSyncTime {
        get {
            return this.tap1LSyncTimeField;
        }
        set {
            this.tap1LSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1RSyncTime {
        get {
            return this.tap1RSyncTimeField;
        }
        set {
            this.tap1RSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1LSyncOffset {
        get {
            return this.tap1LSyncOffsetField;
        }
        set {
            this.tap1LSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap1RSyncOffset {
        get {
            return this.tap1RSyncOffsetField;
        }
        set {
            this.tap1RSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2DelayLeft {
        get {
            return this.tap2DelayLeftField;
        }
        set {
            this.tap2DelayLeftField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2DelayRight {
        get {
            return this.tap2DelayRightField;
        }
        set {
            this.tap2DelayRightField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2InputAmount {
        get {
            return this.tap2InputAmountField;
        }
        set {
            this.tap2InputAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2Amount {
        get {
            return this.tap2AmountField;
        }
        set {
            this.tap2AmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2LFeedback {
        get {
            return this.tap2LFeedbackField;
        }
        set {
            this.tap2LFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2RFeedback {
        get {
            return this.tap2RFeedbackField;
        }
        set {
            this.tap2RFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2InvertFeedback {
        get {
            return this.tap2InvertFeedbackField;
        }
        set {
            this.tap2InvertFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2PreviousTapInput {
        get {
            return this.tap2PreviousTapInputField;
        }
        set {
            this.tap2PreviousTapInputField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2LeftTapPan {
        get {
            return this.tap2LeftTapPanField;
        }
        set {
            this.tap2LeftTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2RightTapPan {
        get {
            return this.tap2RightTapPanField;
        }
        set {
            this.tap2RightTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2FilterMode {
        get {
            return this.tap2FilterModeField;
        }
        set {
            this.tap2FilterModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2FilterType {
        get {
            return this.tap2FilterTypeField;
        }
        set {
            this.tap2FilterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2FilterFreq {
        get {
            return this.tap2FilterFreqField;
        }
        set {
            this.tap2FilterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2FilterResonance {
        get {
            return this.tap2FilterResonanceField;
        }
        set {
            this.tap2FilterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2FilterDrive {
        get {
            return this.tap2FilterDriveField;
        }
        set {
            this.tap2FilterDriveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2LineSync {
        get {
            return this.tap2LineSyncField;
        }
        set {
            this.tap2LineSyncField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap2LSetSyncedDelay {
        get {
            return this.tap2LSetSyncedDelayField;
        }
        set {
            this.tap2LSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap2RSetSyncedDelay {
        get {
            return this.tap2RSetSyncedDelayField;
        }
        set {
            this.tap2RSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2LSyncTime {
        get {
            return this.tap2LSyncTimeField;
        }
        set {
            this.tap2LSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2RSyncTime {
        get {
            return this.tap2RSyncTimeField;
        }
        set {
            this.tap2RSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2LSyncOffset {
        get {
            return this.tap2LSyncOffsetField;
        }
        set {
            this.tap2LSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap2RSyncOffset {
        get {
            return this.tap2RSyncOffsetField;
        }
        set {
            this.tap2RSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3DelayLeft {
        get {
            return this.tap3DelayLeftField;
        }
        set {
            this.tap3DelayLeftField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3DelayRight {
        get {
            return this.tap3DelayRightField;
        }
        set {
            this.tap3DelayRightField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3InputAmount {
        get {
            return this.tap3InputAmountField;
        }
        set {
            this.tap3InputAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3Amount {
        get {
            return this.tap3AmountField;
        }
        set {
            this.tap3AmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3LFeedback {
        get {
            return this.tap3LFeedbackField;
        }
        set {
            this.tap3LFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3RFeedback {
        get {
            return this.tap3RFeedbackField;
        }
        set {
            this.tap3RFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3InvertFeedback {
        get {
            return this.tap3InvertFeedbackField;
        }
        set {
            this.tap3InvertFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3PreviousTapInput {
        get {
            return this.tap3PreviousTapInputField;
        }
        set {
            this.tap3PreviousTapInputField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3LeftTapPan {
        get {
            return this.tap3LeftTapPanField;
        }
        set {
            this.tap3LeftTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3RightTapPan {
        get {
            return this.tap3RightTapPanField;
        }
        set {
            this.tap3RightTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3FilterMode {
        get {
            return this.tap3FilterModeField;
        }
        set {
            this.tap3FilterModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3FilterType {
        get {
            return this.tap3FilterTypeField;
        }
        set {
            this.tap3FilterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3FilterFreq {
        get {
            return this.tap3FilterFreqField;
        }
        set {
            this.tap3FilterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3FilterResonance {
        get {
            return this.tap3FilterResonanceField;
        }
        set {
            this.tap3FilterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3FilterDrive {
        get {
            return this.tap3FilterDriveField;
        }
        set {
            this.tap3FilterDriveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3LineSync {
        get {
            return this.tap3LineSyncField;
        }
        set {
            this.tap3LineSyncField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap3LSetSyncedDelay {
        get {
            return this.tap3LSetSyncedDelayField;
        }
        set {
            this.tap3LSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap3RSetSyncedDelay {
        get {
            return this.tap3RSetSyncedDelayField;
        }
        set {
            this.tap3RSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3LSyncTime {
        get {
            return this.tap3LSyncTimeField;
        }
        set {
            this.tap3LSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3RSyncTime {
        get {
            return this.tap3RSyncTimeField;
        }
        set {
            this.tap3RSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3LSyncOffset {
        get {
            return this.tap3LSyncOffsetField;
        }
        set {
            this.tap3LSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap3RSyncOffset {
        get {
            return this.tap3RSyncOffsetField;
        }
        set {
            this.tap3RSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4DelayLeft {
        get {
            return this.tap4DelayLeftField;
        }
        set {
            this.tap4DelayLeftField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4DelayRight {
        get {
            return this.tap4DelayRightField;
        }
        set {
            this.tap4DelayRightField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4InputAmount {
        get {
            return this.tap4InputAmountField;
        }
        set {
            this.tap4InputAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4Amount {
        get {
            return this.tap4AmountField;
        }
        set {
            this.tap4AmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4LFeedback {
        get {
            return this.tap4LFeedbackField;
        }
        set {
            this.tap4LFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4RFeedback {
        get {
            return this.tap4RFeedbackField;
        }
        set {
            this.tap4RFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4InvertFeedback {
        get {
            return this.tap4InvertFeedbackField;
        }
        set {
            this.tap4InvertFeedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4PreviousTapInput {
        get {
            return this.tap4PreviousTapInputField;
        }
        set {
            this.tap4PreviousTapInputField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4LeftTapPan {
        get {
            return this.tap4LeftTapPanField;
        }
        set {
            this.tap4LeftTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4RightTapPan {
        get {
            return this.tap4RightTapPanField;
        }
        set {
            this.tap4RightTapPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4FilterMode {
        get {
            return this.tap4FilterModeField;
        }
        set {
            this.tap4FilterModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4FilterType {
        get {
            return this.tap4FilterTypeField;
        }
        set {
            this.tap4FilterTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4FilterFreq {
        get {
            return this.tap4FilterFreqField;
        }
        set {
            this.tap4FilterFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4FilterResonance {
        get {
            return this.tap4FilterResonanceField;
        }
        set {
            this.tap4FilterResonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4FilterDrive {
        get {
            return this.tap4FilterDriveField;
        }
        set {
            this.tap4FilterDriveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4LineSync {
        get {
            return this.tap4LineSyncField;
        }
        set {
            this.tap4LineSyncField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap4LSetSyncedDelay {
        get {
            return this.tap4LSetSyncedDelayField;
        }
        set {
            this.tap4LSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Tap4RSetSyncedDelay {
        get {
            return this.tap4RSetSyncedDelayField;
        }
        set {
            this.tap4RSetSyncedDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4LSyncTime {
        get {
            return this.tap4LSyncTimeField;
        }
        set {
            this.tap4LSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4RSyncTime {
        get {
            return this.tap4RSyncTimeField;
        }
        set {
            this.tap4RSyncTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4LSyncOffset {
        get {
            return this.tap4LSyncOffsetField;
        }
        set {
            this.tap4LSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Tap4RSyncOffset {
        get {
            return this.tap4RSyncOffsetField;
        }
        set {
            this.tap4RSyncOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MultitapDevicePreset {
    
    private MultitapDevice deviceSlotField;
    
    private string typeField;
    
    public MultitapDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MultitapDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PdcTestDelayDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PdcTestDelayDevicePreset runTimePresetAField;
    
    private PdcTestDelayDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter delayInMsField;
    
    private FilterDeviceParameter reportLatencyField;
    
    private string typeField;
    
    public PdcTestDelayDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "PdcTestDelayDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public PdcTestDelayDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public PdcTestDelayDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DelayInMs {
        get {
            return this.delayInMsField;
        }
        set {
            this.delayInMsField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ReportLatency {
        get {
            return this.reportLatencyField;
        }
        set {
            this.reportLatencyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PdcTestDelayDevicePreset {
    
    private PdcTestDelayDevice deviceSlotField;
    
    private string typeField;
    
    public PdcTestDelayDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public PdcTestDelayDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Phaser2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Phaser2DevicePreset runTimePresetAField;
    
    private Phaser2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter floorField;
    
    private FilterDeviceParameter ceillingField;
    
    private FilterDeviceParameter rateField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter depthField;
    
    private FilterDeviceParameter dephaseField;
    
    private NonContinuesDeviceParameter resetField;
    
    private FilterDeviceParameter stagesField;
    
    private string typeField;
    
    public Phaser2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Phaser2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Phaser2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Phaser2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Floor {
        get {
            return this.floorField;
        }
        set {
            this.floorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ceilling {
        get {
            return this.ceillingField;
        }
        set {
            this.ceillingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Rate {
        get {
            return this.rateField;
        }
        set {
            this.rateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Depth {
        get {
            return this.depthField;
        }
        set {
            this.depthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dephase {
        get {
            return this.dephaseField;
        }
        set {
            this.dephaseField = value;
        }
    }
    
    /// <remarks/>
    public NonContinuesDeviceParameter Reset {
        get {
            return this.resetField;
        }
        set {
            this.resetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Stages {
        get {
            return this.stagesField;
        }
        set {
            this.stagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Phaser2DevicePreset {
    
    private Phaser2Device deviceSlotField;
    
    private string typeField;
    
    public Phaser2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Phaser2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PhaserDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PhaserDevicePreset runTimePresetAField;
    
    private PhaserDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter ceillingField;
    
    private FilterDeviceParameter floorField;
    
    private FilterDeviceParameter lFORateField;
    
    private FilterDeviceParameter depthField;
    
    private FilterDeviceParameter feedbackField;
    
    private FilterDeviceParameter phaseField;
    
    private FilterDeviceParameter stagesField;
    
    private string typeField;
    
    public PhaserDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "PhaserDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public PhaserDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public PhaserDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ceilling {
        get {
            return this.ceillingField;
        }
        set {
            this.ceillingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Floor {
        get {
            return this.floorField;
        }
        set {
            this.floorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LFORate {
        get {
            return this.lFORateField;
        }
        set {
            this.lFORateField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Depth {
        get {
            return this.depthField;
        }
        set {
            this.depthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Feedback {
        get {
            return this.feedbackField;
        }
        set {
            this.feedbackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Phase {
        get {
            return this.phaseField;
        }
        set {
            this.phaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Stages {
        get {
            return this.stagesField;
        }
        set {
            this.stagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PhaserDevicePreset {
    
    private PhaserDevice deviceSlotField;
    
    private string typeField;
    
    public PhaserDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public PhaserDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RepeaterDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private RepeaterDevicePreset runTimePresetAField;
    
    private RepeaterDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter modeField;
    
    private RepeaterDeviceDivisorParameter divisorField;
    
    private bool holdField;
    
    private FilterDeviceParameter syncModeField;
    
    private RepeaterMidiTriggerParameter midiTrigger0Field;
    
    private RepeaterMidiTriggerParameter midiTrigger1Field;
    
    private RepeaterMidiTriggerParameter midiTrigger2Field;
    
    private RepeaterMidiTriggerParameter midiTrigger3Field;
    
    private RepeaterMidiTriggerParameter midiTrigger4Field;
    
    private RepeaterMidiTriggerParameter midiTrigger5Field;
    
    private RepeaterMidiTriggerParameter midiTrigger6Field;
    
    private RepeaterMidiTriggerParameter midiTrigger7Field;
    
    private RepeaterMidiTriggerParameter midiTrigger8Field;
    
    private RepeaterMidiTriggerParameter midiTrigger9Field;
    
    private RepeaterMidiTriggerParameter midiTrigger10Field;
    
    private RepeaterMidiTriggerParameter midiTrigger11Field;
    
    private RepeaterMidiTriggerParameter midiTrigger12Field;
    
    private RepeaterMidiTriggerParameter midiTrigger13Field;
    
    private RepeaterMidiTriggerParameter midiTrigger14Field;
    
    private RepeaterMidiTriggerParameter midiTrigger15Field;
    
    private RepeaterMidiTriggerParameter midiTrigger16Field;
    
    private RepeaterMidiTriggerParameter midiTrigger17Field;
    
    private RepeaterMidiTriggerParameter midiTrigger18Field;
    
    private RepeaterMidiTriggerParameter midiTrigger19Field;
    
    private RepeaterMidiTriggerParameter midiTrigger20Field;
    
    private RepeaterMidiTriggerParameter midiTrigger21Field;
    
    private RepeaterMidiTriggerParameter midiTrigger22Field;
    
    private RepeaterMidiTriggerParameter midiTrigger23Field;
    
    private string typeField;
    
    public RepeaterDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.holdField = true;
        this.typeField = "RepeaterDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public RepeaterDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public RepeaterDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Mode {
        get {
            return this.modeField;
        }
        set {
            this.modeField = value;
        }
    }
    
    /// <remarks/>
    public RepeaterDeviceDivisorParameter Divisor {
        get {
            return this.divisorField;
        }
        set {
            this.divisorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Hold {
        get {
            return this.holdField;
        }
        set {
            this.holdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SyncMode {
        get {
            return this.syncModeField;
        }
        set {
            this.syncModeField = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger0 {
        get {
            return this.midiTrigger0Field;
        }
        set {
            this.midiTrigger0Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger1 {
        get {
            return this.midiTrigger1Field;
        }
        set {
            this.midiTrigger1Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger2 {
        get {
            return this.midiTrigger2Field;
        }
        set {
            this.midiTrigger2Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger3 {
        get {
            return this.midiTrigger3Field;
        }
        set {
            this.midiTrigger3Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger4 {
        get {
            return this.midiTrigger4Field;
        }
        set {
            this.midiTrigger4Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger5 {
        get {
            return this.midiTrigger5Field;
        }
        set {
            this.midiTrigger5Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger6 {
        get {
            return this.midiTrigger6Field;
        }
        set {
            this.midiTrigger6Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger7 {
        get {
            return this.midiTrigger7Field;
        }
        set {
            this.midiTrigger7Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger8 {
        get {
            return this.midiTrigger8Field;
        }
        set {
            this.midiTrigger8Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger9 {
        get {
            return this.midiTrigger9Field;
        }
        set {
            this.midiTrigger9Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger10 {
        get {
            return this.midiTrigger10Field;
        }
        set {
            this.midiTrigger10Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger11 {
        get {
            return this.midiTrigger11Field;
        }
        set {
            this.midiTrigger11Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger12 {
        get {
            return this.midiTrigger12Field;
        }
        set {
            this.midiTrigger12Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger13 {
        get {
            return this.midiTrigger13Field;
        }
        set {
            this.midiTrigger13Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger14 {
        get {
            return this.midiTrigger14Field;
        }
        set {
            this.midiTrigger14Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger15 {
        get {
            return this.midiTrigger15Field;
        }
        set {
            this.midiTrigger15Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger16 {
        get {
            return this.midiTrigger16Field;
        }
        set {
            this.midiTrigger16Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger17 {
        get {
            return this.midiTrigger17Field;
        }
        set {
            this.midiTrigger17Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger18 {
        get {
            return this.midiTrigger18Field;
        }
        set {
            this.midiTrigger18Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger19 {
        get {
            return this.midiTrigger19Field;
        }
        set {
            this.midiTrigger19Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger20 {
        get {
            return this.midiTrigger20Field;
        }
        set {
            this.midiTrigger20Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger21 {
        get {
            return this.midiTrigger21Field;
        }
        set {
            this.midiTrigger21Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger22 {
        get {
            return this.midiTrigger22Field;
        }
        set {
            this.midiTrigger22Field = value;
        }
    }
    
    /// <remarks/>
    public RepeaterMidiTriggerParameter MidiTrigger23 {
        get {
            return this.midiTrigger23Field;
        }
        set {
            this.midiTrigger23Field = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RepeaterDevicePreset {
    
    private RepeaterDevice deviceSlotField;
    
    private string typeField;
    
    public RepeaterDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public RepeaterDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RepeaterDeviceDivisorParameter {
    
    private float valueField;
    
    private RepeaterDeviceDivisorParameterVisualization visualizationField;
    
    private RepeaterDeviceDivisorParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public RepeaterDeviceDivisorParameter() {
        this.valueField = ((float)(0.5F));
        this.visualizationField = RepeaterDeviceDivisorParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(RepeaterDeviceDivisorParameterVisualization.Deviceonly)]
    public RepeaterDeviceDivisorParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public RepeaterDeviceDivisorParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum RepeaterDeviceDivisorParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RepeaterDeviceDivisorParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RepeaterMidiTriggerParameter {
    
    private RepeaterMidiTriggerParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    /// <remarks/>
    public RepeaterMidiTriggerParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RepeaterMidiTriggerParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Reverb2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Reverb2DevicePreset runTimePresetAField;
    
    private Reverb2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int qualitySetupField;
    
    private FilterDeviceParameter reverbTimeField;
    
    private FilterDeviceParameter lPFilterField;
    
    private FilterDeviceParameter preDelayField;
    
    private FilterDeviceParameter dryMixField;
    
    private FilterDeviceParameter sendField;
    
    private string typeField;
    
    public Reverb2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.qualitySetupField = 1;
        this.typeField = "Reverb2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Reverb2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Reverb2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int QualitySetup {
        get {
            return this.qualitySetupField;
        }
        set {
            this.qualitySetupField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ReverbTime {
        get {
            return this.reverbTimeField;
        }
        set {
            this.reverbTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LPFilter {
        get {
            return this.lPFilterField;
        }
        set {
            this.lPFilterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PreDelay {
        get {
            return this.preDelayField;
        }
        set {
            this.preDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryMix {
        get {
            return this.dryMixField;
        }
        set {
            this.dryMixField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Send {
        get {
            return this.sendField;
        }
        set {
            this.sendField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Reverb2DevicePreset {
    
    private Reverb2Device deviceSlotField;
    
    private string typeField;
    
    public Reverb2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Reverb2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Reverb3Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private Reverb3DevicePreset runTimePresetAField;
    
    private Reverb3DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter reverbTimeField;
    
    private FilterDeviceParameter preDelayField;
    
    private FilterDeviceParameter lPFilterField;
    
    private FilterDeviceParameter lPGainField;
    
    private FilterDeviceParameter colorField;
    
    private FilterDeviceParameter widthField;
    
    private FilterDeviceParameter panField;
    
    private FilterDeviceParameter wetMixField;
    
    private FilterDeviceParameter dryMixField;
    
    private string typeField;
    
    public Reverb3Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "Reverb3Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public Reverb3DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public Reverb3DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ReverbTime {
        get {
            return this.reverbTimeField;
        }
        set {
            this.reverbTimeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PreDelay {
        get {
            return this.preDelayField;
        }
        set {
            this.preDelayField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LPFilter {
        get {
            return this.lPFilterField;
        }
        set {
            this.lPFilterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LPGain {
        get {
            return this.lPGainField;
        }
        set {
            this.lPGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Pan {
        get {
            return this.panField;
        }
        set {
            this.panField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter WetMix {
        get {
            return this.wetMixField;
        }
        set {
            this.wetMixField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryMix {
        get {
            return this.dryMixField;
        }
        set {
            this.dryMixField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Reverb3DevicePreset {
    
    private Reverb3Device deviceSlotField;
    
    private string typeField;
    
    public Reverb3DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public Reverb3Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReverbDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private ReverbDevicePreset runTimePresetAField;
    
    private ReverbDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter sendField;
    
    private FilterDeviceParameter roomSizeField;
    
    private FilterDeviceParameter widthField;
    
    private FilterDeviceParameter dampField;
    
    private FilterDeviceParameter dryMixField;
    
    private string typeField;
    
    public ReverbDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "ReverbDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public ReverbDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public ReverbDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Send {
        get {
            return this.sendField;
        }
        set {
            this.sendField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter RoomSize {
        get {
            return this.roomSizeField;
        }
        set {
            this.roomSizeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Damp {
        get {
            return this.dampField;
        }
        set {
            this.dampField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryMix {
        get {
            return this.dryMixField;
        }
        set {
            this.dryMixField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReverbDevicePreset {
    
    private ReverbDevice deviceSlotField;
    
    private string typeField;
    
    public ReverbDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public ReverbDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RewireInDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private RewireInDevicePreset runTimePresetAField;
    
    private RewireInDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private string deviceNameField;
    
    private int channelIndexField;
    
    private RewireInDeviceChannelMode channelModeField;
    
    private FilterDeviceParameter panningField;
    
    private FilterDeviceParameter volumeField;
    
    private string typeField;
    
    public RewireInDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.channelIndexField = 0;
        this.channelModeField = RewireInDeviceChannelMode.LR;
        this.typeField = "RewireInDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public RewireInDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public RewireInDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceName {
        get {
            return this.deviceNameField;
        }
        set {
            this.deviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int ChannelIndex {
        get {
            return this.channelIndexField;
        }
        set {
            this.channelIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(RewireInDeviceChannelMode.LR)]
    public RewireInDeviceChannelMode ChannelMode {
        get {
            return this.channelModeField;
        }
        set {
            this.channelModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RewireInDevicePreset {
    
    private RewireInDevice deviceSlotField;
    
    private string typeField;
    
    public RewireInDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public RewireInDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum RewireInDeviceChannelMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RingMod2Device {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private RingMod2DevicePreset runTimePresetAField;
    
    private RingMod2DevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter oscillatorTypeField;
    
    private RingMod2NoteFilterDeviceParameter noteField;
    
    private FilterDeviceParameter transposeField;
    
    private FilterDeviceParameter inertiaField;
    
    private FilterDeviceParameter dryWetField;
    
    private string typeField;
    
    public RingMod2Device() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "RingMod2Device";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public RingMod2DevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public RingMod2DevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter OscillatorType {
        get {
            return this.oscillatorTypeField;
        }
        set {
            this.oscillatorTypeField = value;
        }
    }
    
    /// <remarks/>
    public RingMod2NoteFilterDeviceParameter Note {
        get {
            return this.noteField;
        }
        set {
            this.noteField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DryWet {
        get {
            return this.dryWetField;
        }
        set {
            this.dryWetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RingMod2DevicePreset {
    
    private RingMod2Device deviceSlotField;
    
    private string typeField;
    
    public RingMod2DevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public RingMod2Device DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RingMod2NoteFilterDeviceParameter {
    
    private float valueField;
    
    private RingMod2NoteFilterDeviceParameterVisualization visualizationField;
    
    private RingMod2NoteFilterDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public RingMod2NoteFilterDeviceParameter() {
        this.valueField = ((float)(48F));
        this.visualizationField = RingMod2NoteFilterDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "48")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(RingMod2NoteFilterDeviceParameterVisualization.Deviceonly)]
    public RingMod2NoteFilterDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public RingMod2NoteFilterDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum RingMod2NoteFilterDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RingMod2NoteFilterDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RingModDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private RingModDevicePreset runTimePresetAField;
    
    private RingModDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter oscillatorTypeField;
    
    private FilterDeviceParameter frequencyField;
    
    private FilterDeviceParameter amountField;
    
    private FilterDeviceParameter phaseField;
    
    private FilterDeviceParameter inertiaField;
    
    private string typeField;
    
    public RingModDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "RingModDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public RingModDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public RingModDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter OscillatorType {
        get {
            return this.oscillatorTypeField;
        }
        set {
            this.oscillatorTypeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Phase {
        get {
            return this.phaseField;
        }
        set {
            this.phaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Inertia {
        get {
            return this.inertiaField;
        }
        set {
            this.inertiaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RingModDevicePreset {
    
    private RingModDevice deviceSlotField;
    
    private string typeField;
    
    public RingModDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public RingModDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SendDevicePreset runTimePresetAField;
    
    private SendDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter sendAmountField;
    
    private FilterDeviceParameter sendPanField;
    
    private FilterDeviceParameter destSendTrackField;
    
    private bool muteSourceField;
    
    private bool smoothParameterChangesField;
    
    private bool applyPostVolumeField;
    
    private string typeField;
    
    public SendDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.muteSourceField = true;
        this.smoothParameterChangesField = true;
        this.applyPostVolumeField = true;
        this.typeField = "SendDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SendDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SendDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SendAmount {
        get {
            return this.sendAmountField;
        }
        set {
            this.sendAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SendPan {
        get {
            return this.sendPanField;
        }
        set {
            this.sendPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestSendTrack {
        get {
            return this.destSendTrackField;
        }
        set {
            this.destSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool MuteSource {
        get {
            return this.muteSourceField;
        }
        set {
            this.muteSourceField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool ApplyPostVolume {
        get {
            return this.applyPostVolumeField;
        }
        set {
            this.applyPostVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendDevicePreset {
    
    private SendDevice deviceSlotField;
    
    private string typeField;
    
    public SendDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SendDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ShaperDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private ShaperDevicePreset runTimePresetAField;
    
    private ShaperDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter thresholdField;
    
    private FilterDeviceParameter ratioField;
    
    private FilterDeviceParameter attackField;
    
    private FilterDeviceParameter releaseField;
    
    private FilterDeviceParameter gainField;
    
    private string typeField;
    
    public ShaperDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "ShaperDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public ShaperDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public ShaperDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Ratio {
        get {
            return this.ratioField;
        }
        set {
            this.ratioField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Gain {
        get {
            return this.gainField;
        }
        set {
            this.gainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ShaperDevicePreset {
    
    private ShaperDevice deviceSlotField;
    
    private string typeField;
    
    public ShaperDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public ShaperDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SideChainDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SideChainDevicePreset runTimePresetAField;
    
    private SideChainDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private bool muteSourceField;
    
    private FilterDeviceParameter sendAmountField;
    
    private FilterDeviceParameter sendPanField;
    
    private FilterDeviceParameter destChainIndexField;
    
    private FilterDeviceParameter destEffectIndexField;
    
    private string typeField;
    
    public SideChainDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.muteSourceField = false;
        this.typeField = "SideChainDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SideChainDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SideChainDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool MuteSource {
        get {
            return this.muteSourceField;
        }
        set {
            this.muteSourceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SendAmount {
        get {
            return this.sendAmountField;
        }
        set {
            this.sendAmountField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SendPan {
        get {
            return this.sendPanField;
        }
        set {
            this.sendPanField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestChainIndex {
        get {
            return this.destChainIndexField;
        }
        set {
            this.destChainIndexField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffectIndex {
        get {
            return this.destEffectIndexField;
        }
        set {
            this.destEffectIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SideChainDevicePreset {
    
    private SideChainDevice deviceSlotField;
    
    private string typeField;
    
    public SideChainDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SideChainDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SignalFollowerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SignalFollowerDevicePreset runTimePresetAField;
    
    private SignalFollowerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private FilterDeviceParameter destMinField;
    
    private FilterDeviceParameter destMaxField;
    
    private FilterDeviceParameter destOffsetField;
    
    private FilterDeviceParameter attackField;
    
    private FilterDeviceParameter releaseField;
    
    private FilterDeviceParameter sensitivityField;
    
    private SignalFollowerDeviceDestScaling destScalingField;
    
    private FilterDeviceParameter lpFreqField;
    
    private FilterDeviceParameter hpFreqField;
    
    private SignalFollowerDeviceInputMode inputModeField;
    
    private float lookAheadField;
    
    private bool listenToInputField;
    
    private string typeField;
    
    public SignalFollowerDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.destScalingField = SignalFollowerDeviceDestScaling.Linear;
        this.inputModeField = SignalFollowerDeviceInputMode.LR;
        this.lookAheadField = ((float)(0F));
        this.listenToInputField = false;
        this.typeField = "SignalFollowerDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SignalFollowerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SignalFollowerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMin {
        get {
            return this.destMinField;
        }
        set {
            this.destMinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMax {
        get {
            return this.destMaxField;
        }
        set {
            this.destMaxField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestOffset {
        get {
            return this.destOffsetField;
        }
        set {
            this.destOffsetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Sensitivity {
        get {
            return this.sensitivityField;
        }
        set {
            this.sensitivityField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SignalFollowerDeviceDestScaling.Linear)]
    public SignalFollowerDeviceDestScaling DestScaling {
        get {
            return this.destScalingField;
        }
        set {
            this.destScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LpFreq {
        get {
            return this.lpFreqField;
        }
        set {
            this.lpFreqField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter HpFreq {
        get {
            return this.hpFreqField;
        }
        set {
            this.hpFreqField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SignalFollowerDeviceInputMode.LR)]
    public SignalFollowerDeviceInputMode InputMode {
        get {
            return this.inputModeField;
        }
        set {
            this.inputModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float LookAhead {
        get {
            return this.lookAheadField;
        }
        set {
            this.lookAheadField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ListenToInput {
        get {
            return this.listenToInputField;
        }
        set {
            this.listenToInputField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SignalFollowerDevicePreset {
    
    private SignalFollowerDevice deviceSlotField;
    
    private string typeField;
    
    public SignalFollowerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SignalFollowerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SignalFollowerDeviceDestScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SignalFollowerDeviceInputMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StereoExpanderDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private StereoExpanderDevicePreset runTimePresetAField;
    
    private StereoExpanderDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private StereoExpanderDeviceMonoMixMode monoMixModeField;
    
    private FilterDeviceParameter stereoWidthField;
    
    private FilterDeviceParameter surroundWidthField;
    
    private string typeField;
    
    public StereoExpanderDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.monoMixModeField = StereoExpanderDeviceMonoMixMode.LR;
        this.typeField = "StereoExpanderDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public StereoExpanderDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public StereoExpanderDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(StereoExpanderDeviceMonoMixMode.LR)]
    public StereoExpanderDeviceMonoMixMode MonoMixMode {
        get {
            return this.monoMixModeField;
        }
        set {
            this.monoMixModeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter StereoWidth {
        get {
            return this.stereoWidthField;
        }
        set {
            this.stereoWidthField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter SurroundWidth {
        get {
            return this.surroundWidthField;
        }
        set {
            this.surroundWidthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StereoExpanderDevicePreset {
    
    private StereoExpanderDevice deviceSlotField;
    
    private string typeField;
    
    public StereoExpanderDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public StereoExpanderDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum StereoExpanderDeviceMonoMixMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StutterDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private StutterDevicePreset runTimePresetAField;
    
    private StutterDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private StutterDivisorDeviceParameter divisorField;
    
    private StutterBufferDeviceParameter bufferField;
    
    private FilterDeviceParameter wetField;
    
    private FilterDeviceParameter dryField;
    
    private FilterDeviceParameter modeField;
    
    private string typeField;
    
    public StutterDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "StutterDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public StutterDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public StutterDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public StutterDivisorDeviceParameter Divisor {
        get {
            return this.divisorField;
        }
        set {
            this.divisorField = value;
        }
    }
    
    /// <remarks/>
    public StutterBufferDeviceParameter Buffer {
        get {
            return this.bufferField;
        }
        set {
            this.bufferField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Wet {
        get {
            return this.wetField;
        }
        set {
            this.wetField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Dry {
        get {
            return this.dryField;
        }
        set {
            this.dryField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Mode {
        get {
            return this.modeField;
        }
        set {
            this.modeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StutterDevicePreset {
    
    private StutterDevice deviceSlotField;
    
    private string typeField;
    
    public StutterDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public StutterDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StutterDivisorDeviceParameter {
    
    private float valueField;
    
    private StutterDivisorDeviceParameterVisualization visualizationField;
    
    private StutterDivisorDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public StutterDivisorDeviceParameter() {
        this.valueField = ((float)(1F));
        this.visualizationField = StutterDivisorDeviceParameterVisualization.MixerandDevice;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(StutterDivisorDeviceParameterVisualization.MixerandDevice)]
    public StutterDivisorDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public StutterDivisorDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum StutterDivisorDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class StutterDivisorDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class StutterBufferDeviceParameter {
    
    private float valueField;
    
    private StutterBufferDeviceParameterVisualization visualizationField;
    
    private StutterBufferDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public StutterBufferDeviceParameter() {
        this.valueField = ((float)(0.5F));
        this.visualizationField = StutterBufferDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(StutterBufferDeviceParameterVisualization.Deviceonly)]
    public StutterBufferDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public StutterBufferDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum StutterBufferDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class StutterBufferDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class VelocityDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private VelocityDevicePreset runTimePresetAField;
    
    private VelocityDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private int srcInstrumentField;
    
    private VelocityDeviceDestScaling destScalingField;
    
    private int velocityMinField;
    
    private int velocityMaxField;
    
    private FilterDeviceParameter destTrackField;
    
    private FilterDeviceParameter destEffectField;
    
    private FilterDeviceParameter destParameterField;
    
    private FilterDeviceParameter destMinField;
    
    private FilterDeviceParameter destMaxField;
    
    private string typeField;
    
    public VelocityDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.srcInstrumentField = -1;
        this.destScalingField = VelocityDeviceDestScaling.Linear;
        this.velocityMinField = 0;
        this.velocityMaxField = 127;
        this.typeField = "VelocityDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public VelocityDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public VelocityDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SrcInstrument {
        get {
            return this.srcInstrumentField;
        }
        set {
            this.srcInstrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(VelocityDeviceDestScaling.Linear)]
    public VelocityDeviceDestScaling DestScaling {
        get {
            return this.destScalingField;
        }
        set {
            this.destScalingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int VelocityMin {
        get {
            return this.velocityMinField;
        }
        set {
            this.velocityMinField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(127)]
    public int VelocityMax {
        get {
            return this.velocityMaxField;
        }
        set {
            this.velocityMaxField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestTrack {
        get {
            return this.destTrackField;
        }
        set {
            this.destTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestEffect {
        get {
            return this.destEffectField;
        }
        set {
            this.destEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestParameter {
        get {
            return this.destParameterField;
        }
        set {
            this.destParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMin {
        get {
            return this.destMinField;
        }
        set {
            this.destMinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter DestMax {
        get {
            return this.destMaxField;
        }
        set {
            this.destMaxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class VelocityDevicePreset {
    
    private VelocityDevice deviceSlotField;
    
    private string typeField;
    
    public VelocityDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public VelocityDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum VelocityDeviceDestScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class XYPadDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private XYPadDevicePreset runTimePresetAField;
    
    private XYPadDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private bool slidersVisibleField;
    
    private bool resetOnReleaseField;
    
    private float resetSnapBackValueXField;
    
    private float resetSnapBackValueYField;
    
    private FilterDeviceParameter valueXField;
    
    private FilterDeviceParameter valueYField;
    
    private FilterDeviceParameter out1DestTrackField;
    
    private FilterDeviceParameter out1DestEffectField;
    
    private FilterDeviceParameter out1DestParameterField;
    
    private FilterDeviceParameter out1MinField;
    
    private FilterDeviceParameter out1MaxField;
    
    private XYPadDeviceOut1Scaling out1ScalingField;
    
    private FilterDeviceParameter out2DestTrackField;
    
    private FilterDeviceParameter out2DestEffectField;
    
    private FilterDeviceParameter out2DestParameterField;
    
    private FilterDeviceParameter out2MinField;
    
    private FilterDeviceParameter out2MaxField;
    
    private XYPadDeviceOut2Scaling out2ScalingField;
    
    private string typeField;
    
    public XYPadDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.slidersVisibleField = true;
        this.resetOnReleaseField = false;
        this.resetSnapBackValueXField = ((float)(0.5F));
        this.resetSnapBackValueYField = ((float)(0.5F));
        this.out1ScalingField = XYPadDeviceOut1Scaling.Linear;
        this.out2ScalingField = XYPadDeviceOut2Scaling.Linear;
        this.typeField = "XYPadDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public XYPadDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public XYPadDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SlidersVisible {
        get {
            return this.slidersVisibleField;
        }
        set {
            this.slidersVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ResetOnRelease {
        get {
            return this.resetOnReleaseField;
        }
        set {
            this.resetOnReleaseField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
    public float ResetSnapBackValueX {
        get {
            return this.resetSnapBackValueXField;
        }
        set {
            this.resetSnapBackValueXField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
    public float ResetSnapBackValueY {
        get {
            return this.resetSnapBackValueYField;
        }
        set {
            this.resetSnapBackValueYField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ValueX {
        get {
            return this.valueXField;
        }
        set {
            this.valueXField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter ValueY {
        get {
            return this.valueYField;
        }
        set {
            this.valueYField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestTrack {
        get {
            return this.out1DestTrackField;
        }
        set {
            this.out1DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestEffect {
        get {
            return this.out1DestEffectField;
        }
        set {
            this.out1DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1DestParameter {
        get {
            return this.out1DestParameterField;
        }
        set {
            this.out1DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1Min {
        get {
            return this.out1MinField;
        }
        set {
            this.out1MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out1Max {
        get {
            return this.out1MaxField;
        }
        set {
            this.out1MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(XYPadDeviceOut1Scaling.Linear)]
    public XYPadDeviceOut1Scaling Out1Scaling {
        get {
            return this.out1ScalingField;
        }
        set {
            this.out1ScalingField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestTrack {
        get {
            return this.out2DestTrackField;
        }
        set {
            this.out2DestTrackField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestEffect {
        get {
            return this.out2DestEffectField;
        }
        set {
            this.out2DestEffectField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2DestParameter {
        get {
            return this.out2DestParameterField;
        }
        set {
            this.out2DestParameterField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2Min {
        get {
            return this.out2MinField;
        }
        set {
            this.out2MinField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Out2Max {
        get {
            return this.out2MaxField;
        }
        set {
            this.out2MaxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(XYPadDeviceOut2Scaling.Linear)]
    public XYPadDeviceOut2Scaling Out2Scaling {
        get {
            return this.out2ScalingField;
        }
        set {
            this.out2ScalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class XYPadDevicePreset {
    
    private XYPadDevice deviceSlotField;
    
    private string typeField;
    
    public XYPadDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public XYPadDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum XYPadDeviceOut1Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum XYPadDeviceOut2Scaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GroupTrackMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private GroupTrackMixerDevicePreset runTimePresetAField;
    
    private GroupTrackMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter panningField;
    
    private TrackVolumeDeviceParameter volumeField;
    
    private FilterDeviceParameter surroundField;
    
    private FilterDeviceParameter postPanningField;
    
    private TrackVolumeDeviceParameter postVolumeField;
    
    private bool smoothParameterChangesField;
    
    private string typeField;
    
    public GroupTrackMixerDevice() {
        this.customDeviceNameField = "Mixer";
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.smoothParameterChangesField = true;
        this.typeField = "GroupTrackMixerDevice";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mixer")]
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public GroupTrackMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public GroupTrackMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Surround {
        get {
            return this.surroundField;
        }
        set {
            this.surroundField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostPanning {
        get {
            return this.postPanningField;
        }
        set {
            this.postPanningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter PostVolume {
        get {
            return this.postVolumeField;
        }
        set {
            this.postVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GroupTrackMixerDevicePreset {
    
    private GroupTrackMixerDevice deviceSlotField;
    
    private string typeField;
    
    public GroupTrackMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public GroupTrackMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TrackVolumeDeviceParameter {
    
    private float valueField;
    
    private TrackVolumeDeviceParameterVisualization visualizationField;
    
    private TrackVolumeDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public TrackVolumeDeviceParameter() {
        this.valueField = ((float)(1F));
        this.visualizationField = TrackVolumeDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(TrackVolumeDeviceParameterVisualization.Deviceonly)]
    public TrackVolumeDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum TrackVolumeDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class TrackVolumeDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MasterTrackMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private MasterTrackMixerDevicePreset runTimePresetAField;
    
    private MasterTrackMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter panningField;
    
    private TrackVolumeDeviceParameter volumeField;
    
    private FilterDeviceParameter surroundField;
    
    private FilterDeviceParameter postPanningField;
    
    private TrackVolumeDeviceParameter postVolumeField;
    
    private bool smoothParameterChangesField;
    
    private bool autoDcCorrectionField;
    
    private bool softClippingField;
    
    private bool autoGainField;
    
    private FilterDeviceParameter bpmAutomatorField;
    
    private FilterDeviceParameter lpbAutomatorField;
    
    private FilterDeviceParameter tplAutomatorField;
    
    private string typeField;
    
    public MasterTrackMixerDevice() {
        this.customDeviceNameField = "Mixer & Transport";
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.smoothParameterChangesField = true;
        this.autoDcCorrectionField = false;
        this.softClippingField = false;
        this.autoGainField = false;
        this.typeField = "MasterTrackMixerDevice";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mixer & Transport")]
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public MasterTrackMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public MasterTrackMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Surround {
        get {
            return this.surroundField;
        }
        set {
            this.surroundField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostPanning {
        get {
            return this.postPanningField;
        }
        set {
            this.postPanningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter PostVolume {
        get {
            return this.postVolumeField;
        }
        set {
            this.postVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool AutoDcCorrection {
        get {
            return this.autoDcCorrectionField;
        }
        set {
            this.autoDcCorrectionField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SoftClipping {
        get {
            return this.softClippingField;
        }
        set {
            this.softClippingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool AutoGain {
        get {
            return this.autoGainField;
        }
        set {
            this.autoGainField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter BpmAutomator {
        get {
            return this.bpmAutomatorField;
        }
        set {
            this.bpmAutomatorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter LpbAutomator {
        get {
            return this.lpbAutomatorField;
        }
        set {
            this.lpbAutomatorField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter TplAutomator {
        get {
            return this.tplAutomatorField;
        }
        set {
            this.tplAutomatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MasterTrackMixerDevicePreset {
    
    private MasterTrackMixerDevice deviceSlotField;
    
    private string typeField;
    
    public MasterTrackMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public MasterTrackMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendTrackMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SendTrackMixerDevicePreset runTimePresetAField;
    
    private SendTrackMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter panningField;
    
    private TrackVolumeDeviceParameter volumeField;
    
    private FilterDeviceParameter surroundField;
    
    private FilterDeviceParameter postPanningField;
    
    private TrackVolumeDeviceParameter postVolumeField;
    
    private bool smoothParameterChangesField;
    
    private string typeField;
    
    public SendTrackMixerDevice() {
        this.customDeviceNameField = "Mixer";
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.smoothParameterChangesField = true;
        this.typeField = "SendTrackMixerDevice";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mixer")]
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SendTrackMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SendTrackMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Surround {
        get {
            return this.surroundField;
        }
        set {
            this.surroundField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostPanning {
        get {
            return this.postPanningField;
        }
        set {
            this.postPanningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter PostVolume {
        get {
            return this.postVolumeField;
        }
        set {
            this.postVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendTrackMixerDevicePreset {
    
    private SendTrackMixerDevice deviceSlotField;
    
    private string typeField;
    
    public SendTrackMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SendTrackMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TrackMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private TrackMixerDevicePreset runTimePresetAField;
    
    private TrackMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter panningField;
    
    private TrackVolumeDeviceParameter volumeField;
    
    private FilterDeviceParameter surroundField;
    
    private FilterDeviceParameter postPanningField;
    
    private TrackVolumeDeviceParameter postVolumeField;
    
    private bool smoothParameterChangesField;
    
    private string typeField;
    
    public TrackMixerDevice() {
        this.customDeviceNameField = "Mixer";
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.smoothParameterChangesField = true;
        this.typeField = "TrackMixerDevice";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mixer")]
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public TrackMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public TrackMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Surround {
        get {
            return this.surroundField;
        }
        set {
            this.surroundField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostPanning {
        get {
            return this.postPanningField;
        }
        set {
            this.postPanningField = value;
        }
    }
    
    /// <remarks/>
    public TrackVolumeDeviceParameter PostVolume {
        get {
            return this.postVolumeField;
        }
        set {
            this.postVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SmoothParameterChanges {
        get {
            return this.smoothParameterChangesField;
        }
        set {
            this.smoothParameterChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TrackMixerDevicePreset {
    
    private TrackMixerDevice deviceSlotField;
    
    private string typeField;
    
    public TrackMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public TrackMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SequencerMasterTrack {
    
    private string nameField;
    
    private string colorField;
    
    private float colorBlendField;
    
    private SequencerMasterTrackState stateField;
    
    private bool soloedField;
    
    private SequencerMasterTrackNoteColumnState[] noteColumnStatesField;
    
    private string[] noteColumnNamesField;
    
    private int numberOfVisibleNoteColumnsField;
    
    private int numberOfVisibleEffectColumnsField;
    
    private bool volumeColumnIsVisibleField;
    
    private bool panningColumnIsVisibleField;
    
    private bool delayColumnIsVisibleField;
    
    private bool sampleEffectColumnIsVisibleField;
    
    private int trackRoutingField;
    
    private int groupNestingLevelField;
    
    private float trackDelayField;
    
    private bool collapsedField;
    
    private bool visibleField;
    
    private TrackFilterDeviceChain filterDevicesField;
    
    private string typeField;
    
    public SequencerMasterTrack() {
        this.nameField = "Mst";
        this.colorField = "220,220,220";
        this.colorBlendField = ((float)(0F));
        this.stateField = SequencerMasterTrackState.Active;
        this.soloedField = false;
        this.numberOfVisibleNoteColumnsField = 0;
        this.numberOfVisibleEffectColumnsField = 1;
        this.volumeColumnIsVisibleField = false;
        this.panningColumnIsVisibleField = false;
        this.delayColumnIsVisibleField = false;
        this.sampleEffectColumnIsVisibleField = false;
        this.trackRoutingField = 0;
        this.groupNestingLevelField = 0;
        this.trackDelayField = ((float)(0F));
        this.collapsedField = false;
        this.visibleField = true;
        this.typeField = "SequencerMasterTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mst")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("220,220,220")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float ColorBlend {
        get {
            return this.colorBlendField;
        }
        set {
            this.colorBlendField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SequencerMasterTrackState.Active)]
    public SequencerMasterTrackState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Soloed {
        get {
            return this.soloedField;
        }
        set {
            this.soloedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", IsNullable=false)]
    public SequencerMasterTrackNoteColumnState[] NoteColumnStates {
        get {
            return this.noteColumnStatesField;
        }
        set {
            this.noteColumnStatesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnName", IsNullable=false)]
    public string[] NoteColumnNames {
        get {
            return this.noteColumnNamesField;
        }
        set {
            this.noteColumnNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NumberOfVisibleNoteColumns {
        get {
            return this.numberOfVisibleNoteColumnsField;
        }
        set {
            this.numberOfVisibleNoteColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int NumberOfVisibleEffectColumns {
        get {
            return this.numberOfVisibleEffectColumnsField;
        }
        set {
            this.numberOfVisibleEffectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool VolumeColumnIsVisible {
        get {
            return this.volumeColumnIsVisibleField;
        }
        set {
            this.volumeColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PanningColumnIsVisible {
        get {
            return this.panningColumnIsVisibleField;
        }
        set {
            this.panningColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool DelayColumnIsVisible {
        get {
            return this.delayColumnIsVisibleField;
        }
        set {
            this.delayColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SampleEffectColumnIsVisible {
        get {
            return this.sampleEffectColumnIsVisibleField;
        }
        set {
            this.sampleEffectColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int TrackRouting {
        get {
            return this.trackRoutingField;
        }
        set {
            this.trackRoutingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int GroupNestingLevel {
        get {
            return this.groupNestingLevelField;
        }
        set {
            this.groupNestingLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float TrackDelay {
        get {
            return this.trackDelayField;
        }
        set {
            this.trackDelayField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Collapsed {
        get {
            return this.collapsedField;
        }
        set {
            this.collapsedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
    
    /// <remarks/>
    public TrackFilterDeviceChain FilterDevices {
        get {
            return this.filterDevicesField;
        }
        set {
            this.filterDevicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerMasterTrackState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerMasterTrackNoteColumnState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SequencerGroupTrack {
    
    private string nameField;
    
    private string colorField;
    
    private float colorBlendField;
    
    private SequencerGroupTrackState stateField;
    
    private bool soloedField;
    
    private SequencerGroupTrackNoteColumnState[] noteColumnStatesField;
    
    private string[] noteColumnNamesField;
    
    private int numberOfVisibleNoteColumnsField;
    
    private int numberOfVisibleEffectColumnsField;
    
    private bool volumeColumnIsVisibleField;
    
    private bool panningColumnIsVisibleField;
    
    private bool delayColumnIsVisibleField;
    
    private bool sampleEffectColumnIsVisibleField;
    
    private int trackRoutingField;
    
    private int groupNestingLevelField;
    
    private float trackDelayField;
    
    private bool collapsedField;
    
    private bool visibleField;
    
    private TrackFilterDeviceChain filterDevicesField;
    
    private string typeField;
    
    public SequencerGroupTrack() {
        this.nameField = "Group 02";
        this.colorField = "166,80,41";
        this.colorBlendField = ((float)(0F));
        this.stateField = SequencerGroupTrackState.Active;
        this.soloedField = false;
        this.numberOfVisibleNoteColumnsField = 0;
        this.numberOfVisibleEffectColumnsField = 1;
        this.volumeColumnIsVisibleField = false;
        this.panningColumnIsVisibleField = false;
        this.delayColumnIsVisibleField = false;
        this.sampleEffectColumnIsVisibleField = false;
        this.trackRoutingField = 0;
        this.groupNestingLevelField = 0;
        this.trackDelayField = ((float)(0F));
        this.collapsedField = false;
        this.visibleField = true;
        this.typeField = "SequencerGroupTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Group 02")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("166,80,41")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float ColorBlend {
        get {
            return this.colorBlendField;
        }
        set {
            this.colorBlendField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SequencerGroupTrackState.Active)]
    public SequencerGroupTrackState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Soloed {
        get {
            return this.soloedField;
        }
        set {
            this.soloedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", IsNullable=false)]
    public SequencerGroupTrackNoteColumnState[] NoteColumnStates {
        get {
            return this.noteColumnStatesField;
        }
        set {
            this.noteColumnStatesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnName", IsNullable=false)]
    public string[] NoteColumnNames {
        get {
            return this.noteColumnNamesField;
        }
        set {
            this.noteColumnNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NumberOfVisibleNoteColumns {
        get {
            return this.numberOfVisibleNoteColumnsField;
        }
        set {
            this.numberOfVisibleNoteColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int NumberOfVisibleEffectColumns {
        get {
            return this.numberOfVisibleEffectColumnsField;
        }
        set {
            this.numberOfVisibleEffectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool VolumeColumnIsVisible {
        get {
            return this.volumeColumnIsVisibleField;
        }
        set {
            this.volumeColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PanningColumnIsVisible {
        get {
            return this.panningColumnIsVisibleField;
        }
        set {
            this.panningColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool DelayColumnIsVisible {
        get {
            return this.delayColumnIsVisibleField;
        }
        set {
            this.delayColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SampleEffectColumnIsVisible {
        get {
            return this.sampleEffectColumnIsVisibleField;
        }
        set {
            this.sampleEffectColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int TrackRouting {
        get {
            return this.trackRoutingField;
        }
        set {
            this.trackRoutingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int GroupNestingLevel {
        get {
            return this.groupNestingLevelField;
        }
        set {
            this.groupNestingLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float TrackDelay {
        get {
            return this.trackDelayField;
        }
        set {
            this.trackDelayField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Collapsed {
        get {
            return this.collapsedField;
        }
        set {
            this.collapsedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
    
    /// <remarks/>
    public TrackFilterDeviceChain FilterDevices {
        get {
            return this.filterDevicesField;
        }
        set {
            this.filterDevicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerGroupTrackState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerGroupTrackNoteColumnState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SequencerTrack {
    
    private string nameField;
    
    private string colorField;
    
    private float colorBlendField;
    
    private SequencerTrackState stateField;
    
    private bool soloedField;
    
    private SequencerTrackNoteColumnState[] noteColumnStatesField;
    
    private string[] noteColumnNamesField;
    
    private int numberOfVisibleNoteColumnsField;
    
    private int numberOfVisibleEffectColumnsField;
    
    private bool volumeColumnIsVisibleField;
    
    private bool panningColumnIsVisibleField;
    
    private bool delayColumnIsVisibleField;
    
    private bool sampleEffectColumnIsVisibleField;
    
    private int trackRoutingField;
    
    private int groupNestingLevelField;
    
    private float trackDelayField;
    
    private bool collapsedField;
    
    private bool visibleField;
    
    private TrackFilterDeviceChain filterDevicesField;
    
    private string typeField;
    
    public SequencerTrack() {
        this.nameField = "Track 01";
        this.colorField = "41,166,153";
        this.colorBlendField = ((float)(0F));
        this.stateField = SequencerTrackState.Active;
        this.soloedField = false;
        this.numberOfVisibleNoteColumnsField = 1;
        this.numberOfVisibleEffectColumnsField = 1;
        this.volumeColumnIsVisibleField = true;
        this.panningColumnIsVisibleField = false;
        this.delayColumnIsVisibleField = false;
        this.sampleEffectColumnIsVisibleField = false;
        this.trackRoutingField = -1;
        this.groupNestingLevelField = 1;
        this.trackDelayField = ((float)(0F));
        this.collapsedField = false;
        this.visibleField = true;
        this.typeField = "SequencerTrack";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Track 01")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("41,166,153")]
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float ColorBlend {
        get {
            return this.colorBlendField;
        }
        set {
            this.colorBlendField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SequencerTrackState.Active)]
    public SequencerTrackState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Soloed {
        get {
            return this.soloedField;
        }
        set {
            this.soloedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", IsNullable=false)]
    public SequencerTrackNoteColumnState[] NoteColumnStates {
        get {
            return this.noteColumnStatesField;
        }
        set {
            this.noteColumnStatesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnName", IsNullable=false)]
    public string[] NoteColumnNames {
        get {
            return this.noteColumnNamesField;
        }
        set {
            this.noteColumnNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int NumberOfVisibleNoteColumns {
        get {
            return this.numberOfVisibleNoteColumnsField;
        }
        set {
            this.numberOfVisibleNoteColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int NumberOfVisibleEffectColumns {
        get {
            return this.numberOfVisibleEffectColumnsField;
        }
        set {
            this.numberOfVisibleEffectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool VolumeColumnIsVisible {
        get {
            return this.volumeColumnIsVisibleField;
        }
        set {
            this.volumeColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PanningColumnIsVisible {
        get {
            return this.panningColumnIsVisibleField;
        }
        set {
            this.panningColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool DelayColumnIsVisible {
        get {
            return this.delayColumnIsVisibleField;
        }
        set {
            this.delayColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SampleEffectColumnIsVisible {
        get {
            return this.sampleEffectColumnIsVisibleField;
        }
        set {
            this.sampleEffectColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int TrackRouting {
        get {
            return this.trackRoutingField;
        }
        set {
            this.trackRoutingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int GroupNestingLevel {
        get {
            return this.groupNestingLevelField;
        }
        set {
            this.groupNestingLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float TrackDelay {
        get {
            return this.trackDelayField;
        }
        set {
            this.trackDelayField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Collapsed {
        get {
            return this.collapsedField;
        }
        set {
            this.collapsedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
    
    /// <remarks/>
    public TrackFilterDeviceChain FilterDevices {
        get {
            return this.filterDevicesField;
        }
        set {
            this.filterDevicesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerTrackState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SequencerTrackNoteColumnState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiInputRoutingTable {
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentMidiGenerator {
    
    private sbyte channelField;
    
    private string deviceNameField;
    
    private InstrumentMidiGeneratorInstrumentType instrumentTypeField;
    
    private int delayField;
    
    private int programField;
    
    private int bankField;
    
    private InstrumentMidiGeneratorBankOrder bankOrderField;
    
    private int transposeField;
    
    private int lengthField;
    
    private string typeField;
    
    public InstrumentMidiGenerator() {
        this.channelField = ((sbyte)(0));
        this.instrumentTypeField = InstrumentMidiGeneratorInstrumentType.extMIDI;
        this.delayField = 0;
        this.programField = -1;
        this.bankField = -1;
        this.bankOrderField = InstrumentMidiGeneratorBankOrder.MSBLSB;
        this.transposeField = 0;
        this.lengthField = 8000;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
    public sbyte Channel {
        get {
            return this.channelField;
        }
        set {
            this.channelField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceName {
        get {
            return this.deviceNameField;
        }
        set {
            this.deviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentMidiGeneratorInstrumentType.extMIDI)]
    public InstrumentMidiGeneratorInstrumentType InstrumentType {
        get {
            return this.instrumentTypeField;
        }
        set {
            this.instrumentTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int Program {
        get {
            return this.programField;
        }
        set {
            this.programField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int Bank {
        get {
            return this.bankField;
        }
        set {
            this.bankField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentMidiGeneratorBankOrder.MSBLSB)]
    public InstrumentMidiGeneratorBankOrder BankOrder {
        get {
            return this.bankOrderField;
        }
        set {
            this.bankOrderField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(8000)]
    public int Length {
        get {
            return this.lengthField;
        }
        set {
            this.lengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentMidiGeneratorInstrumentType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("ext. MIDI")]
    extMIDI,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("LineIn Ret")]
    LineInRet,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("int. MIDI")]
    intMIDI,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentMidiGeneratorBankOrder {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("MSB, LSB")]
    MSBLSB,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("LSB, MSB")]
    LSBMSB,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPluginRouting {
    
    private bool enabledField;
    
    private string nameField;
    
    private InstrumentPluginRoutingMixMode mixModeField;
    
    private bool autoAssignField;
    
    private int assignedTrackField;
    
    private string typeField;
    
    public InstrumentPluginRouting() {
        this.enabledField = true;
        this.nameField = "Bus #01";
        this.mixModeField = InstrumentPluginRoutingMixMode.LR;
        this.autoAssignField = true;
        this.assignedTrackField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bus #01")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentPluginRoutingMixMode.LR)]
    public InstrumentPluginRoutingMixMode MixMode {
        get {
            return this.mixModeField;
        }
        set {
            this.mixModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool AutoAssign {
        get {
            return this.autoAssignField;
        }
        set {
            this.autoAssignField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AssignedTrack {
        get {
            return this.assignedTrackField;
        }
        set {
            this.assignedTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentPluginRoutingMixMode {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPluginGenerator {
    
    private sbyte channelField;
    
    private int transposeField;
    
    private float volumeField;
    
    private InstrumentPluginGeneratorOutputRoutings outputRoutingsField;
    
    private int midiOutputRoutingIndexField;
    
    private bool autoSuspendField;
    
    private int aliasInstrumentIndexField;
    
    private string aliasFxIndicesField;
    
    private AudioPluginDevice pluginDeviceField;
    
    private string typeField;
    
    public InstrumentPluginGenerator() {
        this.channelField = ((sbyte)(0));
        this.transposeField = 0;
        this.volumeField = ((float)(1F));
        this.midiOutputRoutingIndexField = -1;
        this.autoSuspendField = true;
        this.aliasInstrumentIndexField = -1;
        this.aliasFxIndicesField = "-1,-1";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
    public sbyte Channel {
        get {
            return this.channelField;
        }
        set {
            this.channelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPluginGeneratorOutputRoutings OutputRoutings {
        get {
            return this.outputRoutingsField;
        }
        set {
            this.outputRoutingsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int MidiOutputRoutingIndex {
        get {
            return this.midiOutputRoutingIndexField;
        }
        set {
            this.midiOutputRoutingIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool AutoSuspend {
        get {
            return this.autoSuspendField;
        }
        set {
            this.autoSuspendField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AliasInstrumentIndex {
        get {
            return this.aliasInstrumentIndexField;
        }
        set {
            this.aliasInstrumentIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("-1,-1")]
    public string AliasFxIndices {
        get {
            return this.aliasFxIndicesField;
        }
        set {
            this.aliasFxIndicesField = value;
        }
    }
    
    /// <remarks/>
    public AudioPluginDevice PluginDevice {
        get {
            return this.pluginDeviceField;
        }
        set {
            this.pluginDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentPluginGeneratorOutputRoutings {
    
    private InstrumentPluginRouting[] outputRoutingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("OutputRouting")]
    public InstrumentPluginRouting[] OutputRouting {
        get {
            return this.outputRoutingField;
        }
        set {
            this.outputRoutingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleSplitMap {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private string typeField;
    
    public SampleSplitMap() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleMixerDevicePreset {
    
    private SampleMixerDevice deviceSlotField;
    
    private string typeField;
    
    public SampleMixerDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleMixerDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleMixerDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleMixerDevicePreset runTimePresetAField;
    
    private SampleMixerDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter panningField;
    
    private FilterDeviceParameter volumeField;
    
    private FilterDeviceParameter postPanningField;
    
    private FilterDeviceParameter postVolumeField;
    
    private string typeField;
    
    public SampleMixerDevice() {
        this.customDeviceNameField = "Mixer";
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.typeField = "SampleMixerDevice";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Mixer")]
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleMixerDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleMixerDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostPanning {
        get {
            return this.postPanningField;
        }
        set {
            this.postPanningField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter PostVolume {
        get {
            return this.postVolumeField;
        }
        set {
            this.postVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleFilterDeviceChain {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleFilterDeviceChainDevices devicesField;
    
    private string nameField;
    
    private int routingIndexField;
    
    private string typeField;
    
    public SampleFilterDeviceChain() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.routingIndexField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleFilterDeviceChainDevices Devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int RoutingIndex {
        get {
            return this.routingIndexField;
        }
        set {
            this.routingIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class SampleFilterDeviceChainDevices {
    
    private AnalogFilterDevice[] analogFilterDeviceField;
    
    private AudioPluginDevice[] audioPluginDeviceField;
    
    private BusCompressorDevice[] busCompressorDeviceField;
    
    private CabinetSimulatorDevice[] cabinetSimulatorDeviceField;
    
    private Chorus2Device[] chorus2DeviceField;
    
    private ChorusDevice[] chorusDeviceField;
    
    private Comb2Device[] comb2DeviceField;
    
    private CombDevice[] combDeviceField;
    
    private CompressorDevice[] compressorDeviceField;
    
    private ConvolverDevice[] convolverDeviceField;
    
    private CrossoverDevice[] crossoverDeviceField;
    
    private DcOffsetDevice[] dcOffsetDeviceField;
    
    private DelayDevice[] delayDeviceField;
    
    private DigitalFilterDevice[] digitalFilterDeviceField;
    
    private Distortion2Device[] distortion2DeviceField;
    
    private DistortionDevice[] distortionDeviceField;
    
    private DooferDevice[] dooferDeviceField;
    
    private Eq10Device[] eq10DeviceField;
    
    private Eq5Device[] eq5DeviceField;
    
    private ExciterDevice[] exciterDeviceField;
    
    private Filter1Device[] filter1DeviceField;
    
    private Filter2Device[] filter2DeviceField;
    
    private Filter3Device[] filter3DeviceField;
    
    private FilterDistortionDevice[] filterDistortionDeviceField;
    
    private Flanger2Device[] flanger2DeviceField;
    
    private FlangerDevice[] flangerDeviceField;
    
    private FormulaMetaDevice[] formulaMetaDeviceField;
    
    private GainerDevice[] gainerDeviceField;
    
    private Gate2Device[] gate2DeviceField;
    
    private GateDevice[] gateDeviceField;
    
    private HydraDevice[] hydraDeviceField;
    
    private InstrumentAutomationDevice[] instrumentAutomationDeviceField;
    
    private InstrumentMacroDevice[] instrumentMacroDeviceField;
    
    private KeyTrackingDevice[] keyTrackingDeviceField;
    
    private LfoDevice[] lfoDeviceField;
    
    private LineInDevice[] lineInDeviceField;
    
    private Lofi2Device[] lofi2DeviceField;
    
    private LofiDevice[] lofiDeviceField;
    
    private MaximizerDevice[] maximizerDeviceField;
    
    private MetaMixerDevice[] metaMixerDeviceField;
    
    private MidiCCDevice[] midiCCDeviceField;
    
    private MidiControlDevice[] midiControlDeviceField;
    
    private MixerEqDevice[] mixerEqDeviceField;
    
    private MultitapDevice[] multitapDeviceField;
    
    private PdcTestDelayDevice[] pdcTestDelayDeviceField;
    
    private Phaser2Device[] phaser2DeviceField;
    
    private PhaserDevice[] phaserDeviceField;
    
    private RepeaterDevice[] repeaterDeviceField;
    
    private Reverb2Device[] reverb2DeviceField;
    
    private Reverb3Device[] reverb3DeviceField;
    
    private ReverbDevice[] reverbDeviceField;
    
    private RewireInDevice[] rewireInDeviceField;
    
    private RingMod2Device[] ringMod2DeviceField;
    
    private RingModDevice[] ringModDeviceField;
    
    private SampleMixerDevice[] sampleMixerDeviceField;
    
    private SendDevice[] sendDeviceField;
    
    private ShaperDevice[] shaperDeviceField;
    
    private SideChainDevice[] sideChainDeviceField;
    
    private SignalFollowerDevice[] signalFollowerDeviceField;
    
    private StereoExpanderDevice[] stereoExpanderDeviceField;
    
    private StutterDevice[] stutterDeviceField;
    
    private VelocityDevice[] velocityDeviceField;
    
    private XYPadDevice[] xYPadDeviceField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AnalogFilterDevice")]
    public AnalogFilterDevice[] AnalogFilterDevice {
        get {
            return this.analogFilterDeviceField;
        }
        set {
            this.analogFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AudioPluginDevice")]
    public AudioPluginDevice[] AudioPluginDevice {
        get {
            return this.audioPluginDeviceField;
        }
        set {
            this.audioPluginDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BusCompressorDevice")]
    public BusCompressorDevice[] BusCompressorDevice {
        get {
            return this.busCompressorDeviceField;
        }
        set {
            this.busCompressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CabinetSimulatorDevice")]
    public CabinetSimulatorDevice[] CabinetSimulatorDevice {
        get {
            return this.cabinetSimulatorDeviceField;
        }
        set {
            this.cabinetSimulatorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Chorus2Device")]
    public Chorus2Device[] Chorus2Device {
        get {
            return this.chorus2DeviceField;
        }
        set {
            this.chorus2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ChorusDevice")]
    public ChorusDevice[] ChorusDevice {
        get {
            return this.chorusDeviceField;
        }
        set {
            this.chorusDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Comb2Device")]
    public Comb2Device[] Comb2Device {
        get {
            return this.comb2DeviceField;
        }
        set {
            this.comb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CombDevice")]
    public CombDevice[] CombDevice {
        get {
            return this.combDeviceField;
        }
        set {
            this.combDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CompressorDevice")]
    public CompressorDevice[] CompressorDevice {
        get {
            return this.compressorDeviceField;
        }
        set {
            this.compressorDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConvolverDevice")]
    public ConvolverDevice[] ConvolverDevice {
        get {
            return this.convolverDeviceField;
        }
        set {
            this.convolverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CrossoverDevice")]
    public CrossoverDevice[] CrossoverDevice {
        get {
            return this.crossoverDeviceField;
        }
        set {
            this.crossoverDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DcOffsetDevice")]
    public DcOffsetDevice[] DcOffsetDevice {
        get {
            return this.dcOffsetDeviceField;
        }
        set {
            this.dcOffsetDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DelayDevice")]
    public DelayDevice[] DelayDevice {
        get {
            return this.delayDeviceField;
        }
        set {
            this.delayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DigitalFilterDevice")]
    public DigitalFilterDevice[] DigitalFilterDevice {
        get {
            return this.digitalFilterDeviceField;
        }
        set {
            this.digitalFilterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Distortion2Device")]
    public Distortion2Device[] Distortion2Device {
        get {
            return this.distortion2DeviceField;
        }
        set {
            this.distortion2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DistortionDevice")]
    public DistortionDevice[] DistortionDevice {
        get {
            return this.distortionDeviceField;
        }
        set {
            this.distortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DooferDevice")]
    public DooferDevice[] DooferDevice {
        get {
            return this.dooferDeviceField;
        }
        set {
            this.dooferDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq10Device")]
    public Eq10Device[] Eq10Device {
        get {
            return this.eq10DeviceField;
        }
        set {
            this.eq10DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Eq5Device")]
    public Eq5Device[] Eq5Device {
        get {
            return this.eq5DeviceField;
        }
        set {
            this.eq5DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ExciterDevice")]
    public ExciterDevice[] ExciterDevice {
        get {
            return this.exciterDeviceField;
        }
        set {
            this.exciterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter1Device")]
    public Filter1Device[] Filter1Device {
        get {
            return this.filter1DeviceField;
        }
        set {
            this.filter1DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter2Device")]
    public Filter2Device[] Filter2Device {
        get {
            return this.filter2DeviceField;
        }
        set {
            this.filter2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Filter3Device")]
    public Filter3Device[] Filter3Device {
        get {
            return this.filter3DeviceField;
        }
        set {
            this.filter3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FilterDistortionDevice")]
    public FilterDistortionDevice[] FilterDistortionDevice {
        get {
            return this.filterDistortionDeviceField;
        }
        set {
            this.filterDistortionDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Flanger2Device")]
    public Flanger2Device[] Flanger2Device {
        get {
            return this.flanger2DeviceField;
        }
        set {
            this.flanger2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FlangerDevice")]
    public FlangerDevice[] FlangerDevice {
        get {
            return this.flangerDeviceField;
        }
        set {
            this.flangerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FormulaMetaDevice")]
    public FormulaMetaDevice[] FormulaMetaDevice {
        get {
            return this.formulaMetaDeviceField;
        }
        set {
            this.formulaMetaDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GainerDevice")]
    public GainerDevice[] GainerDevice {
        get {
            return this.gainerDeviceField;
        }
        set {
            this.gainerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Gate2Device")]
    public Gate2Device[] Gate2Device {
        get {
            return this.gate2DeviceField;
        }
        set {
            this.gate2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GateDevice")]
    public GateDevice[] GateDevice {
        get {
            return this.gateDeviceField;
        }
        set {
            this.gateDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("HydraDevice")]
    public HydraDevice[] HydraDevice {
        get {
            return this.hydraDeviceField;
        }
        set {
            this.hydraDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentAutomationDevice")]
    public InstrumentAutomationDevice[] InstrumentAutomationDevice {
        get {
            return this.instrumentAutomationDeviceField;
        }
        set {
            this.instrumentAutomationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InstrumentMacroDevice")]
    public InstrumentMacroDevice[] InstrumentMacroDevice {
        get {
            return this.instrumentMacroDeviceField;
        }
        set {
            this.instrumentMacroDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("KeyTrackingDevice")]
    public KeyTrackingDevice[] KeyTrackingDevice {
        get {
            return this.keyTrackingDeviceField;
        }
        set {
            this.keyTrackingDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LfoDevice")]
    public LfoDevice[] LfoDevice {
        get {
            return this.lfoDeviceField;
        }
        set {
            this.lfoDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LineInDevice")]
    public LineInDevice[] LineInDevice {
        get {
            return this.lineInDeviceField;
        }
        set {
            this.lineInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lofi2Device")]
    public Lofi2Device[] Lofi2Device {
        get {
            return this.lofi2DeviceField;
        }
        set {
            this.lofi2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LofiDevice")]
    public LofiDevice[] LofiDevice {
        get {
            return this.lofiDeviceField;
        }
        set {
            this.lofiDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MaximizerDevice")]
    public MaximizerDevice[] MaximizerDevice {
        get {
            return this.maximizerDeviceField;
        }
        set {
            this.maximizerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MetaMixerDevice")]
    public MetaMixerDevice[] MetaMixerDevice {
        get {
            return this.metaMixerDeviceField;
        }
        set {
            this.metaMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiCCDevice")]
    public MidiCCDevice[] MidiCCDevice {
        get {
            return this.midiCCDeviceField;
        }
        set {
            this.midiCCDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiControlDevice")]
    public MidiControlDevice[] MidiControlDevice {
        get {
            return this.midiControlDeviceField;
        }
        set {
            this.midiControlDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MixerEqDevice")]
    public MixerEqDevice[] MixerEqDevice {
        get {
            return this.mixerEqDeviceField;
        }
        set {
            this.mixerEqDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MultitapDevice")]
    public MultitapDevice[] MultitapDevice {
        get {
            return this.multitapDeviceField;
        }
        set {
            this.multitapDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PdcTestDelayDevice")]
    public PdcTestDelayDevice[] PdcTestDelayDevice {
        get {
            return this.pdcTestDelayDeviceField;
        }
        set {
            this.pdcTestDelayDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Phaser2Device")]
    public Phaser2Device[] Phaser2Device {
        get {
            return this.phaser2DeviceField;
        }
        set {
            this.phaser2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PhaserDevice")]
    public PhaserDevice[] PhaserDevice {
        get {
            return this.phaserDeviceField;
        }
        set {
            this.phaserDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RepeaterDevice")]
    public RepeaterDevice[] RepeaterDevice {
        get {
            return this.repeaterDeviceField;
        }
        set {
            this.repeaterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb2Device")]
    public Reverb2Device[] Reverb2Device {
        get {
            return this.reverb2DeviceField;
        }
        set {
            this.reverb2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Reverb3Device")]
    public Reverb3Device[] Reverb3Device {
        get {
            return this.reverb3DeviceField;
        }
        set {
            this.reverb3DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReverbDevice")]
    public ReverbDevice[] ReverbDevice {
        get {
            return this.reverbDeviceField;
        }
        set {
            this.reverbDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RewireInDevice")]
    public RewireInDevice[] RewireInDevice {
        get {
            return this.rewireInDeviceField;
        }
        set {
            this.rewireInDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingMod2Device")]
    public RingMod2Device[] RingMod2Device {
        get {
            return this.ringMod2DeviceField;
        }
        set {
            this.ringMod2DeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RingModDevice")]
    public RingModDevice[] RingModDevice {
        get {
            return this.ringModDeviceField;
        }
        set {
            this.ringModDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleMixerDevice")]
    public SampleMixerDevice[] SampleMixerDevice {
        get {
            return this.sampleMixerDeviceField;
        }
        set {
            this.sampleMixerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SendDevice")]
    public SendDevice[] SendDevice {
        get {
            return this.sendDeviceField;
        }
        set {
            this.sendDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ShaperDevice")]
    public ShaperDevice[] ShaperDevice {
        get {
            return this.shaperDeviceField;
        }
        set {
            this.shaperDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SideChainDevice")]
    public SideChainDevice[] SideChainDevice {
        get {
            return this.sideChainDeviceField;
        }
        set {
            this.sideChainDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SignalFollowerDevice")]
    public SignalFollowerDevice[] SignalFollowerDevice {
        get {
            return this.signalFollowerDeviceField;
        }
        set {
            this.signalFollowerDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StereoExpanderDevice")]
    public StereoExpanderDevice[] StereoExpanderDevice {
        get {
            return this.stereoExpanderDeviceField;
        }
        set {
            this.stereoExpanderDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StutterDevice")]
    public StutterDevice[] StutterDevice {
        get {
            return this.stutterDeviceField;
        }
        set {
            this.stutterDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("VelocityDevice")]
    public VelocityDevice[] VelocityDevice {
        get {
            return this.velocityDeviceField;
        }
        set {
            this.velocityDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("XYPadDevice")]
    public XYPadDevice[] XYPadDevice {
        get {
            return this.xYPadDeviceField;
        }
        set {
            this.xYPadDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleVelocityTrackingModulationDevicePreset {
    
    private SampleVelocityTrackingModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleVelocityTrackingModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleVelocityTrackingModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleVelocityTrackingModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleVelocityTrackingModulationDevicePreset runTimePresetAField;
    
    private SampleVelocityTrackingModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleVelocityTrackingModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleVelocityTrackingModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleModulationDeviceParameter minField;
    
    private SampleModulationDeviceParameter maxField;
    
    private SampleVelocityTrackingModulationDeviceMode modeField;
    
    private string typeField;
    
    public SampleVelocityTrackingModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleVelocityTrackingModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.modeField = SampleVelocityTrackingModulationDeviceMode.Clamp;
        this.typeField = "SampleVelocityTrackingModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleVelocityTrackingModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleVelocityTrackingModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleVelocityTrackingModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleVelocityTrackingModulationDeviceOperator.Item2)]
    public SampleVelocityTrackingModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleVelocityTrackingModulationDeviceMode.Clamp)]
    public SampleVelocityTrackingModulationDeviceMode Mode {
        get {
            return this.modeField;
        }
        set {
            this.modeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleVelocityTrackingModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleVelocityTrackingModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleModulationDeviceParameter {
    
    private float valueField;
    
    private SampleModulationDeviceParameterVisualization visualizationField;
    
    private SampleModulationDeviceParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    public SampleModulationDeviceParameter() {
        this.valueField = ((float)(0.1185631F));
        this.visualizationField = SampleModulationDeviceParameterVisualization.Deviceonly;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1185631")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleModulationDeviceParameterVisualization.Deviceonly)]
    public SampleModulationDeviceParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleModulationDeviceParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class SampleModulationDeviceParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleVelocityTrackingModulationDeviceMode {
    
    /// <remarks/>
    Clamp,
    
    /// <remarks/>
    Scale,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleModulationDeviceNonContinousParameter {
    
    private SampleModulationDeviceNonContinousParameterMidiMappings midiMappingsField;
    
    private string typeField;
    
    /// <remarks/>
    public SampleModulationDeviceNonContinousParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class SampleModulationDeviceNonContinousParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleStepperModulationDevicePreset {
    
    private SampleStepperModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleStepperModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleStepperModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleStepperModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleStepperModulationDevicePreset runTimePresetAField;
    
    private SampleStepperModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleStepperModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleStepperModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private int stepAmountField;
    
    private SampleModulationDeviceNonContinousParameter resetField;
    
    private Envelope nodesField;
    
    private string typeField;
    
    public SampleStepperModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleStepperModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.stepAmountField = 1;
        this.typeField = "SampleStepperModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleStepperModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleStepperModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleStepperModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleStepperModulationDeviceOperator.Item2)]
    public SampleStepperModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int StepAmount {
        get {
            return this.stepAmountField;
        }
        set {
            this.stepAmountField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceNonContinousParameter Reset {
        get {
            return this.resetField;
        }
        set {
            this.resetField = value;
        }
    }
    
    /// <remarks/>
    public Envelope Nodes {
        get {
            return this.nodesField;
        }
        set {
            this.nodesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleStepperModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleStepperModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleOperandModulationDevicePreset {
    
    private SampleOperandModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleOperandModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleOperandModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleOperandModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleOperandModulationDevicePreset runTimePresetAField;
    
    private SampleOperandModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleOperandModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleOperandModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleModulationDeviceParameter valueField;
    
    private string typeField;
    
    public SampleOperandModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleOperandModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.typeField = "SampleOperandModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleOperandModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleOperandModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleOperandModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleOperandModulationDeviceOperator.Item2)]
    public SampleOperandModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleOperandModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleOperandModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleMixerModulationDevice {
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private FilterDeviceParameter volumeField;
    
    private FilterDeviceParameter panningField;
    
    private FilterDeviceParameter pitchField;
    
    private float pitchModulationRangeField;
    
    private FilterDeviceParameter cutoffField;
    
    private FilterDeviceParameter resonanceField;
    
    private FilterDeviceParameter driveField;
    
    private string typeField;
    
    public SampleMixerModulationDevice() {
        this.pitchModulationRangeField = ((float)(12F));
        this.typeField = "SampleMixerModulationDevice";
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Pitch {
        get {
            return this.pitchField;
        }
        set {
            this.pitchField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "12")]
    public float PitchModulationRange {
        get {
            return this.pitchModulationRangeField;
        }
        set {
            this.pitchModulationRangeField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Cutoff {
        get {
            return this.cutoffField;
        }
        set {
            this.cutoffField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Resonance {
        get {
            return this.resonanceField;
        }
        set {
            this.resonanceField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceParameter Drive {
        get {
            return this.driveField;
        }
        set {
            this.driveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleLfoModulationDevicePreset {
    
    private SampleLfoModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleLfoModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleLfoModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleLfoModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleLfoModulationDevicePreset runTimePresetAField;
    
    private SampleLfoModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleLfoModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleLfoModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleLfoModulationDeviceMode modeField;
    
    private SampleModulationDeviceParameter frequencyField;
    
    private SampleModulationDeviceParameter amplitudeField;
    
    private SampleModulationDeviceParameter dephaseField;
    
    private SampleModulationDeviceParameter delayField;
    
    private string typeField;
    
    public SampleLfoModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleLfoModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.modeField = SampleLfoModulationDeviceMode.Sin;
        this.typeField = "SampleLfoModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleLfoModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleLfoModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleLfoModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleLfoModulationDeviceOperator.Item2)]
    public SampleLfoModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleLfoModulationDeviceMode.Sin)]
    public SampleLfoModulationDeviceMode Mode {
        get {
            return this.modeField;
        }
        set {
            this.modeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Frequency {
        get {
            return this.frequencyField;
        }
        set {
            this.frequencyField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Amplitude {
        get {
            return this.amplitudeField;
        }
        set {
            this.amplitudeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Dephase {
        get {
            return this.dephaseField;
        }
        set {
            this.dephaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleLfoModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleLfoModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleLfoModulationDeviceMode {
    
    /// <remarks/>
    Sin,
    
    /// <remarks/>
    Saw,
    
    /// <remarks/>
    Pulse,
    
    /// <remarks/>
    Random,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleKeyTrackingModulationDevicePreset {
    
    private SampleKeyTrackingModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleKeyTrackingModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleKeyTrackingModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleKeyTrackingModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleKeyTrackingModulationDevicePreset runTimePresetAField;
    
    private SampleKeyTrackingModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleKeyTrackingModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleKeyTrackingModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleModulationDeviceParameter minField;
    
    private SampleModulationDeviceParameter maxField;
    
    private string typeField;
    
    public SampleKeyTrackingModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleKeyTrackingModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.typeField = "SampleKeyTrackingModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleKeyTrackingModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleKeyTrackingModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleKeyTrackingModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleKeyTrackingModulationDeviceOperator.Item2)]
    public SampleKeyTrackingModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleKeyTrackingModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleKeyTrackingModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleFaderModulationDevicePreset {
    
    private SampleFaderModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleFaderModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleFaderModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleFaderModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleFaderModulationDevicePreset runTimePresetAField;
    
    private SampleFaderModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleFaderModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleFaderModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleFaderModulationDeviceScaling scalingField;
    
    private SampleModulationDeviceParameter fromField;
    
    private SampleModulationDeviceParameter toField;
    
    private SampleModulationDeviceParameter durationField;
    
    private SampleModulationDeviceParameter delayField;
    
    private string typeField;
    
    public SampleFaderModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleFaderModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.scalingField = SampleFaderModulationDeviceScaling.Linear;
        this.typeField = "SampleFaderModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleFaderModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleFaderModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleFaderModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleFaderModulationDeviceOperator.Item2)]
    public SampleFaderModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleFaderModulationDeviceScaling.Linear)]
    public SampleFaderModulationDeviceScaling Scaling {
        get {
            return this.scalingField;
        }
        set {
            this.scalingField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter From {
        get {
            return this.fromField;
        }
        set {
            this.fromField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter To {
        get {
            return this.toField;
        }
        set {
            this.toField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Delay {
        get {
            return this.delayField;
        }
        set {
            this.delayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleFaderModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleFaderModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleFaderModulationDeviceScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleEnvelopeModulationDevicePreset {
    
    private SampleEnvelopeModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleEnvelopeModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleEnvelopeModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleEnvelopeModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleEnvelopeModulationDevicePreset runTimePresetAField;
    
    private SampleEnvelopeModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleEnvelopeModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleEnvelopeModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private bool sustainIsActiveField;
    
    private int sustainPosField;
    
    private int loopStartField;
    
    private int loopEndField;
    
    private SampleEnvelopeModulationDeviceLoopMode loopModeField;
    
    private SampleModulationDeviceParameter decayField;
    
    private Envelope nodesField;
    
    private string typeField;
    
    public SampleEnvelopeModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleEnvelopeModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.sustainIsActiveField = false;
        this.sustainPosField = 0;
        this.loopStartField = 0;
        this.loopEndField = 71;
        this.loopModeField = SampleEnvelopeModulationDeviceLoopMode.Off;
        this.typeField = "SampleEnvelopeModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleEnvelopeModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleEnvelopeModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleEnvelopeModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleEnvelopeModulationDeviceOperator.Item2)]
    public SampleEnvelopeModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SustainIsActive {
        get {
            return this.sustainIsActiveField;
        }
        set {
            this.sustainIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int SustainPos {
        get {
            return this.sustainPosField;
        }
        set {
            this.sustainPosField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LoopStart {
        get {
            return this.loopStartField;
        }
        set {
            this.loopStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(71)]
    public int LoopEnd {
        get {
            return this.loopEndField;
        }
        set {
            this.loopEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleEnvelopeModulationDeviceLoopMode.Off)]
    public SampleEnvelopeModulationDeviceLoopMode LoopMode {
        get {
            return this.loopModeField;
        }
        set {
            this.loopModeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Decay {
        get {
            return this.decayField;
        }
        set {
            this.decayField = value;
        }
    }
    
    /// <remarks/>
    public Envelope Nodes {
        get {
            return this.nodesField;
        }
        set {
            this.nodesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleEnvelopeModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleEnvelopeModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleEnvelopeModulationDeviceLoopMode {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Forward,
    
    /// <remarks/>
    Backward,
    
    /// <remarks/>
    PingPong,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleCompatibilityModulationDevicePreset {
    
    private SampleCompatibilityModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleCompatibilityModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleCompatibilityModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleCompatibilityModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleCompatibilityModulationDevicePreset runTimePresetAField;
    
    private SampleCompatibilityModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleCompatibilityModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleCompatibilityModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private bool envelopeIsActiveField;
    
    private bool envelopeSustainIsActiveField;
    
    private int envelopeSustainPosField;
    
    private int envelopeLoopStartField;
    
    private int envelopeLoopEndField;
    
    private SampleCompatibilityModulationDeviceEnvelopeLoopMode envelopeLoopModeField;
    
    private SampleModulationDeviceParameter envelopeDecayField;
    
    private Envelope envelopeNodesField;
    
    private int lfo1ModeField;
    
    private SampleModulationDeviceParameter lfo1DephaseField;
    
    private SampleModulationDeviceParameter lfo1FrequencyField;
    
    private SampleModulationDeviceParameter lfo1AmplitudeField;
    
    private int lfo2ModeField;
    
    private SampleModulationDeviceParameter lfo2DephaseField;
    
    private SampleModulationDeviceParameter lfo2FrequencyField;
    
    private SampleModulationDeviceParameter lfo2AmplitudeField;
    
    private bool autoAmpIsActiveField;
    
    private SampleModulationDeviceParameter autoAmpAttackField;
    
    private SampleModulationDeviceParameter autoAmpReleaseField;
    
    private SampleModulationDeviceParameter autoAmpAmountField;
    
    private string typeField;
    
    public SampleCompatibilityModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleCompatibilityModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.envelopeIsActiveField = false;
        this.envelopeSustainIsActiveField = false;
        this.envelopeSustainPosField = 0;
        this.envelopeLoopStartField = 0;
        this.envelopeLoopEndField = 71;
        this.envelopeLoopModeField = SampleCompatibilityModulationDeviceEnvelopeLoopMode.Off;
        this.lfo1ModeField = -1;
        this.lfo2ModeField = -1;
        this.autoAmpIsActiveField = false;
        this.typeField = "SampleCompatibilityModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleCompatibilityModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleCompatibilityModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleCompatibilityModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleCompatibilityModulationDeviceOperator.Item2)]
    public SampleCompatibilityModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool EnvelopeIsActive {
        get {
            return this.envelopeIsActiveField;
        }
        set {
            this.envelopeIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool EnvelopeSustainIsActive {
        get {
            return this.envelopeSustainIsActiveField;
        }
        set {
            this.envelopeSustainIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int EnvelopeSustainPos {
        get {
            return this.envelopeSustainPosField;
        }
        set {
            this.envelopeSustainPosField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int EnvelopeLoopStart {
        get {
            return this.envelopeLoopStartField;
        }
        set {
            this.envelopeLoopStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(71)]
    public int EnvelopeLoopEnd {
        get {
            return this.envelopeLoopEndField;
        }
        set {
            this.envelopeLoopEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleCompatibilityModulationDeviceEnvelopeLoopMode.Off)]
    public SampleCompatibilityModulationDeviceEnvelopeLoopMode EnvelopeLoopMode {
        get {
            return this.envelopeLoopModeField;
        }
        set {
            this.envelopeLoopModeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter EnvelopeDecay {
        get {
            return this.envelopeDecayField;
        }
        set {
            this.envelopeDecayField = value;
        }
    }
    
    /// <remarks/>
    public Envelope EnvelopeNodes {
        get {
            return this.envelopeNodesField;
        }
        set {
            this.envelopeNodesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int Lfo1Mode {
        get {
            return this.lfo1ModeField;
        }
        set {
            this.lfo1ModeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo1Dephase {
        get {
            return this.lfo1DephaseField;
        }
        set {
            this.lfo1DephaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo1Frequency {
        get {
            return this.lfo1FrequencyField;
        }
        set {
            this.lfo1FrequencyField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo1Amplitude {
        get {
            return this.lfo1AmplitudeField;
        }
        set {
            this.lfo1AmplitudeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int Lfo2Mode {
        get {
            return this.lfo2ModeField;
        }
        set {
            this.lfo2ModeField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo2Dephase {
        get {
            return this.lfo2DephaseField;
        }
        set {
            this.lfo2DephaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo2Frequency {
        get {
            return this.lfo2FrequencyField;
        }
        set {
            this.lfo2FrequencyField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Lfo2Amplitude {
        get {
            return this.lfo2AmplitudeField;
        }
        set {
            this.lfo2AmplitudeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool AutoAmpIsActive {
        get {
            return this.autoAmpIsActiveField;
        }
        set {
            this.autoAmpIsActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter AutoAmpAttack {
        get {
            return this.autoAmpAttackField;
        }
        set {
            this.autoAmpAttackField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter AutoAmpRelease {
        get {
            return this.autoAmpReleaseField;
        }
        set {
            this.autoAmpReleaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter AutoAmpAmount {
        get {
            return this.autoAmpAmountField;
        }
        set {
            this.autoAmpAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleCompatibilityModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleCompatibilityModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleCompatibilityModulationDeviceEnvelopeLoopMode {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Forward,
    
    /// <remarks/>
    Backward,
    
    /// <remarks/>
    PingPong,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleAutoAmpModulationDevicePreset {
    
    private SampleAutoAmpModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleAutoAmpModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleAutoAmpModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleAutoAmpModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleAutoAmpModulationDevicePreset runTimePresetAField;
    
    private SampleAutoAmpModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleAutoAmpModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleAutoAmpModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleModulationDeviceParameter attackField;
    
    private SampleModulationDeviceParameter releaseField;
    
    private SampleModulationDeviceParameter amountField;
    
    private string typeField;
    
    public SampleAutoAmpModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleAutoAmpModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.typeField = "SampleAutoAmpModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleAutoAmpModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleAutoAmpModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleAutoAmpModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleAutoAmpModulationDeviceOperator.Item2)]
    public SampleAutoAmpModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleAutoAmpModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleAutoAmpModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleAhdsrModulationDevicePreset {
    
    private SampleAhdsrModulationDevice deviceSlotField;
    
    private string typeField;
    
    public SampleAhdsrModulationDevicePreset() {
        this.typeField = "FilterDevicePreset";
    }
    
    /// <remarks/>
    public SampleAhdsrModulationDevice DeviceSlot {
        get {
            return this.deviceSlotField;
        }
        set {
            this.deviceSlotField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleAhdsrModulationDevice {
    
    private string customDeviceNameField;
    
    private bool isMaximizedField;
    
    private bool isSelectedField;
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleAhdsrModulationDevicePreset runTimePresetAField;
    
    private SampleAhdsrModulationDevicePreset runTimePresetBField;
    
    private FilterDeviceIsActiveParameter isActiveField;
    
    private SampleAhdsrModulationDeviceTarget targetField;
    
    private bool targetFieldSpecified;
    
    private SampleAhdsrModulationDeviceOperator operatorField;
    
    private bool bipolarField;
    
    private bool tempoSyncedField;
    
    private SampleModulationDeviceParameter attackField;
    
    private SampleModulationDeviceParameter holdField;
    
    private SampleModulationDeviceParameter decayField;
    
    private SampleModulationDeviceParameter sustainField;
    
    private SampleModulationDeviceParameter releaseField;
    
    private SampleModulationDeviceParameter attackScalingField;
    
    private SampleModulationDeviceParameter decayScalingField;
    
    private SampleModulationDeviceParameter releaseScalingField;
    
    private string typeField;
    
    public SampleAhdsrModulationDevice() {
        this.isMaximizedField = true;
        this.isSelectedField = false;
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.operatorField = SampleAhdsrModulationDeviceOperator.Item2;
        this.bipolarField = false;
        this.tempoSyncedField = false;
        this.typeField = "SampleAhdsrModulationDevice";
    }
    
    /// <remarks/>
    public string CustomDeviceName {
        get {
            return this.customDeviceNameField;
        }
        set {
            this.customDeviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool IsMaximized {
        get {
            return this.isMaximizedField;
        }
        set {
            this.isMaximizedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsSelected {
        get {
            return this.isSelectedField;
        }
        set {
            this.isSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleAhdsrModulationDevicePreset RunTimePresetA {
        get {
            return this.runTimePresetAField;
        }
        set {
            this.runTimePresetAField = value;
        }
    }
    
    /// <remarks/>
    public SampleAhdsrModulationDevicePreset RunTimePresetB {
        get {
            return this.runTimePresetBField;
        }
        set {
            this.runTimePresetBField = value;
        }
    }
    
    /// <remarks/>
    public FilterDeviceIsActiveParameter IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
    
    /// <remarks/>
    public SampleAhdsrModulationDeviceTarget Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TargetSpecified {
        get {
            return this.targetFieldSpecified;
        }
        set {
            this.targetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleAhdsrModulationDeviceOperator.Item2)]
    public SampleAhdsrModulationDeviceOperator Operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Bipolar {
        get {
            return this.bipolarField;
        }
        set {
            this.bipolarField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool TempoSynced {
        get {
            return this.tempoSyncedField;
        }
        set {
            this.tempoSyncedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Attack {
        get {
            return this.attackField;
        }
        set {
            this.attackField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Hold {
        get {
            return this.holdField;
        }
        set {
            this.holdField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Decay {
        get {
            return this.decayField;
        }
        set {
            this.decayField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Sustain {
        get {
            return this.sustainField;
        }
        set {
            this.sustainField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter Release {
        get {
            return this.releaseField;
        }
        set {
            this.releaseField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter AttackScaling {
        get {
            return this.attackScalingField;
        }
        set {
            this.attackScalingField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter DecayScaling {
        get {
            return this.decayScalingField;
        }
        set {
            this.decayScalingField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationDeviceParameter ReleaseScaling {
        get {
            return this.releaseScalingField;
        }
        set {
            this.releaseScalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleAhdsrModulationDeviceTarget {
    
    /// <remarks/>
    Volume,
    
    /// <remarks/>
    Panning,
    
    /// <remarks/>
    Pitch,
    
    /// <remarks/>
    Cutoff,
    
    /// <remarks/>
    Resonance,
    
    /// <remarks/>
    Drive,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleAhdsrModulationDeviceOperator {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("+")]
    Item,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("-")]
    Item1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("*")]
    Item2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("/")]
    Item3,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleModulationSet {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private SampleModulationSetDevices devicesField;
    
    private string nameField;
    
    private int filterTypeField;
    
    private int filterBankVersionField;
    
    private string typeField;
    
    public SampleModulationSet() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.nameField = "Set 01";
        this.filterTypeField = 0;
        this.filterBankVersionField = 3;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public SampleModulationSetDevices Devices {
        get {
            return this.devicesField;
        }
        set {
            this.devicesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Set 01")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int FilterType {
        get {
            return this.filterTypeField;
        }
        set {
            this.filterTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(3)]
    public int FilterBankVersion {
        get {
            return this.filterBankVersionField;
        }
        set {
            this.filterBankVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class SampleModulationSetDevices {
    
    private SampleAhdsrModulationDevice[] sampleAhdsrModulationDeviceField;
    
    private SampleAutoAmpModulationDevice[] sampleAutoAmpModulationDeviceField;
    
    private SampleCompatibilityModulationDevice[] sampleCompatibilityModulationDeviceField;
    
    private SampleEnvelopeModulationDevice[] sampleEnvelopeModulationDeviceField;
    
    private SampleFaderModulationDevice[] sampleFaderModulationDeviceField;
    
    private SampleKeyTrackingModulationDevice[] sampleKeyTrackingModulationDeviceField;
    
    private SampleLfoModulationDevice[] sampleLfoModulationDeviceField;
    
    private SampleMixerModulationDevice[] sampleMixerModulationDeviceField;
    
    private SampleOperandModulationDevice[] sampleOperandModulationDeviceField;
    
    private SampleStepperModulationDevice[] sampleStepperModulationDeviceField;
    
    private SampleVelocityTrackingModulationDevice[] sampleVelocityTrackingModulationDeviceField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleAhdsrModulationDevice")]
    public SampleAhdsrModulationDevice[] SampleAhdsrModulationDevice {
        get {
            return this.sampleAhdsrModulationDeviceField;
        }
        set {
            this.sampleAhdsrModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleAutoAmpModulationDevice")]
    public SampleAutoAmpModulationDevice[] SampleAutoAmpModulationDevice {
        get {
            return this.sampleAutoAmpModulationDeviceField;
        }
        set {
            this.sampleAutoAmpModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleCompatibilityModulationDevice")]
    public SampleCompatibilityModulationDevice[] SampleCompatibilityModulationDevice {
        get {
            return this.sampleCompatibilityModulationDeviceField;
        }
        set {
            this.sampleCompatibilityModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleEnvelopeModulationDevice")]
    public SampleEnvelopeModulationDevice[] SampleEnvelopeModulationDevice {
        get {
            return this.sampleEnvelopeModulationDeviceField;
        }
        set {
            this.sampleEnvelopeModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleFaderModulationDevice")]
    public SampleFaderModulationDevice[] SampleFaderModulationDevice {
        get {
            return this.sampleFaderModulationDeviceField;
        }
        set {
            this.sampleFaderModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleKeyTrackingModulationDevice")]
    public SampleKeyTrackingModulationDevice[] SampleKeyTrackingModulationDevice {
        get {
            return this.sampleKeyTrackingModulationDeviceField;
        }
        set {
            this.sampleKeyTrackingModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleLfoModulationDevice")]
    public SampleLfoModulationDevice[] SampleLfoModulationDevice {
        get {
            return this.sampleLfoModulationDeviceField;
        }
        set {
            this.sampleLfoModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleMixerModulationDevice")]
    public SampleMixerModulationDevice[] SampleMixerModulationDevice {
        get {
            return this.sampleMixerModulationDeviceField;
        }
        set {
            this.sampleMixerModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleOperandModulationDevice")]
    public SampleOperandModulationDevice[] SampleOperandModulationDevice {
        get {
            return this.sampleOperandModulationDeviceField;
        }
        set {
            this.sampleOperandModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleStepperModulationDevice")]
    public SampleStepperModulationDevice[] SampleStepperModulationDevice {
        get {
            return this.sampleStepperModulationDeviceField;
        }
        set {
            this.sampleStepperModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SampleVelocityTrackingModulationDevice")]
    public SampleVelocityTrackingModulationDevice[] SampleVelocityTrackingModulationDevice {
        get {
            return this.sampleVelocityTrackingModulationDeviceField;
        }
        set {
            this.sampleVelocityTrackingModulationDeviceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleSplitMapping {
    
    private SampleSplitMappingLayer layerField;
    
    private int baseNoteField;
    
    private int noteStartField;
    
    private int noteEndField;
    
    private bool mapKeyToPitchField;
    
    private int velocityStartField;
    
    private int velocityEndField;
    
    private bool mapVelocityToVolumeField;
    
    private string typeField;
    
    public SampleSplitMapping() {
        this.layerField = SampleSplitMappingLayer.NoteOnLayer;
        this.baseNoteField = 48;
        this.noteStartField = 0;
        this.noteEndField = 119;
        this.mapKeyToPitchField = true;
        this.velocityStartField = 0;
        this.velocityEndField = 127;
        this.mapVelocityToVolumeField = true;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleSplitMappingLayer.NoteOnLayer)]
    public SampleSplitMappingLayer Layer {
        get {
            return this.layerField;
        }
        set {
            this.layerField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(48)]
    public int BaseNote {
        get {
            return this.baseNoteField;
        }
        set {
            this.baseNoteField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NoteStart {
        get {
            return this.noteStartField;
        }
        set {
            this.noteStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(119)]
    public int NoteEnd {
        get {
            return this.noteEndField;
        }
        set {
            this.noteEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool MapKeyToPitch {
        get {
            return this.mapKeyToPitchField;
        }
        set {
            this.mapKeyToPitchField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int VelocityStart {
        get {
            return this.velocityStartField;
        }
        set {
            this.velocityStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(127)]
    public int VelocityEnd {
        get {
            return this.velocityEndField;
        }
        set {
            this.velocityEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool MapVelocityToVolume {
        get {
            return this.mapVelocityToVolumeField;
        }
        set {
            this.mapVelocityToVolumeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleSplitMappingLayer {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Note-On Layer")]
    NoteOnLayer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Note-Off Layer")]
    NoteOffLayer,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Disabled Layer")]
    DisabledLayer,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SampleSliceMarker {
    
    private uint samplePositionField;
    
    private string typeField;
    
    public SampleSliceMarker() {
        this.samplePositionField = ((uint)(0));
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
    public uint SamplePosition {
        get {
            return this.samplePositionField;
        }
        set {
            this.samplePositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Sample {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private string nameField;
    
    private string fileNameField;
    
    private System.DateTime fileModificationDateField;
    
    private bool fileModificationDateFieldSpecified;
    
    private System.DateTime fileModificationDayTimeField;
    
    private bool fileModificationDayTimeFieldSpecified;
    
    private float volumeField;
    
    private float panningField;
    
    private sbyte transposeField;
    
    private sbyte finetuneField;
    
    private bool beatSyncIsActiveField;
    
    private SampleBeatSyncMode beatSyncModeField;
    
    private short beatSyncLinesField;
    
    private bool oneShotTriggerField;
    
    private SampleNewNoteAction newNoteActionField;
    
    private bool oversampleField;
    
    private SampleInterpolationMode interpolationModeField;
    
    private bool autoSeekField;
    
    private bool autoFadeField;
    
    private SampleLoopMode loopModeField;
    
    private bool loopReleaseField;
    
    private uint loopStartField;
    
    private uint loopEndField;
    
    private SampleSliceMarkers sliceMarkersField;
    
    private bool singleSliceTriggerEnabledField;
    
    private bool isAliasField;
    
    private int muteGroupIndexField;
    
    private int modulationSetIndexField;
    
    private int deviceChainIndexField;
    
    private SampleSplitMapping mappingField;
    
    private int displayStartField;
    
    private int displayLengthField;
    
    private int selectionRangeStartField;
    
    private int selectionRangeEndField;
    
    private SampleSelectedChannel selectedChannelField;
    
    private float vZoomFactorField;
    
    private string typeField;
    
    public Sample() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.volumeField = ((float)(1F));
        this.panningField = ((float)(0.5F));
        this.transposeField = ((sbyte)(0));
        this.finetuneField = ((sbyte)(0));
        this.beatSyncIsActiveField = false;
        this.beatSyncModeField = SampleBeatSyncMode.Repitch;
        this.beatSyncLinesField = ((short)(16));
        this.oneShotTriggerField = false;
        this.newNoteActionField = SampleNewNoteAction.NoteOff;
        this.oversampleField = false;
        this.interpolationModeField = SampleInterpolationMode.Cubic;
        this.autoSeekField = false;
        this.autoFadeField = false;
        this.loopModeField = SampleLoopMode.Off;
        this.loopReleaseField = false;
        this.loopStartField = ((uint)(0));
        this.loopEndField = ((uint)(0));
        this.singleSliceTriggerEnabledField = true;
        this.isAliasField = false;
        this.muteGroupIndexField = -1;
        this.modulationSetIndexField = -1;
        this.deviceChainIndexField = -1;
        this.displayStartField = 0;
        this.displayLengthField = 1;
        this.selectionRangeStartField = -1;
        this.selectionRangeEndField = -1;
        this.selectedChannelField = SampleSelectedChannel.LR;
        this.vZoomFactorField = ((float)(1F));
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string FileName {
        get {
            return this.fileNameField;
        }
        set {
            this.fileNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
    public System.DateTime FileModificationDate {
        get {
            return this.fileModificationDateField;
        }
        set {
            this.fileModificationDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FileModificationDateSpecified {
        get {
            return this.fileModificationDateFieldSpecified;
        }
        set {
            this.fileModificationDateFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="time")]
    public System.DateTime FileModificationDayTime {
        get {
            return this.fileModificationDayTimeField;
        }
        set {
            this.fileModificationDayTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FileModificationDayTimeSpecified {
        get {
            return this.fileModificationDayTimeFieldSpecified;
        }
        set {
            this.fileModificationDayTimeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.5")]
    public float Panning {
        get {
            return this.panningField;
        }
        set {
            this.panningField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
    public sbyte Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
    public sbyte Finetune {
        get {
            return this.finetuneField;
        }
        set {
            this.finetuneField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool BeatSyncIsActive {
        get {
            return this.beatSyncIsActiveField;
        }
        set {
            this.beatSyncIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleBeatSyncMode.Repitch)]
    public SampleBeatSyncMode BeatSyncMode {
        get {
            return this.beatSyncModeField;
        }
        set {
            this.beatSyncModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(short), "16")]
    public short BeatSyncLines {
        get {
            return this.beatSyncLinesField;
        }
        set {
            this.beatSyncLinesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool OneShotTrigger {
        get {
            return this.oneShotTriggerField;
        }
        set {
            this.oneShotTriggerField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleNewNoteAction.NoteOff)]
    public SampleNewNoteAction NewNoteAction {
        get {
            return this.newNoteActionField;
        }
        set {
            this.newNoteActionField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Oversample {
        get {
            return this.oversampleField;
        }
        set {
            this.oversampleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleInterpolationMode.Cubic)]
    public SampleInterpolationMode InterpolationMode {
        get {
            return this.interpolationModeField;
        }
        set {
            this.interpolationModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool AutoSeek {
        get {
            return this.autoSeekField;
        }
        set {
            this.autoSeekField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool AutoFade {
        get {
            return this.autoFadeField;
        }
        set {
            this.autoFadeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleLoopMode.Off)]
    public SampleLoopMode LoopMode {
        get {
            return this.loopModeField;
        }
        set {
            this.loopModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool LoopRelease {
        get {
            return this.loopReleaseField;
        }
        set {
            this.loopReleaseField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
    public uint LoopStart {
        get {
            return this.loopStartField;
        }
        set {
            this.loopStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
    public uint LoopEnd {
        get {
            return this.loopEndField;
        }
        set {
            this.loopEndField = value;
        }
    }
    
    /// <remarks/>
    public SampleSliceMarkers SliceMarkers {
        get {
            return this.sliceMarkersField;
        }
        set {
            this.sliceMarkersField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SingleSliceTriggerEnabled {
        get {
            return this.singleSliceTriggerEnabledField;
        }
        set {
            this.singleSliceTriggerEnabledField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool IsAlias {
        get {
            return this.isAliasField;
        }
        set {
            this.isAliasField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int MuteGroupIndex {
        get {
            return this.muteGroupIndexField;
        }
        set {
            this.muteGroupIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int ModulationSetIndex {
        get {
            return this.modulationSetIndexField;
        }
        set {
            this.modulationSetIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DeviceChainIndex {
        get {
            return this.deviceChainIndexField;
        }
        set {
            this.deviceChainIndexField = value;
        }
    }
    
    /// <remarks/>
    public SampleSplitMapping Mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int DisplayStart {
        get {
            return this.displayStartField;
        }
        set {
            this.displayStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int DisplayLength {
        get {
            return this.displayLengthField;
        }
        set {
            this.displayLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectionRangeStart {
        get {
            return this.selectionRangeStartField;
        }
        set {
            this.selectionRangeStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectionRangeEnd {
        get {
            return this.selectionRangeEndField;
        }
        set {
            this.selectionRangeEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(SampleSelectedChannel.LR)]
    public SampleSelectedChannel SelectedChannel {
        get {
            return this.selectedChannelField;
        }
        set {
            this.selectedChannelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float VZoomFactor {
        get {
            return this.vZoomFactorField;
        }
        set {
            this.vZoomFactorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleBeatSyncMode {
    
    /// <remarks/>
    Repitch,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Time-Stretch (Percussion)")]
    TimeStretchPercussion,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Time-Stretch (Texture)")]
    TimeStretchTexture,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleNewNoteAction {
    
    /// <remarks/>
    Cut,
    
    /// <remarks/>
    NoteOff,
    
    /// <remarks/>
    None,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleInterpolationMode {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    Cubic,
    
    /// <remarks/>
    Sinc,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleLoopMode {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Forward,
    
    /// <remarks/>
    Backward,
    
    /// <remarks/>
    PingPong,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class SampleSliceMarkers {
    
    private SampleSliceMarker[] sliceMarkerField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SliceMarker")]
    public SampleSliceMarker[] SliceMarker {
        get {
            return this.sliceMarkerField;
        }
        set {
            this.sliceMarkerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum SampleSelectedChannel {
    
    /// <remarks/>
    L,
    
    /// <remarks/>
    R,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("L+R")]
    LR,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentSampleGenerator {
    
    private InstrumentSampleGeneratorSamples samplesField;
    
    private int selectedSampleIndexField;
    
    private InstrumentSampleGeneratorModulationSets modulationSetsField;
    
    private int selectedModulationSetIndexField;
    
    private InstrumentSampleGeneratorDeviceChains deviceChainsField;
    
    private int selectedDeviceChainIndexField;
    
    private InstrumentSampleGeneratorKeyzoneOverlappingMode keyzoneOverlappingModeField;
    
    private SampleSplitMap splitMapField;
    
    private string typeField;
    
    public InstrumentSampleGenerator() {
        this.selectedSampleIndexField = -1;
        this.selectedModulationSetIndexField = 0;
        this.selectedDeviceChainIndexField = -1;
        this.keyzoneOverlappingModeField = InstrumentSampleGeneratorKeyzoneOverlappingMode.PlayAll;
    }
    
    /// <remarks/>
    public InstrumentSampleGeneratorSamples Samples {
        get {
            return this.samplesField;
        }
        set {
            this.samplesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectedSampleIndex {
        get {
            return this.selectedSampleIndexField;
        }
        set {
            this.selectedSampleIndexField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentSampleGeneratorModulationSets ModulationSets {
        get {
            return this.modulationSetsField;
        }
        set {
            this.modulationSetsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int SelectedModulationSetIndex {
        get {
            return this.selectedModulationSetIndexField;
        }
        set {
            this.selectedModulationSetIndexField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentSampleGeneratorDeviceChains DeviceChains {
        get {
            return this.deviceChainsField;
        }
        set {
            this.deviceChainsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectedDeviceChainIndex {
        get {
            return this.selectedDeviceChainIndexField;
        }
        set {
            this.selectedDeviceChainIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentSampleGeneratorKeyzoneOverlappingMode.PlayAll)]
    public InstrumentSampleGeneratorKeyzoneOverlappingMode KeyzoneOverlappingMode {
        get {
            return this.keyzoneOverlappingModeField;
        }
        set {
            this.keyzoneOverlappingModeField = value;
        }
    }
    
    /// <remarks/>
    public SampleSplitMap SplitMap {
        get {
            return this.splitMapField;
        }
        set {
            this.splitMapField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentSampleGeneratorSamples {
    
    private Sample[] sampleField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Sample")]
    public Sample[] Sample {
        get {
            return this.sampleField;
        }
        set {
            this.sampleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentSampleGeneratorModulationSets {
    
    private SampleModulationSet[] modulationSetField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ModulationSet")]
    public SampleModulationSet[] ModulationSet {
        get {
            return this.modulationSetField;
        }
        set {
            this.modulationSetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentSampleGeneratorDeviceChains {
    
    private SampleFilterDeviceChain[] deviceChainField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DeviceChain")]
    public SampleFilterDeviceChain[] DeviceChain {
        get {
            return this.deviceChainField;
        }
        set {
            this.deviceChainField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentSampleGeneratorKeyzoneOverlappingMode {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Play All")]
    PlayAll,
    
    /// <remarks/>
    Cycle,
    
    /// <remarks/>
    Random,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPhraseMapping {
    
    private int phraseIndexField;
    
    private int noteRangeStartField;
    
    private int noteRangeEndField;
    
    private InstrumentPhraseTriggerOptions triggerOptionsField;
    
    private string typeField;
    
    public InstrumentPhraseMapping() {
        this.phraseIndexField = 0;
        this.noteRangeStartField = 0;
        this.noteRangeEndField = 119;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int PhraseIndex {
        get {
            return this.phraseIndexField;
        }
        set {
            this.phraseIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NoteRangeStart {
        get {
            return this.noteRangeStartField;
        }
        set {
            this.noteRangeStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(119)]
    public int NoteRangeEnd {
        get {
            return this.noteRangeEndField;
        }
        set {
            this.noteRangeEndField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPhraseTriggerOptions TriggerOptions {
        get {
            return this.triggerOptionsField;
        }
        set {
            this.triggerOptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPhraseTriggerOptions {
    
    private int baseNoteField;
    
    private InstrumentPhraseTriggerOptionsKeyTracking keyTrackingField;
    
    private bool loopField;
    
    private int loopStartField;
    
    private int loopEndField;
    
    private string typeField;
    
    public InstrumentPhraseTriggerOptions() {
        this.baseNoteField = 48;
        this.keyTrackingField = InstrumentPhraseTriggerOptionsKeyTracking.Transpose;
        this.loopField = true;
        this.loopStartField = 0;
        this.loopEndField = 32;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(48)]
    public int BaseNote {
        get {
            return this.baseNoteField;
        }
        set {
            this.baseNoteField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentPhraseTriggerOptionsKeyTracking.Transpose)]
    public InstrumentPhraseTriggerOptionsKeyTracking KeyTracking {
        get {
            return this.keyTrackingField;
        }
        set {
            this.keyTrackingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Loop {
        get {
            return this.loopField;
        }
        set {
            this.loopField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int LoopStart {
        get {
            return this.loopStartField;
        }
        set {
            this.loopStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(32)]
    public int LoopEnd {
        get {
            return this.loopEndField;
        }
        set {
            this.loopEndField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentPhraseTriggerOptionsKeyTracking {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Transpose,
    
    /// <remarks/>
    Offset,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPhraseMap {
    
    private InstrumentPhraseMapMappings mappingsField;
    
    private int selectedMappingIndexField;
    
    private string typeField;
    
    public InstrumentPhraseMap() {
        this.selectedMappingIndexField = -1;
    }
    
    /// <remarks/>
    public InstrumentPhraseMapMappings Mappings {
        get {
            return this.mappingsField;
        }
        set {
            this.mappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectedMappingIndex {
        get {
            return this.selectedMappingIndexField;
        }
        set {
            this.selectedMappingIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentPhraseMapMappings {
    
    private InstrumentPhraseMapping[] mappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Mapping")]
    public InstrumentPhraseMapping[] Mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPhrase {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private PatternLineNode[] linesField;
    
    private string nameField;
    
    private bool autoseekField;
    
    private int linesPerBeatField;
    
    private bool shuffleIsActiveField;
    
    private int[] shuffleAmountsField;
    
    private int numberOfLinesField;
    
    private int visibleNoteColumnsField;
    
    private int visibleEffectColumnsField;
    
    private string[] noteColumnNamesField;
    
    private InstrumentPhraseNoteColumnState[] noteColumnStatesField;
    
    private bool instrumentColumnIsVisibleField;
    
    private bool volumeColumnIsVisibleField;
    
    private bool panningColumnIsVisibleField;
    
    private bool delayColumnIsVisibleField;
    
    private bool sampleEffectsColumnIsVisibleField;
    
    private InstrumentPhraseTriggerOptions triggerOptionsField;
    
    private string typeField;
    
    public InstrumentPhrase() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.autoseekField = true;
        this.linesPerBeatField = 4;
        this.shuffleIsActiveField = false;
        this.numberOfLinesField = 32;
        this.visibleNoteColumnsField = 4;
        this.visibleEffectColumnsField = 1;
        this.instrumentColumnIsVisibleField = false;
        this.volumeColumnIsVisibleField = true;
        this.panningColumnIsVisibleField = false;
        this.delayColumnIsVisibleField = false;
        this.sampleEffectsColumnIsVisibleField = true;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Line", IsNullable=false)]
    public PatternLineNode[] Lines {
        get {
            return this.linesField;
        }
        set {
            this.linesField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Autoseek {
        get {
            return this.autoseekField;
        }
        set {
            this.autoseekField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int LinesPerBeat {
        get {
            return this.linesPerBeatField;
        }
        set {
            this.linesPerBeatField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ShuffleIsActive {
        get {
            return this.shuffleIsActiveField;
        }
        set {
            this.shuffleIsActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ShuffleAmount", IsNullable=false)]
    public int[] ShuffleAmounts {
        get {
            return this.shuffleAmountsField;
        }
        set {
            this.shuffleAmountsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(32)]
    public int NumberOfLines {
        get {
            return this.numberOfLinesField;
        }
        set {
            this.numberOfLinesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(4)]
    public int VisibleNoteColumns {
        get {
            return this.visibleNoteColumnsField;
        }
        set {
            this.visibleNoteColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(1)]
    public int VisibleEffectColumns {
        get {
            return this.visibleEffectColumnsField;
        }
        set {
            this.visibleEffectColumnsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnName", IsNullable=false)]
    public string[] NoteColumnNames {
        get {
            return this.noteColumnNamesField;
        }
        set {
            this.noteColumnNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NoteColumnState", IsNullable=false)]
    public InstrumentPhraseNoteColumnState[] NoteColumnStates {
        get {
            return this.noteColumnStatesField;
        }
        set {
            this.noteColumnStatesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool InstrumentColumnIsVisible {
        get {
            return this.instrumentColumnIsVisibleField;
        }
        set {
            this.instrumentColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool VolumeColumnIsVisible {
        get {
            return this.volumeColumnIsVisibleField;
        }
        set {
            this.volumeColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PanningColumnIsVisible {
        get {
            return this.panningColumnIsVisibleField;
        }
        set {
            this.panningColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool DelayColumnIsVisible {
        get {
            return this.delayColumnIsVisibleField;
        }
        set {
            this.delayColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool SampleEffectsColumnIsVisible {
        get {
            return this.sampleEffectsColumnIsVisibleField;
        }
        set {
            this.sampleEffectsColumnIsVisibleField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPhraseTriggerOptions TriggerOptions {
        get {
            return this.triggerOptionsField;
        }
        set {
            this.triggerOptionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentPhraseNoteColumnState {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentPhraseGenerator {
    
    private bool playbackSyncField;
    
    private InstrumentPhraseGeneratorPlaybackMode playbackModeField;
    
    private int selectedPhraseIndexField;
    
    private InstrumentPhraseGeneratorPhrases phrasesField;
    
    private InstrumentPhraseMap phraseMapField;
    
    private string typeField;
    
    public InstrumentPhraseGenerator() {
        this.playbackSyncField = false;
        this.playbackModeField = InstrumentPhraseGeneratorPlaybackMode.Selective;
        this.selectedPhraseIndexField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool PlaybackSync {
        get {
            return this.playbackSyncField;
        }
        set {
            this.playbackSyncField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentPhraseGeneratorPlaybackMode.Selective)]
    public InstrumentPhraseGeneratorPlaybackMode PlaybackMode {
        get {
            return this.playbackModeField;
        }
        set {
            this.playbackModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int SelectedPhraseIndex {
        get {
            return this.selectedPhraseIndexField;
        }
        set {
            this.selectedPhraseIndexField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPhraseGeneratorPhrases Phrases {
        get {
            return this.phrasesField;
        }
        set {
            this.phrasesField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPhraseMap PhraseMap {
        get {
            return this.phraseMapField;
        }
        set {
            this.phraseMapField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentPhraseGeneratorPlaybackMode {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Selective,
    
    /// <remarks/>
    Keymap,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentPhraseGeneratorPhrases {
    
    private InstrumentPhrase[] phraseField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Phrase")]
    public InstrumentPhrase[] Phrase {
        get {
            return this.phraseField;
        }
        set {
            this.phraseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentMidiInputProperties {
    
    private string deviceNameField;
    
    private sbyte channelField;
    
    private int noteRangeStartField;
    
    private int noteRangeEndField;
    
    private int assignedTrackField;
    
    private string typeField;
    
    public InstrumentMidiInputProperties() {
        this.channelField = ((sbyte)(-1));
        this.noteRangeStartField = 0;
        this.noteRangeEndField = 119;
        this.assignedTrackField = -1;
    }
    
    /// <remarks/>
    public string DeviceName {
        get {
            return this.deviceNameField;
        }
        set {
            this.deviceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "-1")]
    public sbyte Channel {
        get {
            return this.channelField;
        }
        set {
            this.channelField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int NoteRangeStart {
        get {
            return this.noteRangeStartField;
        }
        set {
            this.noteRangeStartField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(119)]
    public int NoteRangeEnd {
        get {
            return this.noteRangeEndField;
        }
        set {
            this.noteRangeEndField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int AssignedTrack {
        get {
            return this.assignedTrackField;
        }
        set {
            this.assignedTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentParameterMapping {
    
    private InstrumentParameterMappingDestChainType destChainTypeField;
    
    private int destChainIndexField;
    
    private int destDeviceIndexField;
    
    private int destParameterIndexField;
    
    private float minField;
    
    private float maxField;
    
    private InstrumentParameterMappingScaling scalingField;
    
    private string typeField;
    
    public InstrumentParameterMapping() {
        this.destChainTypeField = InstrumentParameterMappingDestChainType.ModulationSet;
        this.destChainIndexField = -1;
        this.destDeviceIndexField = -1;
        this.destParameterIndexField = -1;
        this.minField = ((float)(0F));
        this.maxField = ((float)(1F));
        this.scalingField = InstrumentParameterMappingScaling.Linear;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentParameterMappingDestChainType.ModulationSet)]
    public InstrumentParameterMappingDestChainType DestChainType {
        get {
            return this.destChainTypeField;
        }
        set {
            this.destChainTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DestChainIndex {
        get {
            return this.destChainIndexField;
        }
        set {
            this.destChainIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DestDeviceIndex {
        get {
            return this.destDeviceIndexField;
        }
        set {
            this.destDeviceIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int DestParameterIndex {
        get {
            return this.destParameterIndexField;
        }
        set {
            this.destParameterIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentParameterMappingScaling.Linear)]
    public InstrumentParameterMappingScaling Scaling {
        get {
            return this.scalingField;
        }
        set {
            this.scalingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentParameterMappingDestChainType {
    
    /// <remarks/>
    ModulationSet,
    
    /// <remarks/>
    SampleDSP,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentParameterMappingScaling {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Fast")]
    LogFast,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Log Slow")]
    LogSlow,
    
    /// <remarks/>
    Linear,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Slow")]
    ExpSlow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Exp Fast")]
    ExpFast,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentMacroParameter {
    
    private float valueField;
    
    private InstrumentMacroParameterVisualization visualizationField;
    
    private InstrumentMacroParameterMidiMappings midiMappingsField;
    
    private string nameField;
    
    private InstrumentMacroParameterMappings mappingsField;
    
    private string typeField;
    
    public InstrumentMacroParameter() {
        this.valueField = ((float)(50F));
        this.visualizationField = InstrumentMacroParameterVisualization.Deviceonly;
        this.nameField = "Macro 1";
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "50")]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentMacroParameterVisualization.Deviceonly)]
    public InstrumentMacroParameterVisualization Visualization {
        get {
            return this.visualizationField;
        }
        set {
            this.visualizationField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameterMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Macro 1")]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameterMappings Mappings {
        get {
            return this.mappingsField;
        }
        set {
            this.mappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentMacroParameterVisualization {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Dont Show")]
    DontShow,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Device only")]
    Deviceonly,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Mixer and Device")]
    MixerandDevice,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentMacroParameterMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class InstrumentMacroParameterMappings {
    
    private InstrumentParameterMapping[] mappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Mapping")]
    public InstrumentParameterMapping[] Mapping {
        get {
            return this.mappingField;
        }
        set {
            this.mappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InstrumentGlobalProperties {
    
    private InstrumentMacroParameter macro0Field;
    
    private InstrumentMacroParameter macro1Field;
    
    private InstrumentMacroParameter macro2Field;
    
    private InstrumentMacroParameter macro3Field;
    
    private InstrumentMacroParameter macro4Field;
    
    private InstrumentMacroParameter macro5Field;
    
    private InstrumentMacroParameter macro6Field;
    
    private InstrumentMacroParameter macro7Field;
    
    private InstrumentMacroParameter pitchbendMacroField;
    
    private InstrumentMacroParameter modulationWheelMacroField;
    
    private InstrumentMacroParameter channelPressureMacroField;
    
    private bool macrosVisibleField;
    
    private float volumeField;
    
    private int transposeField;
    
    private InstrumentGlobalPropertiesScale scaleField;
    
    private InstrumentGlobalPropertiesScaleKey scaleKeyField;
    
    private InstrumentGlobalPropertiesQuantize quantizeField;
    
    private bool monophonicField;
    
    private int monophonicGlideField;
    
    private string[] commentsField;
    
    private bool showCommentsAfterLoadingField;
    
    private float beatsPerMinField;
    
    private string typeField;
    
    public InstrumentGlobalProperties() {
        this.macrosVisibleField = false;
        this.volumeField = ((float)(1F));
        this.transposeField = 0;
        this.scaleField = InstrumentGlobalPropertiesScale.None;
        this.scaleKeyField = InstrumentGlobalPropertiesScaleKey.C;
        this.quantizeField = InstrumentGlobalPropertiesQuantize.None;
        this.monophonicField = false;
        this.monophonicGlideField = 0;
        this.showCommentsAfterLoadingField = false;
        this.beatsPerMinField = ((float)(0F));
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro0 {
        get {
            return this.macro0Field;
        }
        set {
            this.macro0Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro1 {
        get {
            return this.macro1Field;
        }
        set {
            this.macro1Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro2 {
        get {
            return this.macro2Field;
        }
        set {
            this.macro2Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro3 {
        get {
            return this.macro3Field;
        }
        set {
            this.macro3Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro4 {
        get {
            return this.macro4Field;
        }
        set {
            this.macro4Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro5 {
        get {
            return this.macro5Field;
        }
        set {
            this.macro5Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro6 {
        get {
            return this.macro6Field;
        }
        set {
            this.macro6Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter Macro7 {
        get {
            return this.macro7Field;
        }
        set {
            this.macro7Field = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter PitchbendMacro {
        get {
            return this.pitchbendMacroField;
        }
        set {
            this.pitchbendMacroField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter ModulationWheelMacro {
        get {
            return this.modulationWheelMacroField;
        }
        set {
            this.modulationWheelMacroField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMacroParameter ChannelPressureMacro {
        get {
            return this.channelPressureMacroField;
        }
        set {
            this.channelPressureMacroField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool MacrosVisible {
        get {
            return this.macrosVisibleField;
        }
        set {
            this.macrosVisibleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "1")]
    public float Volume {
        get {
            return this.volumeField;
        }
        set {
            this.volumeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int Transpose {
        get {
            return this.transposeField;
        }
        set {
            this.transposeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentGlobalPropertiesScale.None)]
    public InstrumentGlobalPropertiesScale Scale {
        get {
            return this.scaleField;
        }
        set {
            this.scaleField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentGlobalPropertiesScaleKey.C)]
    public InstrumentGlobalPropertiesScaleKey ScaleKey {
        get {
            return this.scaleKeyField;
        }
        set {
            this.scaleKeyField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(InstrumentGlobalPropertiesQuantize.None)]
    public InstrumentGlobalPropertiesQuantize Quantize {
        get {
            return this.quantizeField;
        }
        set {
            this.quantizeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool Monophonic {
        get {
            return this.monophonicField;
        }
        set {
            this.monophonicField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int MonophonicGlide {
        get {
            return this.monophonicGlideField;
        }
        set {
            this.monophonicGlideField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Comment", IsNullable=false)]
    public string[] Comments {
        get {
            return this.commentsField;
        }
        set {
            this.commentsField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ShowCommentsAfterLoading {
        get {
            return this.showCommentsAfterLoadingField;
        }
        set {
            this.showCommentsAfterLoadingField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
    public float BeatsPerMin {
        get {
            return this.beatsPerMinField;
        }
        set {
            this.beatsPerMinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentGlobalPropertiesScale {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Natural Major")]
    NaturalMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Natural Minor")]
    NaturalMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Pentatonic Major")]
    PentatonicMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Pentatonic Minor")]
    PentatonicMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Pentatonic Egyptian")]
    PentatonicEgyptian,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Blues Major")]
    BluesMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Blues Minor")]
    BluesMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Whole Tone")]
    WholeTone,
    
    /// <remarks/>
    Augmented,
    
    /// <remarks/>
    Prometheus,
    
    /// <remarks/>
    Tritone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Harmonic Major")]
    HarmonicMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Harmonic Minor")]
    HarmonicMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Melodic Minor")]
    MelodicMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("All Minor")]
    AllMinor,
    
    /// <remarks/>
    Dorian,
    
    /// <remarks/>
    Phrygian,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Phrygian Dominant")]
    PhrygianDominant,
    
    /// <remarks/>
    Lydian,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Lydian Augmented")]
    LydianAugmented,
    
    /// <remarks/>
    Mixolydian,
    
    /// <remarks/>
    Locrian,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Locrian Major")]
    LocrianMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Super Locrian")]
    SuperLocrian,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Neapolitan Major")]
    NeapolitanMajor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Neapolitan Minor")]
    NeapolitanMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Romanian Minor")]
    RomanianMinor,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Spanish Gypsy")]
    SpanishGypsy,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Hungarian Gypsy")]
    HungarianGypsy,
    
    /// <remarks/>
    Enigmatic,
    
    /// <remarks/>
    Overtone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Diminished Half")]
    DiminishedHalf,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Diminished Whole")]
    DiminishedWhole,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Spanish Eight-Tone")]
    SpanishEightTone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Nine-Tone Scale")]
    NineToneScale,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentGlobalPropertiesScaleKey {
    
    /// <remarks/>
    C,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("C#")]
    C1,
    
    /// <remarks/>
    D,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("D#")]
    D1,
    
    /// <remarks/>
    E,
    
    /// <remarks/>
    F,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("F#")]
    F1,
    
    /// <remarks/>
    G,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("G#")]
    G1,
    
    /// <remarks/>
    A,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("A#")]
    A1,
    
    /// <remarks/>
    B,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum InstrumentGlobalPropertiesQuantize {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Line,
    
    /// <remarks/>
    Beat,
    
    /// <remarks/>
    Bar,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RenoiseInstrument {
    
    private string selectedPresetNameField;
    
    private string selectedPresetLibraryField;
    
    private bool selectedPresetIsModifiedField;
    
    private string nameField;
    
    private int copyIntoNewSampleNameCounterField;
    
    private int copyIntoNewInstrumentNameCounterField;
    
    private InstrumentGlobalProperties globalPropertiesField;
    
    private InstrumentMidiInputProperties midiInputPropertiesField;
    
    private InstrumentPhraseGenerator phraseGeneratorField;
    
    private InstrumentSampleGenerator sampleGeneratorField;
    
    private InstrumentPluginGenerator pluginGeneratorField;
    
    private InstrumentMidiGenerator midiGeneratorField;
    
    private RenoiseInstrumentActiveGeneratorTab activeGeneratorTabField;
    
    private string typeField;
    
    public RenoiseInstrument() {
        this.selectedPresetNameField = "Init";
        this.selectedPresetLibraryField = "Bundled Content";
        this.selectedPresetIsModifiedField = false;
        this.copyIntoNewSampleNameCounterField = 0;
        this.copyIntoNewInstrumentNameCounterField = 0;
        this.activeGeneratorTabField = RenoiseInstrumentActiveGeneratorTab.Samples;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Init")]
    public string SelectedPresetName {
        get {
            return this.selectedPresetNameField;
        }
        set {
            this.selectedPresetNameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute("Bundled Content")]
    public string SelectedPresetLibrary {
        get {
            return this.selectedPresetLibraryField;
        }
        set {
            this.selectedPresetLibraryField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool SelectedPresetIsModified {
        get {
            return this.selectedPresetIsModifiedField;
        }
        set {
            this.selectedPresetIsModifiedField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int CopyIntoNewSampleNameCounter {
        get {
            return this.copyIntoNewSampleNameCounterField;
        }
        set {
            this.copyIntoNewSampleNameCounterField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(0)]
    public int CopyIntoNewInstrumentNameCounter {
        get {
            return this.copyIntoNewInstrumentNameCounterField;
        }
        set {
            this.copyIntoNewInstrumentNameCounterField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentGlobalProperties GlobalProperties {
        get {
            return this.globalPropertiesField;
        }
        set {
            this.globalPropertiesField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMidiInputProperties MidiInputProperties {
        get {
            return this.midiInputPropertiesField;
        }
        set {
            this.midiInputPropertiesField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPhraseGenerator PhraseGenerator {
        get {
            return this.phraseGeneratorField;
        }
        set {
            this.phraseGeneratorField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentSampleGenerator SampleGenerator {
        get {
            return this.sampleGeneratorField;
        }
        set {
            this.sampleGeneratorField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentPluginGenerator PluginGenerator {
        get {
            return this.pluginGeneratorField;
        }
        set {
            this.pluginGeneratorField = value;
        }
    }
    
    /// <remarks/>
    public InstrumentMidiGenerator MidiGenerator {
        get {
            return this.midiGeneratorField;
        }
        set {
            this.midiGeneratorField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(RenoiseInstrumentActiveGeneratorTab.Samples)]
    public RenoiseInstrumentActiveGeneratorTab ActiveGeneratorTab {
        get {
            return this.activeGeneratorTabField;
        }
        set {
            this.activeGeneratorTabField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum RenoiseInstrumentActiveGeneratorTab {
    
    /// <remarks/>
    Samples,
    
    /// <remarks/>
    Plugin,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Ext Midi")]
    ExtMidi,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class OscMapper {
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiActionMappings {
    
    private string actionField;
    
    private MidiActionMappingsMidiMappings midiMappingsField;
    
    private string typeField;
    
    /// <remarks/>
    public string Action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
    
    /// <remarks/>
    public MidiActionMappingsMidiMappings MidiMappings {
        get {
            return this.midiMappingsField;
        }
        set {
            this.midiMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class MidiActionMappingsMidiMappings {
    
    private MidiMapping[] midiMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MidiMapping")]
    public MidiMapping[] MidiMapping {
        get {
            return this.midiMappingField;
        }
        set {
            this.midiMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MidiMapper {
    
    private MidiMapperActionMappings actionMappingsField;
    
    private string typeField;
    
    /// <remarks/>
    public MidiMapperActionMappings ActionMappings {
        get {
            return this.actionMappingsField;
        }
        set {
            this.actionMappingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class MidiMapperActionMappings {
    
    private MidiActionMappings[] actionMappingField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActionMapping")]
    public MidiActionMappings[] ActionMapping {
        get {
            return this.actionMappingField;
        }
        set {
            this.actionMappingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RecordManager {
    
    private int linkedTrackIndexField;
    
    private string typeField;
    
    public RecordManager() {
        this.linkedTrackIndexField = -1;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(-1)]
    public int LinkedTrackIndex {
        get {
            return this.linkedTrackIndexField;
        }
        set {
            this.linkedTrackIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="RenoiseSong.ScriptingToolData")]
public partial class RenoiseSongScriptingToolData1 {
    
    private string toolIdField;
    
    private string dataField;
    
    private string typeField;
    
    /// <remarks/>
    public string ToolId {
        get {
            return this.toolIdField;
        }
        set {
            this.toolIdField = value;
        }
    }
    
    /// <remarks/>
    public string Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RenoiseSongScriptingToolData {
    
    private RenoiseSongScriptingToolData1[] scriptingToolDataItemField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ScriptingToolDataItem")]
    public RenoiseSongScriptingToolData1[] ScriptingToolDataItem {
        get {
            return this.scriptingToolDataItemField;
        }
        set {
            this.scriptingToolDataItemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RenoiseSongInstruments {
    
    private RenoiseInstrument[] instrumentField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Instrument")]
    public RenoiseInstrument[] Instrument {
        get {
            return this.instrumentField;
        }
        set {
            this.instrumentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public partial class RenoiseSongTracks {
    
    private SequencerTrack[] sequencerTrackField;
    
    private SequencerGroupTrack[] sequencerGroupTrackField;
    
    private SequencerMasterTrack[] sequencerMasterTrackField;
    
    private SequencerSendTrack[] sequencerSendTrackField;
    
    private string typeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SequencerTrack")]
    public SequencerTrack[] SequencerTrack {
        get {
            return this.sequencerTrackField;
        }
        set {
            this.sequencerTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SequencerGroupTrack")]
    public SequencerGroupTrack[] SequencerGroupTrack {
        get {
            return this.sequencerGroupTrackField;
        }
        set {
            this.sequencerGroupTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SequencerMasterTrack")]
    public SequencerMasterTrack[] SequencerMasterTrack {
        get {
            return this.sequencerMasterTrackField;
        }
        set {
            this.sequencerMasterTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SequencerSendTrack")]
    public SequencerSendTrack[] SequencerSendTrack {
        get {
            return this.sequencerSendTrackField;
        }
        set {
            this.sequencerSendTrackField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
public enum RenoiseSongLastSoloedOutMode {
    
    /// <remarks/>
    Active,
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Mute,
}
